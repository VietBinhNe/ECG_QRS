
QRS_ECG.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004970  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000074  08004b10  08004b10  00005b10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b84  08004b84  0000605c  2**0
                  CONTENTS
  4 .ARM          00000008  08004b84  08004b84  00005b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b8c  08004b8c  0000605c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b8c  08004b8c  00005b8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004b90  08004b90  00005b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08004b94  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000628  2000005c  08004bf0  0000605c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000684  08004bf0  00006684  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000605c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000e7d2  00000000  00000000  0000608c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000222f  00000000  00000000  0001485e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000dd8  00000000  00000000  00016a90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000abc  00000000  00000000  00017868  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001843b  00000000  00000000  00018324  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011382  00000000  00000000  0003075f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009a360  00000000  00000000  00041ae1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000dbe41  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003ed4  00000000  00000000  000dbe84  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  000dfd58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004af8 	.word	0x08004af8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08004af8 	.word	0x08004af8

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b96a 	b.w	800057c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	460c      	mov	r4, r1
 80002c8:	2b00      	cmp	r3, #0
 80002ca:	d14e      	bne.n	800036a <__udivmoddi4+0xaa>
 80002cc:	4694      	mov	ip, r2
 80002ce:	458c      	cmp	ip, r1
 80002d0:	4686      	mov	lr, r0
 80002d2:	fab2 f282 	clz	r2, r2
 80002d6:	d962      	bls.n	800039e <__udivmoddi4+0xde>
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0320 	rsb	r3, r2, #32
 80002de:	4091      	lsls	r1, r2
 80002e0:	fa20 f303 	lsr.w	r3, r0, r3
 80002e4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002e8:	4319      	orrs	r1, r3
 80002ea:	fa00 fe02 	lsl.w	lr, r0, r2
 80002ee:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002f2:	fa1f f68c 	uxth.w	r6, ip
 80002f6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002fa:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002fe:	fb07 1114 	mls	r1, r7, r4, r1
 8000302:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000306:	fb04 f106 	mul.w	r1, r4, r6
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f104 30ff 	add.w	r0, r4, #4294967295
 8000316:	f080 8112 	bcs.w	800053e <__udivmoddi4+0x27e>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 810f 	bls.w	800053e <__udivmoddi4+0x27e>
 8000320:	3c02      	subs	r4, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a59      	subs	r1, r3, r1
 8000326:	fa1f f38e 	uxth.w	r3, lr
 800032a:	fbb1 f0f7 	udiv	r0, r1, r7
 800032e:	fb07 1110 	mls	r1, r7, r0, r1
 8000332:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000336:	fb00 f606 	mul.w	r6, r0, r6
 800033a:	429e      	cmp	r6, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x94>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f100 31ff 	add.w	r1, r0, #4294967295
 8000346:	f080 80fc 	bcs.w	8000542 <__udivmoddi4+0x282>
 800034a:	429e      	cmp	r6, r3
 800034c:	f240 80f9 	bls.w	8000542 <__udivmoddi4+0x282>
 8000350:	4463      	add	r3, ip
 8000352:	3802      	subs	r0, #2
 8000354:	1b9b      	subs	r3, r3, r6
 8000356:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800035a:	2100      	movs	r1, #0
 800035c:	b11d      	cbz	r5, 8000366 <__udivmoddi4+0xa6>
 800035e:	40d3      	lsrs	r3, r2
 8000360:	2200      	movs	r2, #0
 8000362:	e9c5 3200 	strd	r3, r2, [r5]
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d905      	bls.n	800037a <__udivmoddi4+0xba>
 800036e:	b10d      	cbz	r5, 8000374 <__udivmoddi4+0xb4>
 8000370:	e9c5 0100 	strd	r0, r1, [r5]
 8000374:	2100      	movs	r1, #0
 8000376:	4608      	mov	r0, r1
 8000378:	e7f5      	b.n	8000366 <__udivmoddi4+0xa6>
 800037a:	fab3 f183 	clz	r1, r3
 800037e:	2900      	cmp	r1, #0
 8000380:	d146      	bne.n	8000410 <__udivmoddi4+0x150>
 8000382:	42a3      	cmp	r3, r4
 8000384:	d302      	bcc.n	800038c <__udivmoddi4+0xcc>
 8000386:	4290      	cmp	r0, r2
 8000388:	f0c0 80f0 	bcc.w	800056c <__udivmoddi4+0x2ac>
 800038c:	1a86      	subs	r6, r0, r2
 800038e:	eb64 0303 	sbc.w	r3, r4, r3
 8000392:	2001      	movs	r0, #1
 8000394:	2d00      	cmp	r5, #0
 8000396:	d0e6      	beq.n	8000366 <__udivmoddi4+0xa6>
 8000398:	e9c5 6300 	strd	r6, r3, [r5]
 800039c:	e7e3      	b.n	8000366 <__udivmoddi4+0xa6>
 800039e:	2a00      	cmp	r2, #0
 80003a0:	f040 8090 	bne.w	80004c4 <__udivmoddi4+0x204>
 80003a4:	eba1 040c 	sub.w	r4, r1, ip
 80003a8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003ac:	fa1f f78c 	uxth.w	r7, ip
 80003b0:	2101      	movs	r1, #1
 80003b2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003b6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003ba:	fb08 4416 	mls	r4, r8, r6, r4
 80003be:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003c2:	fb07 f006 	mul.w	r0, r7, r6
 80003c6:	4298      	cmp	r0, r3
 80003c8:	d908      	bls.n	80003dc <__udivmoddi4+0x11c>
 80003ca:	eb1c 0303 	adds.w	r3, ip, r3
 80003ce:	f106 34ff 	add.w	r4, r6, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x11a>
 80003d4:	4298      	cmp	r0, r3
 80003d6:	f200 80cd 	bhi.w	8000574 <__udivmoddi4+0x2b4>
 80003da:	4626      	mov	r6, r4
 80003dc:	1a1c      	subs	r4, r3, r0
 80003de:	fa1f f38e 	uxth.w	r3, lr
 80003e2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003e6:	fb08 4410 	mls	r4, r8, r0, r4
 80003ea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003ee:	fb00 f707 	mul.w	r7, r0, r7
 80003f2:	429f      	cmp	r7, r3
 80003f4:	d908      	bls.n	8000408 <__udivmoddi4+0x148>
 80003f6:	eb1c 0303 	adds.w	r3, ip, r3
 80003fa:	f100 34ff 	add.w	r4, r0, #4294967295
 80003fe:	d202      	bcs.n	8000406 <__udivmoddi4+0x146>
 8000400:	429f      	cmp	r7, r3
 8000402:	f200 80b0 	bhi.w	8000566 <__udivmoddi4+0x2a6>
 8000406:	4620      	mov	r0, r4
 8000408:	1bdb      	subs	r3, r3, r7
 800040a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800040e:	e7a5      	b.n	800035c <__udivmoddi4+0x9c>
 8000410:	f1c1 0620 	rsb	r6, r1, #32
 8000414:	408b      	lsls	r3, r1
 8000416:	fa22 f706 	lsr.w	r7, r2, r6
 800041a:	431f      	orrs	r7, r3
 800041c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000420:	fa04 f301 	lsl.w	r3, r4, r1
 8000424:	ea43 030c 	orr.w	r3, r3, ip
 8000428:	40f4      	lsrs	r4, r6
 800042a:	fa00 f801 	lsl.w	r8, r0, r1
 800042e:	0c38      	lsrs	r0, r7, #16
 8000430:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000434:	fbb4 fef0 	udiv	lr, r4, r0
 8000438:	fa1f fc87 	uxth.w	ip, r7
 800043c:	fb00 441e 	mls	r4, r0, lr, r4
 8000440:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000444:	fb0e f90c 	mul.w	r9, lr, ip
 8000448:	45a1      	cmp	r9, r4
 800044a:	fa02 f201 	lsl.w	r2, r2, r1
 800044e:	d90a      	bls.n	8000466 <__udivmoddi4+0x1a6>
 8000450:	193c      	adds	r4, r7, r4
 8000452:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000456:	f080 8084 	bcs.w	8000562 <__udivmoddi4+0x2a2>
 800045a:	45a1      	cmp	r9, r4
 800045c:	f240 8081 	bls.w	8000562 <__udivmoddi4+0x2a2>
 8000460:	f1ae 0e02 	sub.w	lr, lr, #2
 8000464:	443c      	add	r4, r7
 8000466:	eba4 0409 	sub.w	r4, r4, r9
 800046a:	fa1f f983 	uxth.w	r9, r3
 800046e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000472:	fb00 4413 	mls	r4, r0, r3, r4
 8000476:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800047a:	fb03 fc0c 	mul.w	ip, r3, ip
 800047e:	45a4      	cmp	ip, r4
 8000480:	d907      	bls.n	8000492 <__udivmoddi4+0x1d2>
 8000482:	193c      	adds	r4, r7, r4
 8000484:	f103 30ff 	add.w	r0, r3, #4294967295
 8000488:	d267      	bcs.n	800055a <__udivmoddi4+0x29a>
 800048a:	45a4      	cmp	ip, r4
 800048c:	d965      	bls.n	800055a <__udivmoddi4+0x29a>
 800048e:	3b02      	subs	r3, #2
 8000490:	443c      	add	r4, r7
 8000492:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000496:	fba0 9302 	umull	r9, r3, r0, r2
 800049a:	eba4 040c 	sub.w	r4, r4, ip
 800049e:	429c      	cmp	r4, r3
 80004a0:	46ce      	mov	lr, r9
 80004a2:	469c      	mov	ip, r3
 80004a4:	d351      	bcc.n	800054a <__udivmoddi4+0x28a>
 80004a6:	d04e      	beq.n	8000546 <__udivmoddi4+0x286>
 80004a8:	b155      	cbz	r5, 80004c0 <__udivmoddi4+0x200>
 80004aa:	ebb8 030e 	subs.w	r3, r8, lr
 80004ae:	eb64 040c 	sbc.w	r4, r4, ip
 80004b2:	fa04 f606 	lsl.w	r6, r4, r6
 80004b6:	40cb      	lsrs	r3, r1
 80004b8:	431e      	orrs	r6, r3
 80004ba:	40cc      	lsrs	r4, r1
 80004bc:	e9c5 6400 	strd	r6, r4, [r5]
 80004c0:	2100      	movs	r1, #0
 80004c2:	e750      	b.n	8000366 <__udivmoddi4+0xa6>
 80004c4:	f1c2 0320 	rsb	r3, r2, #32
 80004c8:	fa20 f103 	lsr.w	r1, r0, r3
 80004cc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004d0:	fa24 f303 	lsr.w	r3, r4, r3
 80004d4:	4094      	lsls	r4, r2
 80004d6:	430c      	orrs	r4, r1
 80004d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004dc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004e0:	fa1f f78c 	uxth.w	r7, ip
 80004e4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004e8:	fb08 3110 	mls	r1, r8, r0, r3
 80004ec:	0c23      	lsrs	r3, r4, #16
 80004ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004f2:	fb00 f107 	mul.w	r1, r0, r7
 80004f6:	4299      	cmp	r1, r3
 80004f8:	d908      	bls.n	800050c <__udivmoddi4+0x24c>
 80004fa:	eb1c 0303 	adds.w	r3, ip, r3
 80004fe:	f100 36ff 	add.w	r6, r0, #4294967295
 8000502:	d22c      	bcs.n	800055e <__udivmoddi4+0x29e>
 8000504:	4299      	cmp	r1, r3
 8000506:	d92a      	bls.n	800055e <__udivmoddi4+0x29e>
 8000508:	3802      	subs	r0, #2
 800050a:	4463      	add	r3, ip
 800050c:	1a5b      	subs	r3, r3, r1
 800050e:	b2a4      	uxth	r4, r4
 8000510:	fbb3 f1f8 	udiv	r1, r3, r8
 8000514:	fb08 3311 	mls	r3, r8, r1, r3
 8000518:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800051c:	fb01 f307 	mul.w	r3, r1, r7
 8000520:	42a3      	cmp	r3, r4
 8000522:	d908      	bls.n	8000536 <__udivmoddi4+0x276>
 8000524:	eb1c 0404 	adds.w	r4, ip, r4
 8000528:	f101 36ff 	add.w	r6, r1, #4294967295
 800052c:	d213      	bcs.n	8000556 <__udivmoddi4+0x296>
 800052e:	42a3      	cmp	r3, r4
 8000530:	d911      	bls.n	8000556 <__udivmoddi4+0x296>
 8000532:	3902      	subs	r1, #2
 8000534:	4464      	add	r4, ip
 8000536:	1ae4      	subs	r4, r4, r3
 8000538:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800053c:	e739      	b.n	80003b2 <__udivmoddi4+0xf2>
 800053e:	4604      	mov	r4, r0
 8000540:	e6f0      	b.n	8000324 <__udivmoddi4+0x64>
 8000542:	4608      	mov	r0, r1
 8000544:	e706      	b.n	8000354 <__udivmoddi4+0x94>
 8000546:	45c8      	cmp	r8, r9
 8000548:	d2ae      	bcs.n	80004a8 <__udivmoddi4+0x1e8>
 800054a:	ebb9 0e02 	subs.w	lr, r9, r2
 800054e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000552:	3801      	subs	r0, #1
 8000554:	e7a8      	b.n	80004a8 <__udivmoddi4+0x1e8>
 8000556:	4631      	mov	r1, r6
 8000558:	e7ed      	b.n	8000536 <__udivmoddi4+0x276>
 800055a:	4603      	mov	r3, r0
 800055c:	e799      	b.n	8000492 <__udivmoddi4+0x1d2>
 800055e:	4630      	mov	r0, r6
 8000560:	e7d4      	b.n	800050c <__udivmoddi4+0x24c>
 8000562:	46d6      	mov	lr, sl
 8000564:	e77f      	b.n	8000466 <__udivmoddi4+0x1a6>
 8000566:	4463      	add	r3, ip
 8000568:	3802      	subs	r0, #2
 800056a:	e74d      	b.n	8000408 <__udivmoddi4+0x148>
 800056c:	4606      	mov	r6, r0
 800056e:	4623      	mov	r3, r4
 8000570:	4608      	mov	r0, r1
 8000572:	e70f      	b.n	8000394 <__udivmoddi4+0xd4>
 8000574:	3e02      	subs	r6, #2
 8000576:	4463      	add	r3, ip
 8000578:	e730      	b.n	80003dc <__udivmoddi4+0x11c>
 800057a:	bf00      	nop

0800057c <__aeabi_idiv0>:
 800057c:	4770      	bx	lr
 800057e:	bf00      	nop

08000580 <cb_init>:
 */
static uint32_t cb_read_byte(cbuffer_t *cb, uint8_t *byte);

/* Function definitions ----------------------------------------------- */
uint32_t cb_init(cbuffer_t *cb, void *buf, uint32_t size)
{
 8000580:	b480      	push	{r7}
 8000582:	b085      	sub	sp, #20
 8000584:	af00      	add	r7, sp, #0
 8000586:	60f8      	str	r0, [r7, #12]
 8000588:	60b9      	str	r1, [r7, #8]
 800058a:	607a      	str	r2, [r7, #4]
    if (cb == NULL || buf == NULL || size >= CB_MAX_SIZE)
 800058c:	68fb      	ldr	r3, [r7, #12]
 800058e:	2b00      	cmp	r3, #0
 8000590:	d006      	beq.n	80005a0 <cb_init+0x20>
 8000592:	68bb      	ldr	r3, [r7, #8]
 8000594:	2b00      	cmp	r3, #0
 8000596:	d003      	beq.n	80005a0 <cb_init+0x20>
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800059e:	d302      	bcc.n	80005a6 <cb_init+0x26>
        return CB_ERROR;
 80005a0:	f04f 33ff 	mov.w	r3, #4294967295
 80005a4:	e012      	b.n	80005cc <cb_init+0x4c>

    cb->data = buf;
 80005a6:	68fb      	ldr	r3, [r7, #12]
 80005a8:	68ba      	ldr	r2, [r7, #8]
 80005aa:	601a      	str	r2, [r3, #0]
    cb->size = size;
 80005ac:	68fb      	ldr	r3, [r7, #12]
 80005ae:	687a      	ldr	r2, [r7, #4]
 80005b0:	605a      	str	r2, [r3, #4]
    cb->writer = 0;
 80005b2:	68fb      	ldr	r3, [r7, #12]
 80005b4:	2200      	movs	r2, #0
 80005b6:	609a      	str	r2, [r3, #8]
    cb->reader = 0;
 80005b8:	68fb      	ldr	r3, [r7, #12]
 80005ba:	2200      	movs	r2, #0
 80005bc:	60da      	str	r2, [r3, #12]
    cb->overflow = 0;
 80005be:	68fb      	ldr	r3, [r7, #12]
 80005c0:	2200      	movs	r2, #0
 80005c2:	611a      	str	r2, [r3, #16]
    cb->active = 1;
 80005c4:	68fb      	ldr	r3, [r7, #12]
 80005c6:	2201      	movs	r2, #1
 80005c8:	751a      	strb	r2, [r3, #20]

    return CB_SUCCESS;
 80005ca:	2300      	movs	r3, #0
}
 80005cc:	4618      	mov	r0, r3
 80005ce:	3714      	adds	r7, #20
 80005d0:	46bd      	mov	sp, r7
 80005d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d6:	4770      	bx	lr

080005d8 <cb_read>:

    return CB_SUCCESS;
}

uint32_t cb_read(cbuffer_t *cb, void *buf, uint32_t nbytes)
{
 80005d8:	b580      	push	{r7, lr}
 80005da:	b088      	sub	sp, #32
 80005dc:	af00      	add	r7, sp, #0
 80005de:	60f8      	str	r0, [r7, #12]
 80005e0:	60b9      	str	r1, [r7, #8]
 80005e2:	607a      	str	r2, [r7, #4]
    int data_count = 0;
 80005e4:	2300      	movs	r3, #0
 80005e6:	617b      	str	r3, [r7, #20]
    int num_avail_bytes = 0;
 80005e8:	2300      	movs	r3, #0
 80005ea:	61fb      	str	r3, [r7, #28]
    if (cb == NULL || buf == NULL || !cb->active)
 80005ec:	68fb      	ldr	r3, [r7, #12]
 80005ee:	2b00      	cmp	r3, #0
 80005f0:	d00a      	beq.n	8000608 <cb_read+0x30>
 80005f2:	68bb      	ldr	r3, [r7, #8]
 80005f4:	2b00      	cmp	r3, #0
 80005f6:	d007      	beq.n	8000608 <cb_read+0x30>
 80005f8:	68fb      	ldr	r3, [r7, #12]
 80005fa:	7d1b      	ldrb	r3, [r3, #20]
 80005fc:	b2db      	uxtb	r3, r3
 80005fe:	f083 0301 	eor.w	r3, r3, #1
 8000602:	b2db      	uxtb	r3, r3
 8000604:	2b00      	cmp	r3, #0
 8000606:	d002      	beq.n	800060e <cb_read+0x36>
        return CB_ERROR;
 8000608:	f04f 33ff 	mov.w	r3, #4294967295
 800060c:	e025      	b.n	800065a <cb_read+0x82>

    cb->active = 0;
 800060e:	68fb      	ldr	r3, [r7, #12]
 8000610:	2200      	movs	r2, #0
 8000612:	751a      	strb	r2, [r3, #20]
    data_count = cb_data_count(cb);
 8000614:	68f8      	ldr	r0, [r7, #12]
 8000616:	f000 f872 	bl	80006fe <cb_data_count>
 800061a:	4603      	mov	r3, r0
 800061c:	617b      	str	r3, [r7, #20]
    if (data_count >= nbytes)
 800061e:	697b      	ldr	r3, [r7, #20]
 8000620:	687a      	ldr	r2, [r7, #4]
 8000622:	429a      	cmp	r2, r3
 8000624:	d802      	bhi.n	800062c <cb_read+0x54>
        num_avail_bytes = nbytes;
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	61fb      	str	r3, [r7, #28]
 800062a:	e001      	b.n	8000630 <cb_read+0x58>
    else
        num_avail_bytes = data_count;
 800062c:	697b      	ldr	r3, [r7, #20]
 800062e:	61fb      	str	r3, [r7, #28]

    for (int i = 0; i < num_avail_bytes; i++)
 8000630:	2300      	movs	r3, #0
 8000632:	61bb      	str	r3, [r7, #24]
 8000634:	e009      	b.n	800064a <cb_read+0x72>
        cb_read_byte(cb, (uint8_t *)buf + i);
 8000636:	69bb      	ldr	r3, [r7, #24]
 8000638:	68ba      	ldr	r2, [r7, #8]
 800063a:	4413      	add	r3, r2
 800063c:	4619      	mov	r1, r3
 800063e:	68f8      	ldr	r0, [r7, #12]
 8000640:	f000 f8e6 	bl	8000810 <cb_read_byte>
    for (int i = 0; i < num_avail_bytes; i++)
 8000644:	69bb      	ldr	r3, [r7, #24]
 8000646:	3301      	adds	r3, #1
 8000648:	61bb      	str	r3, [r7, #24]
 800064a:	69ba      	ldr	r2, [r7, #24]
 800064c:	69fb      	ldr	r3, [r7, #28]
 800064e:	429a      	cmp	r2, r3
 8000650:	dbf1      	blt.n	8000636 <cb_read+0x5e>

    cb->active = 1;
 8000652:	68fb      	ldr	r3, [r7, #12]
 8000654:	2201      	movs	r2, #1
 8000656:	751a      	strb	r2, [r3, #20]
    return num_avail_bytes;
 8000658:	69fb      	ldr	r3, [r7, #28]
}
 800065a:	4618      	mov	r0, r3
 800065c:	3720      	adds	r7, #32
 800065e:	46bd      	mov	sp, r7
 8000660:	bd80      	pop	{r7, pc}

08000662 <cb_write>:

uint32_t cb_write(cbuffer_t *cb, void *buf, uint32_t nbytes)
{
 8000662:	b580      	push	{r7, lr}
 8000664:	b088      	sub	sp, #32
 8000666:	af00      	add	r7, sp, #0
 8000668:	60f8      	str	r0, [r7, #12]
 800066a:	60b9      	str	r1, [r7, #8]
 800066c:	607a      	str	r2, [r7, #4]
    int space_count = 0;
 800066e:	2300      	movs	r3, #0
 8000670:	617b      	str	r3, [r7, #20]
    int num_avail_bytes = 0;
 8000672:	2300      	movs	r3, #0
 8000674:	61fb      	str	r3, [r7, #28]
    if (cb == NULL || buf == NULL || !cb->active)
 8000676:	68fb      	ldr	r3, [r7, #12]
 8000678:	2b00      	cmp	r3, #0
 800067a:	d00a      	beq.n	8000692 <cb_write+0x30>
 800067c:	68bb      	ldr	r3, [r7, #8]
 800067e:	2b00      	cmp	r3, #0
 8000680:	d007      	beq.n	8000692 <cb_write+0x30>
 8000682:	68fb      	ldr	r3, [r7, #12]
 8000684:	7d1b      	ldrb	r3, [r3, #20]
 8000686:	b2db      	uxtb	r3, r3
 8000688:	f083 0301 	eor.w	r3, r3, #1
 800068c:	b2db      	uxtb	r3, r3
 800068e:	2b00      	cmp	r3, #0
 8000690:	d002      	beq.n	8000698 <cb_write+0x36>
        return CB_ERROR;
 8000692:	f04f 33ff 	mov.w	r3, #4294967295
 8000696:	e02e      	b.n	80006f6 <cb_write+0x94>

    cb->active = 0;
 8000698:	68fb      	ldr	r3, [r7, #12]
 800069a:	2200      	movs	r2, #0
 800069c:	751a      	strb	r2, [r3, #20]
    space_count = cb_space_count(cb);
 800069e:	68f8      	ldr	r0, [r7, #12]
 80006a0:	f000 f856 	bl	8000750 <cb_space_count>
 80006a4:	4603      	mov	r3, r0
 80006a6:	617b      	str	r3, [r7, #20]
    if (space_count >= nbytes)
 80006a8:	697b      	ldr	r3, [r7, #20]
 80006aa:	687a      	ldr	r2, [r7, #4]
 80006ac:	429a      	cmp	r2, r3
 80006ae:	d805      	bhi.n	80006bc <cb_write+0x5a>
    {
        num_avail_bytes = nbytes;
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	61fb      	str	r3, [r7, #28]
        cb->overflow = 0;
 80006b4:	68fb      	ldr	r3, [r7, #12]
 80006b6:	2200      	movs	r2, #0
 80006b8:	611a      	str	r2, [r3, #16]
 80006ba:	e006      	b.n	80006ca <cb_write+0x68>
    }
    else
    {
        num_avail_bytes = space_count;
 80006bc:	697b      	ldr	r3, [r7, #20]
 80006be:	61fb      	str	r3, [r7, #28]
        cb->overflow = nbytes - space_count;
 80006c0:	697b      	ldr	r3, [r7, #20]
 80006c2:	687a      	ldr	r2, [r7, #4]
 80006c4:	1ad2      	subs	r2, r2, r3
 80006c6:	68fb      	ldr	r3, [r7, #12]
 80006c8:	611a      	str	r2, [r3, #16]
    }

    for (int i = 0; i < num_avail_bytes; i++)
 80006ca:	2300      	movs	r3, #0
 80006cc:	61bb      	str	r3, [r7, #24]
 80006ce:	e00a      	b.n	80006e6 <cb_write+0x84>
        cb_write_byte(cb, *((uint8_t *)buf + i));
 80006d0:	69bb      	ldr	r3, [r7, #24]
 80006d2:	68ba      	ldr	r2, [r7, #8]
 80006d4:	4413      	add	r3, r2
 80006d6:	781b      	ldrb	r3, [r3, #0]
 80006d8:	4619      	mov	r1, r3
 80006da:	68f8      	ldr	r0, [r7, #12]
 80006dc:	f000 f86e 	bl	80007bc <cb_write_byte>
    for (int i = 0; i < num_avail_bytes; i++)
 80006e0:	69bb      	ldr	r3, [r7, #24]
 80006e2:	3301      	adds	r3, #1
 80006e4:	61bb      	str	r3, [r7, #24]
 80006e6:	69ba      	ldr	r2, [r7, #24]
 80006e8:	69fb      	ldr	r3, [r7, #28]
 80006ea:	429a      	cmp	r2, r3
 80006ec:	dbf0      	blt.n	80006d0 <cb_write+0x6e>

    cb->active = 1;
 80006ee:	68fb      	ldr	r3, [r7, #12]
 80006f0:	2201      	movs	r2, #1
 80006f2:	751a      	strb	r2, [r3, #20]
    return num_avail_bytes;
 80006f4:	69fb      	ldr	r3, [r7, #28]
}
 80006f6:	4618      	mov	r0, r3
 80006f8:	3720      	adds	r7, #32
 80006fa:	46bd      	mov	sp, r7
 80006fc:	bd80      	pop	{r7, pc}

080006fe <cb_data_count>:

uint32_t cb_data_count(cbuffer_t *cb)
{
 80006fe:	b480      	push	{r7}
 8000700:	b085      	sub	sp, #20
 8000702:	af00      	add	r7, sp, #0
 8000704:	6078      	str	r0, [r7, #4]
    int res = 0;
 8000706:	2300      	movs	r3, #0
 8000708:	60fb      	str	r3, [r7, #12]
    if (cb == NULL)
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	2b00      	cmp	r3, #0
 800070e:	d102      	bne.n	8000716 <cb_data_count+0x18>
        return CB_ERROR;
 8000710:	f04f 33ff 	mov.w	r3, #4294967295
 8000714:	e016      	b.n	8000744 <cb_data_count+0x46>

    if (cb->writer >= cb->reader)
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	689a      	ldr	r2, [r3, #8]
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	68db      	ldr	r3, [r3, #12]
 800071e:	429a      	cmp	r2, r3
 8000720:	d306      	bcc.n	8000730 <cb_data_count+0x32>
        res = cb->writer - cb->reader;
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	689a      	ldr	r2, [r3, #8]
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	68db      	ldr	r3, [r3, #12]
 800072a:	1ad3      	subs	r3, r2, r3
 800072c:	60fb      	str	r3, [r7, #12]
 800072e:	e008      	b.n	8000742 <cb_data_count+0x44>
    else
        res = cb->size - cb->reader + cb->writer;
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	685a      	ldr	r2, [r3, #4]
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	68db      	ldr	r3, [r3, #12]
 8000738:	1ad2      	subs	r2, r2, r3
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	689b      	ldr	r3, [r3, #8]
 800073e:	4413      	add	r3, r2
 8000740:	60fb      	str	r3, [r7, #12]

    return res;
 8000742:	68fb      	ldr	r3, [r7, #12]
}
 8000744:	4618      	mov	r0, r3
 8000746:	3714      	adds	r7, #20
 8000748:	46bd      	mov	sp, r7
 800074a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800074e:	4770      	bx	lr

08000750 <cb_space_count>:

uint32_t cb_space_count(cbuffer_t *cb)
{
 8000750:	b480      	push	{r7}
 8000752:	b085      	sub	sp, #20
 8000754:	af00      	add	r7, sp, #0
 8000756:	6078      	str	r0, [r7, #4]
    int res = 0;
 8000758:	2300      	movs	r3, #0
 800075a:	60fb      	str	r3, [r7, #12]
    if (cb == NULL)
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	2b00      	cmp	r3, #0
 8000760:	d102      	bne.n	8000768 <cb_space_count+0x18>
        return CB_ERROR;
 8000762:	f04f 33ff 	mov.w	r3, #4294967295
 8000766:	e023      	b.n	80007b0 <cb_space_count+0x60>

    if (cb->reader > cb->writer)
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	68da      	ldr	r2, [r3, #12]
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	689b      	ldr	r3, [r3, #8]
 8000770:	429a      	cmp	r2, r3
 8000772:	d907      	bls.n	8000784 <cb_space_count+0x34>
        res = cb->reader - cb->writer - 1;
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	68da      	ldr	r2, [r3, #12]
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	689b      	ldr	r3, [r3, #8]
 800077c:	1ad3      	subs	r3, r2, r3
 800077e:	3b01      	subs	r3, #1
 8000780:	60fb      	str	r3, [r7, #12]
 8000782:	e014      	b.n	80007ae <cb_space_count+0x5e>
    else if (cb->reader < cb->writer)
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	68da      	ldr	r2, [r3, #12]
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	689b      	ldr	r3, [r3, #8]
 800078c:	429a      	cmp	r2, r3
 800078e:	d20a      	bcs.n	80007a6 <cb_space_count+0x56>
        res = cb->size - cb->writer + cb->reader - 1;
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	685a      	ldr	r2, [r3, #4]
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	689b      	ldr	r3, [r3, #8]
 8000798:	1ad2      	subs	r2, r2, r3
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	68db      	ldr	r3, [r3, #12]
 800079e:	4413      	add	r3, r2
 80007a0:	3b01      	subs	r3, #1
 80007a2:	60fb      	str	r3, [r7, #12]
 80007a4:	e003      	b.n	80007ae <cb_space_count+0x5e>
    else
        res = cb->size - 1;
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	685b      	ldr	r3, [r3, #4]
 80007aa:	3b01      	subs	r3, #1
 80007ac:	60fb      	str	r3, [r7, #12]

    return res;
 80007ae:	68fb      	ldr	r3, [r7, #12]
}
 80007b0:	4618      	mov	r0, r3
 80007b2:	3714      	adds	r7, #20
 80007b4:	46bd      	mov	sp, r7
 80007b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ba:	4770      	bx	lr

080007bc <cb_write_byte>:

/* Private definitions ----------------------------------------------- */
static uint32_t cb_write_byte(cbuffer_t *cb, uint8_t byte)
{
 80007bc:	b480      	push	{r7}
 80007be:	b085      	sub	sp, #20
 80007c0:	af00      	add	r7, sp, #0
 80007c2:	6078      	str	r0, [r7, #4]
 80007c4:	460b      	mov	r3, r1
 80007c6:	70fb      	strb	r3, [r7, #3]
    uint32_t next = cb->writer + 1;
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	689b      	ldr	r3, [r3, #8]
 80007cc:	3301      	adds	r3, #1
 80007ce:	60fb      	str	r3, [r7, #12]
    if (next == cb->size)
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	685b      	ldr	r3, [r3, #4]
 80007d4:	68fa      	ldr	r2, [r7, #12]
 80007d6:	429a      	cmp	r2, r3
 80007d8:	d101      	bne.n	80007de <cb_write_byte+0x22>
        next = 0;
 80007da:	2300      	movs	r3, #0
 80007dc:	60fb      	str	r3, [r7, #12]

    if (next == cb->reader)
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	68db      	ldr	r3, [r3, #12]
 80007e2:	68fa      	ldr	r2, [r7, #12]
 80007e4:	429a      	cmp	r2, r3
 80007e6:	d102      	bne.n	80007ee <cb_write_byte+0x32>
        return CB_ERROR;
 80007e8:	f04f 33ff 	mov.w	r3, #4294967295
 80007ec:	e00a      	b.n	8000804 <cb_write_byte+0x48>

    *(cb->data + cb->writer) = byte;
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	681a      	ldr	r2, [r3, #0]
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	689b      	ldr	r3, [r3, #8]
 80007f6:	4413      	add	r3, r2
 80007f8:	78fa      	ldrb	r2, [r7, #3]
 80007fa:	701a      	strb	r2, [r3, #0]
    cb->writer = next;
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	68fa      	ldr	r2, [r7, #12]
 8000800:	609a      	str	r2, [r3, #8]
    return CB_SUCCESS;
 8000802:	2300      	movs	r3, #0
}
 8000804:	4618      	mov	r0, r3
 8000806:	3714      	adds	r7, #20
 8000808:	46bd      	mov	sp, r7
 800080a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800080e:	4770      	bx	lr

08000810 <cb_read_byte>:

static uint32_t cb_read_byte(cbuffer_t *cb, uint8_t *byte)
{
 8000810:	b480      	push	{r7}
 8000812:	b085      	sub	sp, #20
 8000814:	af00      	add	r7, sp, #0
 8000816:	6078      	str	r0, [r7, #4]
 8000818:	6039      	str	r1, [r7, #0]
    uint32_t next = cb->reader + 1;
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	68db      	ldr	r3, [r3, #12]
 800081e:	3301      	adds	r3, #1
 8000820:	60fb      	str	r3, [r7, #12]
    if (cb->reader == cb->writer)
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	68da      	ldr	r2, [r3, #12]
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	689b      	ldr	r3, [r3, #8]
 800082a:	429a      	cmp	r2, r3
 800082c:	d102      	bne.n	8000834 <cb_read_byte+0x24>
        return CB_ERROR;
 800082e:	f04f 33ff 	mov.w	r3, #4294967295
 8000832:	e012      	b.n	800085a <cb_read_byte+0x4a>

    if (next == cb->size)
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	685b      	ldr	r3, [r3, #4]
 8000838:	68fa      	ldr	r2, [r7, #12]
 800083a:	429a      	cmp	r2, r3
 800083c:	d101      	bne.n	8000842 <cb_read_byte+0x32>
        next = 0;
 800083e:	2300      	movs	r3, #0
 8000840:	60fb      	str	r3, [r7, #12]

    *byte = *(cb->data + cb->reader);
 8000842:	687b      	ldr	r3, [r7, #4]
 8000844:	681a      	ldr	r2, [r3, #0]
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	68db      	ldr	r3, [r3, #12]
 800084a:	4413      	add	r3, r2
 800084c:	781a      	ldrb	r2, [r3, #0]
 800084e:	683b      	ldr	r3, [r7, #0]
 8000850:	701a      	strb	r2, [r3, #0]
    cb->reader = next;
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	68fa      	ldr	r2, [r7, #12]
 8000856:	60da      	str	r2, [r3, #12]
    return CB_SUCCESS;
 8000858:	2300      	movs	r3, #0
}
 800085a:	4618      	mov	r0, r3
 800085c:	3714      	adds	r7, #20
 800085e:	46bd      	mov	sp, r7
 8000860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000864:	4770      	bx	lr

08000866 <MovingAverageFilter_Init>:
/* Private function prototypes ---------------------------------------- */
/* None */

/* Function definitions ----------------------------------------------- */
void MovingAverageFilter_Init(MovingAverageFilter* filter)
{
 8000866:	b480      	push	{r7}
 8000868:	b085      	sub	sp, #20
 800086a:	af00      	add	r7, sp, #0
 800086c:	6078      	str	r0, [r7, #4]
    for (uint8_t i = 0; i < MOVING_AVERAGE_WINDOW_SIZE; i++) {
 800086e:	2300      	movs	r3, #0
 8000870:	73fb      	strb	r3, [r7, #15]
 8000872:	e007      	b.n	8000884 <MovingAverageFilter_Init+0x1e>
        filter->buffer[i] = 0;
 8000874:	7bfa      	ldrb	r2, [r7, #15]
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	2100      	movs	r1, #0
 800087a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
    for (uint8_t i = 0; i < MOVING_AVERAGE_WINDOW_SIZE; i++) {
 800087e:	7bfb      	ldrb	r3, [r7, #15]
 8000880:	3301      	adds	r3, #1
 8000882:	73fb      	strb	r3, [r7, #15]
 8000884:	7bfb      	ldrb	r3, [r7, #15]
 8000886:	2b02      	cmp	r3, #2
 8000888:	d9f4      	bls.n	8000874 <MovingAverageFilter_Init+0xe>
    }
    filter->index = 0;
 800088a:	687b      	ldr	r3, [r7, #4]
 800088c:	2200      	movs	r2, #0
 800088e:	719a      	strb	r2, [r3, #6]
    filter->is_full = 0;
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	2200      	movs	r2, #0
 8000894:	71da      	strb	r2, [r3, #7]
}
 8000896:	bf00      	nop
 8000898:	3714      	adds	r7, #20
 800089a:	46bd      	mov	sp, r7
 800089c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a0:	4770      	bx	lr
	...

080008a4 <MovingAverageFilter_Apply>:

uint16_t MovingAverageFilter_Apply(MovingAverageFilter* filter, uint16_t new_sample)
{
 80008a4:	b480      	push	{r7}
 80008a6:	b085      	sub	sp, #20
 80008a8:	af00      	add	r7, sp, #0
 80008aa:	6078      	str	r0, [r7, #4]
 80008ac:	460b      	mov	r3, r1
 80008ae:	807b      	strh	r3, [r7, #2]
    filter->buffer[filter->index] = new_sample;
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	799b      	ldrb	r3, [r3, #6]
 80008b4:	4619      	mov	r1, r3
 80008b6:	687b      	ldr	r3, [r7, #4]
 80008b8:	887a      	ldrh	r2, [r7, #2]
 80008ba:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
    filter->index++;
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	799b      	ldrb	r3, [r3, #6]
 80008c2:	3301      	adds	r3, #1
 80008c4:	b2da      	uxtb	r2, r3
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	719a      	strb	r2, [r3, #6]

    if (filter->index >= MOVING_AVERAGE_WINDOW_SIZE) {
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	799b      	ldrb	r3, [r3, #6]
 80008ce:	2b02      	cmp	r3, #2
 80008d0:	d905      	bls.n	80008de <MovingAverageFilter_Apply+0x3a>
        filter->index = 0;
 80008d2:	687b      	ldr	r3, [r7, #4]
 80008d4:	2200      	movs	r2, #0
 80008d6:	719a      	strb	r2, [r3, #6]
        filter->is_full = 1;
 80008d8:	687b      	ldr	r3, [r7, #4]
 80008da:	2201      	movs	r2, #1
 80008dc:	71da      	strb	r2, [r3, #7]
    }

    if (!filter->is_full) {
 80008de:	687b      	ldr	r3, [r7, #4]
 80008e0:	79db      	ldrb	r3, [r3, #7]
 80008e2:	2b00      	cmp	r3, #0
 80008e4:	d101      	bne.n	80008ea <MovingAverageFilter_Apply+0x46>
        return new_sample;
 80008e6:	887b      	ldrh	r3, [r7, #2]
 80008e8:	e018      	b.n	800091c <MovingAverageFilter_Apply+0x78>
    }

    uint32_t sum = 0;
 80008ea:	2300      	movs	r3, #0
 80008ec:	60fb      	str	r3, [r7, #12]
    for (uint8_t i = 0; i < MOVING_AVERAGE_WINDOW_SIZE; i++) {
 80008ee:	2300      	movs	r3, #0
 80008f0:	72fb      	strb	r3, [r7, #11]
 80008f2:	e00a      	b.n	800090a <MovingAverageFilter_Apply+0x66>
        sum += filter->buffer[i];
 80008f4:	7afa      	ldrb	r2, [r7, #11]
 80008f6:	687b      	ldr	r3, [r7, #4]
 80008f8:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80008fc:	461a      	mov	r2, r3
 80008fe:	68fb      	ldr	r3, [r7, #12]
 8000900:	4413      	add	r3, r2
 8000902:	60fb      	str	r3, [r7, #12]
    for (uint8_t i = 0; i < MOVING_AVERAGE_WINDOW_SIZE; i++) {
 8000904:	7afb      	ldrb	r3, [r7, #11]
 8000906:	3301      	adds	r3, #1
 8000908:	72fb      	strb	r3, [r7, #11]
 800090a:	7afb      	ldrb	r3, [r7, #11]
 800090c:	2b02      	cmp	r3, #2
 800090e:	d9f1      	bls.n	80008f4 <MovingAverageFilter_Apply+0x50>
    }
    return (uint16_t)(sum / MOVING_AVERAGE_WINDOW_SIZE);
 8000910:	68fb      	ldr	r3, [r7, #12]
 8000912:	4a05      	ldr	r2, [pc, #20]	@ (8000928 <MovingAverageFilter_Apply+0x84>)
 8000914:	fba2 2303 	umull	r2, r3, r2, r3
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	b29b      	uxth	r3, r3
}
 800091c:	4618      	mov	r0, r3
 800091e:	3714      	adds	r7, #20
 8000920:	46bd      	mov	sp, r7
 8000922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000926:	4770      	bx	lr
 8000928:	aaaaaaab 	.word	0xaaaaaaab

0800092c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800092c:	b5b0      	push	{r4, r5, r7, lr}
 800092e:	b0aa      	sub	sp, #168	@ 0xa8
 8000930:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000932:	f000 fc21 	bl	8001178 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000936:	f000 f8ab 	bl	8000a90 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800093a:	f000 f9fb 	bl	8000d34 <MX_GPIO_Init>
  MX_DMA_Init();
 800093e:	f000 f9d9 	bl	8000cf4 <MX_DMA_Init>
  MX_ADC1_Init();
 8000942:	f000 f90d 	bl	8000b60 <MX_ADC1_Init>
  MX_USART2_UART_Init();
 8000946:	f000 f9ab 	bl	8000ca0 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 800094a:	f000 f95b 	bl	8000c04 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
//  HAL_Delay(200);
  MovingAverageFilter_Init(&adc_filter);
 800094e:	4845      	ldr	r0, [pc, #276]	@ (8000a64 <main+0x138>)
 8000950:	f7ff ff89 	bl	8000866 <MovingAverageFilter_Init>
  cb_init(&adc_buffer, adc_buffer_data, sizeof(adc_buffer_data));
 8000954:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000958:	4943      	ldr	r1, [pc, #268]	@ (8000a68 <main+0x13c>)
 800095a:	4844      	ldr	r0, [pc, #272]	@ (8000a6c <main+0x140>)
 800095c:	f7ff fe10 	bl	8000580 <cb_init>
  HAL_TIM_Base_Start_IT(&htim2);
 8000960:	4843      	ldr	r0, [pc, #268]	@ (8000a70 <main+0x144>)
 8000962:	f002 fc29 	bl	80031b8 <HAL_TIM_Base_Start_IT>
  HAL_ADC_Start_DMA(&hadc1, &ADC_value, 1);
 8000966:	2201      	movs	r2, #1
 8000968:	4942      	ldr	r1, [pc, #264]	@ (8000a74 <main+0x148>)
 800096a:	4843      	ldr	r0, [pc, #268]	@ (8000a78 <main+0x14c>)
 800096c:	f000 fd78 	bl	8001460 <HAL_ADC_Start_DMA>
  HAL_ADC_Start_IT(&hadc1); // dma knows when the conversion done
 8000970:	4841      	ldr	r0, [pc, #260]	@ (8000a78 <main+0x14c>)
 8000972:	f000 fcb7 	bl	80012e4 <HAL_ADC_Start_IT>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  if(send_flag == 1)
 8000976:	4b41      	ldr	r3, [pc, #260]	@ (8000a7c <main+0x150>)
 8000978:	781b      	ldrb	r3, [r3, #0]
 800097a:	2b01      	cmp	r3, #1
 800097c:	d1fb      	bne.n	8000976 <main+0x4a>
	  {
		  send_flag = 0;
 800097e:	4b3f      	ldr	r3, [pc, #252]	@ (8000a7c <main+0x150>)
 8000980:	2200      	movs	r2, #0
 8000982:	701a      	strb	r2, [r3, #0]
		  memset(sendBuffer, 0, sizeof(sendBuffer));
 8000984:	f44f 72af 	mov.w	r2, #350	@ 0x15e
 8000988:	2100      	movs	r1, #0
 800098a:	483d      	ldr	r0, [pc, #244]	@ (8000a80 <main+0x154>)
 800098c:	f003 fc34 	bl	80041f8 <memset>
		  uint8_t temp_buffer[128]; // 64 mẫu x 2 byte
		  uint32_t bytes_read = cb_read(&adc_buffer, temp_buffer, 128);
 8000990:	463b      	mov	r3, r7
 8000992:	2280      	movs	r2, #128	@ 0x80
 8000994:	4619      	mov	r1, r3
 8000996:	4835      	ldr	r0, [pc, #212]	@ (8000a6c <main+0x140>)
 8000998:	f7ff fe1e 	bl	80005d8 <cb_read>
 800099c:	f8c7 00a0 	str.w	r0, [r7, #160]	@ 0xa0
			if(bytes_read == 128)
 80009a0:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80009a4:	2b80      	cmp	r3, #128	@ 0x80
 80009a6:	d141      	bne.n	8000a2c <main+0x100>
			{
				for(int i=0; i<64; i++)
 80009a8:	2300      	movs	r3, #0
 80009aa:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80009ae:	e026      	b.n	80009fe <main+0xd2>
				{
					uint16_t value = (temp_buffer[i * 2] << 8) | temp_buffer[i * 2 + 1];
 80009b0:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80009b4:	005b      	lsls	r3, r3, #1
 80009b6:	33a8      	adds	r3, #168	@ 0xa8
 80009b8:	443b      	add	r3, r7
 80009ba:	f813 3ca8 	ldrb.w	r3, [r3, #-168]
 80009be:	021b      	lsls	r3, r3, #8
 80009c0:	b21a      	sxth	r2, r3
 80009c2:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80009c6:	005b      	lsls	r3, r3, #1
 80009c8:	3301      	adds	r3, #1
 80009ca:	33a8      	adds	r3, #168	@ 0xa8
 80009cc:	443b      	add	r3, r7
 80009ce:	f813 3ca8 	ldrb.w	r3, [r3, #-168]
 80009d2:	b21b      	sxth	r3, r3
 80009d4:	4313      	orrs	r3, r2
 80009d6:	b21b      	sxth	r3, r3
 80009d8:	f8a7 309e 	strh.w	r3, [r7, #158]	@ 0x9e
					sprintf(&sendBuffer[strlen(sendBuffer)], "%u,", value);
 80009dc:	4828      	ldr	r0, [pc, #160]	@ (8000a80 <main+0x154>)
 80009de:	f7ff fbff 	bl	80001e0 <strlen>
 80009e2:	4603      	mov	r3, r0
 80009e4:	4a26      	ldr	r2, [pc, #152]	@ (8000a80 <main+0x154>)
 80009e6:	4413      	add	r3, r2
 80009e8:	f8b7 209e 	ldrh.w	r2, [r7, #158]	@ 0x9e
 80009ec:	4925      	ldr	r1, [pc, #148]	@ (8000a84 <main+0x158>)
 80009ee:	4618      	mov	r0, r3
 80009f0:	f003 fbe2 	bl	80041b8 <siprintf>
				for(int i=0; i<64; i++)
 80009f4:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80009f8:	3301      	adds	r3, #1
 80009fa:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80009fe:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000a02:	2b3f      	cmp	r3, #63	@ 0x3f
 8000a04:	ddd4      	ble.n	80009b0 <main+0x84>
				}
				sendBuffer[strlen(sendBuffer) - 1] = '\n';
 8000a06:	481e      	ldr	r0, [pc, #120]	@ (8000a80 <main+0x154>)
 8000a08:	f7ff fbea 	bl	80001e0 <strlen>
 8000a0c:	4603      	mov	r3, r0
 8000a0e:	3b01      	subs	r3, #1
 8000a10:	4a1b      	ldr	r2, [pc, #108]	@ (8000a80 <main+0x154>)
 8000a12:	210a      	movs	r1, #10
 8000a14:	54d1      	strb	r1, [r2, r3]
				HAL_UART_Transmit(&huart2, (uint8_t*)sendBuffer, strlen(sendBuffer), 200);
 8000a16:	481a      	ldr	r0, [pc, #104]	@ (8000a80 <main+0x154>)
 8000a18:	f7ff fbe2 	bl	80001e0 <strlen>
 8000a1c:	4603      	mov	r3, r0
 8000a1e:	b29a      	uxth	r2, r3
 8000a20:	23c8      	movs	r3, #200	@ 0xc8
 8000a22:	4917      	ldr	r1, [pc, #92]	@ (8000a80 <main+0x154>)
 8000a24:	4818      	ldr	r0, [pc, #96]	@ (8000a88 <main+0x15c>)
 8000a26:	f003 f80b 	bl	8003a40 <HAL_UART_Transmit>
 8000a2a:	e7a4      	b.n	8000976 <main+0x4a>
			}
			else
			{
				char error_msg[] = "Error reading from buffer\n";
 8000a2c:	4b17      	ldr	r3, [pc, #92]	@ (8000a8c <main+0x160>)
 8000a2e:	f107 0480 	add.w	r4, r7, #128	@ 0x80
 8000a32:	461d      	mov	r5, r3
 8000a34:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000a36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000a38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000a3c:	c403      	stmia	r4!, {r0, r1}
 8000a3e:	8022      	strh	r2, [r4, #0]
 8000a40:	3402      	adds	r4, #2
 8000a42:	0c13      	lsrs	r3, r2, #16
 8000a44:	7023      	strb	r3, [r4, #0]
				HAL_UART_Transmit(&huart2, (uint8_t*)error_msg, strlen(error_msg), 200);
 8000a46:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 8000a4a:	4618      	mov	r0, r3
 8000a4c:	f7ff fbc8 	bl	80001e0 <strlen>
 8000a50:	4603      	mov	r3, r0
 8000a52:	b29a      	uxth	r2, r3
 8000a54:	f107 0180 	add.w	r1, r7, #128	@ 0x80
 8000a58:	23c8      	movs	r3, #200	@ 0xc8
 8000a5a:	480b      	ldr	r0, [pc, #44]	@ (8000a88 <main+0x15c>)
 8000a5c:	f002 fff0 	bl	8003a40 <HAL_UART_Transmit>
	  if(send_flag == 1)
 8000a60:	e789      	b.n	8000976 <main+0x4a>
 8000a62:	bf00      	nop
 8000a64:	20000314 	.word	0x20000314
 8000a68:	20000334 	.word	0x20000334
 8000a6c:	2000031c 	.word	0x2000031c
 8000a70:	20000120 	.word	0x20000120
 8000a74:	20000310 	.word	0x20000310
 8000a78:	20000078 	.word	0x20000078
 8000a7c:	2000030e 	.word	0x2000030e
 8000a80:	200001b0 	.word	0x200001b0
 8000a84:	08004b10 	.word	0x08004b10
 8000a88:	20000168 	.word	0x20000168
 8000a8c:	08004b14 	.word	0x08004b14

08000a90 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a90:	b580      	push	{r7, lr}
 8000a92:	b094      	sub	sp, #80	@ 0x50
 8000a94:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a96:	f107 0320 	add.w	r3, r7, #32
 8000a9a:	2230      	movs	r2, #48	@ 0x30
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	4618      	mov	r0, r3
 8000aa0:	f003 fbaa 	bl	80041f8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000aa4:	f107 030c 	add.w	r3, r7, #12
 8000aa8:	2200      	movs	r2, #0
 8000aaa:	601a      	str	r2, [r3, #0]
 8000aac:	605a      	str	r2, [r3, #4]
 8000aae:	609a      	str	r2, [r3, #8]
 8000ab0:	60da      	str	r2, [r3, #12]
 8000ab2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	60bb      	str	r3, [r7, #8]
 8000ab8:	4b27      	ldr	r3, [pc, #156]	@ (8000b58 <SystemClock_Config+0xc8>)
 8000aba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000abc:	4a26      	ldr	r2, [pc, #152]	@ (8000b58 <SystemClock_Config+0xc8>)
 8000abe:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000ac2:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ac4:	4b24      	ldr	r3, [pc, #144]	@ (8000b58 <SystemClock_Config+0xc8>)
 8000ac6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ac8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000acc:	60bb      	str	r3, [r7, #8]
 8000ace:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad0:	2300      	movs	r3, #0
 8000ad2:	607b      	str	r3, [r7, #4]
 8000ad4:	4b21      	ldr	r3, [pc, #132]	@ (8000b5c <SystemClock_Config+0xcc>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	4a20      	ldr	r2, [pc, #128]	@ (8000b5c <SystemClock_Config+0xcc>)
 8000ada:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000ade:	6013      	str	r3, [r2, #0]
 8000ae0:	4b1e      	ldr	r3, [pc, #120]	@ (8000b5c <SystemClock_Config+0xcc>)
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000ae8:	607b      	str	r3, [r7, #4]
 8000aea:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000aec:	2302      	movs	r3, #2
 8000aee:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000af0:	2301      	movs	r3, #1
 8000af2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000af4:	2310      	movs	r3, #16
 8000af6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af8:	2302      	movs	r3, #2
 8000afa:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000afc:	2300      	movs	r3, #0
 8000afe:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000b00:	2308      	movs	r3, #8
 8000b02:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 100;
 8000b04:	2364      	movs	r3, #100	@ 0x64
 8000b06:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2302      	movs	r3, #2
 8000b0a:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 8;
 8000b0c:	2308      	movs	r3, #8
 8000b0e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b10:	f107 0320 	add.w	r3, r7, #32
 8000b14:	4618      	mov	r0, r3
 8000b16:	f001 fe67 	bl	80027e8 <HAL_RCC_OscConfig>
 8000b1a:	4603      	mov	r3, r0
 8000b1c:	2b00      	cmp	r3, #0
 8000b1e:	d001      	beq.n	8000b24 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000b20:	f000 f930 	bl	8000d84 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b24:	230f      	movs	r3, #15
 8000b26:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b28:	2302      	movs	r3, #2
 8000b2a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000b2c:	2300      	movs	r3, #0
 8000b2e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000b30:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000b34:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000b36:	2300      	movs	r3, #0
 8000b38:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8000b3a:	f107 030c 	add.w	r3, r7, #12
 8000b3e:	2103      	movs	r1, #3
 8000b40:	4618      	mov	r0, r3
 8000b42:	f002 f8c9 	bl	8002cd8 <HAL_RCC_ClockConfig>
 8000b46:	4603      	mov	r3, r0
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	d001      	beq.n	8000b50 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8000b4c:	f000 f91a 	bl	8000d84 <Error_Handler>
  }
}
 8000b50:	bf00      	nop
 8000b52:	3750      	adds	r7, #80	@ 0x50
 8000b54:	46bd      	mov	sp, r7
 8000b56:	bd80      	pop	{r7, pc}
 8000b58:	40023800 	.word	0x40023800
 8000b5c:	40007000 	.word	0x40007000

08000b60 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000b60:	b580      	push	{r7, lr}
 8000b62:	b084      	sub	sp, #16
 8000b64:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000b66:	463b      	mov	r3, r7
 8000b68:	2200      	movs	r2, #0
 8000b6a:	601a      	str	r2, [r3, #0]
 8000b6c:	605a      	str	r2, [r3, #4]
 8000b6e:	609a      	str	r2, [r3, #8]
 8000b70:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000b72:	4b21      	ldr	r3, [pc, #132]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000b74:	4a21      	ldr	r2, [pc, #132]	@ (8000bfc <MX_ADC1_Init+0x9c>)
 8000b76:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000b78:	4b1f      	ldr	r3, [pc, #124]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000b7a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000b7e:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000b80:	4b1d      	ldr	r3, [pc, #116]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000b82:	2200      	movs	r2, #0
 8000b84:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000b86:	4b1c      	ldr	r3, [pc, #112]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000b88:	2200      	movs	r2, #0
 8000b8a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8000b8c:	4b1a      	ldr	r3, [pc, #104]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000b8e:	2201      	movs	r2, #1
 8000b90:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000b92:	4b19      	ldr	r3, [pc, #100]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000b94:	2200      	movs	r2, #0
 8000b96:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000b9a:	4b17      	ldr	r3, [pc, #92]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000ba0:	4b15      	ldr	r3, [pc, #84]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000ba2:	4a17      	ldr	r2, [pc, #92]	@ (8000c00 <MX_ADC1_Init+0xa0>)
 8000ba4:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000ba6:	4b14      	ldr	r3, [pc, #80]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000ba8:	2200      	movs	r2, #0
 8000baa:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000bac:	4b12      	ldr	r3, [pc, #72]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000bae:	2201      	movs	r2, #1
 8000bb0:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 8000bb2:	4b11      	ldr	r3, [pc, #68]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000bb4:	2201      	movs	r2, #1
 8000bb6:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000bba:	4b0f      	ldr	r3, [pc, #60]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000bbc:	2201      	movs	r2, #1
 8000bbe:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000bc0:	480d      	ldr	r0, [pc, #52]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000bc2:	f000 fb4b 	bl	800125c <HAL_ADC_Init>
 8000bc6:	4603      	mov	r3, r0
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d001      	beq.n	8000bd0 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000bcc:	f000 f8da 	bl	8000d84 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000bd0:	2300      	movs	r3, #0
 8000bd2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000bd4:	2301      	movs	r3, #1
 8000bd6:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8000bd8:	2307      	movs	r3, #7
 8000bda:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000bdc:	463b      	mov	r3, r7
 8000bde:	4619      	mov	r1, r3
 8000be0:	4805      	ldr	r0, [pc, #20]	@ (8000bf8 <MX_ADC1_Init+0x98>)
 8000be2:	f000 fd4b 	bl	800167c <HAL_ADC_ConfigChannel>
 8000be6:	4603      	mov	r3, r0
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d001      	beq.n	8000bf0 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000bec:	f000 f8ca 	bl	8000d84 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000bf0:	bf00      	nop
 8000bf2:	3710      	adds	r7, #16
 8000bf4:	46bd      	mov	sp, r7
 8000bf6:	bd80      	pop	{r7, pc}
 8000bf8:	20000078 	.word	0x20000078
 8000bfc:	40012000 	.word	0x40012000
 8000c00:	0f000001 	.word	0x0f000001

08000c04 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000c04:	b580      	push	{r7, lr}
 8000c06:	b086      	sub	sp, #24
 8000c08:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000c0a:	f107 0308 	add.w	r3, r7, #8
 8000c0e:	2200      	movs	r2, #0
 8000c10:	601a      	str	r2, [r3, #0]
 8000c12:	605a      	str	r2, [r3, #4]
 8000c14:	609a      	str	r2, [r3, #8]
 8000c16:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c18:	463b      	mov	r3, r7
 8000c1a:	2200      	movs	r2, #0
 8000c1c:	601a      	str	r2, [r3, #0]
 8000c1e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000c20:	4b1e      	ldr	r3, [pc, #120]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c22:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000c26:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1249;
 8000c28:	4b1c      	ldr	r3, [pc, #112]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c2a:	f240 42e1 	movw	r2, #1249	@ 0x4e1
 8000c2e:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c30:	4b1a      	ldr	r3, [pc, #104]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c32:	2200      	movs	r2, #0
 8000c34:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1250;
 8000c36:	4b19      	ldr	r3, [pc, #100]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c38:	f240 42e2 	movw	r2, #1250	@ 0x4e2
 8000c3c:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000c3e:	4b17      	ldr	r3, [pc, #92]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c40:	2200      	movs	r2, #0
 8000c42:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000c44:	4b15      	ldr	r3, [pc, #84]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c46:	2200      	movs	r2, #0
 8000c48:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000c4a:	4814      	ldr	r0, [pc, #80]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c4c:	f002 fa64 	bl	8003118 <HAL_TIM_Base_Init>
 8000c50:	4603      	mov	r3, r0
 8000c52:	2b00      	cmp	r3, #0
 8000c54:	d001      	beq.n	8000c5a <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8000c56:	f000 f895 	bl	8000d84 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000c5a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000c5e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000c60:	f107 0308 	add.w	r3, r7, #8
 8000c64:	4619      	mov	r1, r3
 8000c66:	480d      	ldr	r0, [pc, #52]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c68:	f002 fbf8 	bl	800345c <HAL_TIM_ConfigClockSource>
 8000c6c:	4603      	mov	r3, r0
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	d001      	beq.n	8000c76 <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8000c72:	f000 f887 	bl	8000d84 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c76:	2300      	movs	r3, #0
 8000c78:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c7a:	2300      	movs	r3, #0
 8000c7c:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c7e:	463b      	mov	r3, r7
 8000c80:	4619      	mov	r1, r3
 8000c82:	4806      	ldr	r0, [pc, #24]	@ (8000c9c <MX_TIM2_Init+0x98>)
 8000c84:	f002 fe0a 	bl	800389c <HAL_TIMEx_MasterConfigSynchronization>
 8000c88:	4603      	mov	r3, r0
 8000c8a:	2b00      	cmp	r3, #0
 8000c8c:	d001      	beq.n	8000c92 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8000c8e:	f000 f879 	bl	8000d84 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000c92:	bf00      	nop
 8000c94:	3718      	adds	r7, #24
 8000c96:	46bd      	mov	sp, r7
 8000c98:	bd80      	pop	{r7, pc}
 8000c9a:	bf00      	nop
 8000c9c:	20000120 	.word	0x20000120

08000ca0 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000ca0:	b580      	push	{r7, lr}
 8000ca2:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000ca4:	4b11      	ldr	r3, [pc, #68]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000ca6:	4a12      	ldr	r2, [pc, #72]	@ (8000cf0 <MX_USART2_UART_Init+0x50>)
 8000ca8:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000caa:	4b10      	ldr	r3, [pc, #64]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000cac:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000cb0:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000cb2:	4b0e      	ldr	r3, [pc, #56]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000cb4:	2200      	movs	r2, #0
 8000cb6:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000cb8:	4b0c      	ldr	r3, [pc, #48]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000cba:	2200      	movs	r2, #0
 8000cbc:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000cbe:	4b0b      	ldr	r3, [pc, #44]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000cc0:	2200      	movs	r2, #0
 8000cc2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000cc4:	4b09      	ldr	r3, [pc, #36]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000cc6:	220c      	movs	r2, #12
 8000cc8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000cca:	4b08      	ldr	r3, [pc, #32]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000cd0:	4b06      	ldr	r3, [pc, #24]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000cd6:	4805      	ldr	r0, [pc, #20]	@ (8000cec <MX_USART2_UART_Init+0x4c>)
 8000cd8:	f002 fe62 	bl	80039a0 <HAL_UART_Init>
 8000cdc:	4603      	mov	r3, r0
 8000cde:	2b00      	cmp	r3, #0
 8000ce0:	d001      	beq.n	8000ce6 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000ce2:	f000 f84f 	bl	8000d84 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000ce6:	bf00      	nop
 8000ce8:	bd80      	pop	{r7, pc}
 8000cea:	bf00      	nop
 8000cec:	20000168 	.word	0x20000168
 8000cf0:	40004400 	.word	0x40004400

08000cf4 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8000cf4:	b580      	push	{r7, lr}
 8000cf6:	b082      	sub	sp, #8
 8000cf8:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000cfa:	2300      	movs	r3, #0
 8000cfc:	607b      	str	r3, [r7, #4]
 8000cfe:	4b0c      	ldr	r3, [pc, #48]	@ (8000d30 <MX_DMA_Init+0x3c>)
 8000d00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d02:	4a0b      	ldr	r2, [pc, #44]	@ (8000d30 <MX_DMA_Init+0x3c>)
 8000d04:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000d08:	6313      	str	r3, [r2, #48]	@ 0x30
 8000d0a:	4b09      	ldr	r3, [pc, #36]	@ (8000d30 <MX_DMA_Init+0x3c>)
 8000d0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d0e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000d12:	607b      	str	r3, [r7, #4]
 8000d14:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 8000d16:	2200      	movs	r2, #0
 8000d18:	2100      	movs	r1, #0
 8000d1a:	2038      	movs	r0, #56	@ 0x38
 8000d1c:	f001 f839 	bl	8001d92 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8000d20:	2038      	movs	r0, #56	@ 0x38
 8000d22:	f001 f852 	bl	8001dca <HAL_NVIC_EnableIRQ>

}
 8000d26:	bf00      	nop
 8000d28:	3708      	adds	r7, #8
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	bd80      	pop	{r7, pc}
 8000d2e:	bf00      	nop
 8000d30:	40023800 	.word	0x40023800

08000d34 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000d34:	b480      	push	{r7}
 8000d36:	b083      	sub	sp, #12
 8000d38:	af00      	add	r7, sp, #0
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d3a:	2300      	movs	r3, #0
 8000d3c:	607b      	str	r3, [r7, #4]
 8000d3e:	4b10      	ldr	r3, [pc, #64]	@ (8000d80 <MX_GPIO_Init+0x4c>)
 8000d40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d42:	4a0f      	ldr	r2, [pc, #60]	@ (8000d80 <MX_GPIO_Init+0x4c>)
 8000d44:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d48:	6313      	str	r3, [r2, #48]	@ 0x30
 8000d4a:	4b0d      	ldr	r3, [pc, #52]	@ (8000d80 <MX_GPIO_Init+0x4c>)
 8000d4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d4e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000d52:	607b      	str	r3, [r7, #4]
 8000d54:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000d56:	2300      	movs	r3, #0
 8000d58:	603b      	str	r3, [r7, #0]
 8000d5a:	4b09      	ldr	r3, [pc, #36]	@ (8000d80 <MX_GPIO_Init+0x4c>)
 8000d5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d5e:	4a08      	ldr	r2, [pc, #32]	@ (8000d80 <MX_GPIO_Init+0x4c>)
 8000d60:	f043 0301 	orr.w	r3, r3, #1
 8000d64:	6313      	str	r3, [r2, #48]	@ 0x30
 8000d66:	4b06      	ldr	r3, [pc, #24]	@ (8000d80 <MX_GPIO_Init+0x4c>)
 8000d68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d6a:	f003 0301 	and.w	r3, r3, #1
 8000d6e:	603b      	str	r3, [r7, #0]
 8000d70:	683b      	ldr	r3, [r7, #0]

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000d72:	bf00      	nop
 8000d74:	370c      	adds	r7, #12
 8000d76:	46bd      	mov	sp, r7
 8000d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7c:	4770      	bx	lr
 8000d7e:	bf00      	nop
 8000d80:	40023800 	.word	0x40023800

08000d84 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d84:	b480      	push	{r7}
 8000d86:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d88:	b672      	cpsid	i
}
 8000d8a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d8c:	bf00      	nop
 8000d8e:	e7fd      	b.n	8000d8c <Error_Handler+0x8>

08000d90 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d90:	b580      	push	{r7, lr}
 8000d92:	b082      	sub	sp, #8
 8000d94:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d96:	2300      	movs	r3, #0
 8000d98:	607b      	str	r3, [r7, #4]
 8000d9a:	4b10      	ldr	r3, [pc, #64]	@ (8000ddc <HAL_MspInit+0x4c>)
 8000d9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000d9e:	4a0f      	ldr	r2, [pc, #60]	@ (8000ddc <HAL_MspInit+0x4c>)
 8000da0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000da4:	6453      	str	r3, [r2, #68]	@ 0x44
 8000da6:	4b0d      	ldr	r3, [pc, #52]	@ (8000ddc <HAL_MspInit+0x4c>)
 8000da8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000daa:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000dae:	607b      	str	r3, [r7, #4]
 8000db0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000db2:	2300      	movs	r3, #0
 8000db4:	603b      	str	r3, [r7, #0]
 8000db6:	4b09      	ldr	r3, [pc, #36]	@ (8000ddc <HAL_MspInit+0x4c>)
 8000db8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000dba:	4a08      	ldr	r2, [pc, #32]	@ (8000ddc <HAL_MspInit+0x4c>)
 8000dbc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000dc0:	6413      	str	r3, [r2, #64]	@ 0x40
 8000dc2:	4b06      	ldr	r3, [pc, #24]	@ (8000ddc <HAL_MspInit+0x4c>)
 8000dc4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000dc6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000dca:	603b      	str	r3, [r7, #0]
 8000dcc:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8000dce:	2007      	movs	r0, #7
 8000dd0:	f000 ffd4 	bl	8001d7c <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000dd4:	bf00      	nop
 8000dd6:	3708      	adds	r7, #8
 8000dd8:	46bd      	mov	sp, r7
 8000dda:	bd80      	pop	{r7, pc}
 8000ddc:	40023800 	.word	0x40023800

08000de0 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b08a      	sub	sp, #40	@ 0x28
 8000de4:	af00      	add	r7, sp, #0
 8000de6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000de8:	f107 0314 	add.w	r3, r7, #20
 8000dec:	2200      	movs	r2, #0
 8000dee:	601a      	str	r2, [r3, #0]
 8000df0:	605a      	str	r2, [r3, #4]
 8000df2:	609a      	str	r2, [r3, #8]
 8000df4:	60da      	str	r2, [r3, #12]
 8000df6:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8000df8:	687b      	ldr	r3, [r7, #4]
 8000dfa:	681b      	ldr	r3, [r3, #0]
 8000dfc:	4a2f      	ldr	r2, [pc, #188]	@ (8000ebc <HAL_ADC_MspInit+0xdc>)
 8000dfe:	4293      	cmp	r3, r2
 8000e00:	d157      	bne.n	8000eb2 <HAL_ADC_MspInit+0xd2>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000e02:	2300      	movs	r3, #0
 8000e04:	613b      	str	r3, [r7, #16]
 8000e06:	4b2e      	ldr	r3, [pc, #184]	@ (8000ec0 <HAL_ADC_MspInit+0xe0>)
 8000e08:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000e0a:	4a2d      	ldr	r2, [pc, #180]	@ (8000ec0 <HAL_ADC_MspInit+0xe0>)
 8000e0c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000e10:	6453      	str	r3, [r2, #68]	@ 0x44
 8000e12:	4b2b      	ldr	r3, [pc, #172]	@ (8000ec0 <HAL_ADC_MspInit+0xe0>)
 8000e14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000e16:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000e1a:	613b      	str	r3, [r7, #16]
 8000e1c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e1e:	2300      	movs	r3, #0
 8000e20:	60fb      	str	r3, [r7, #12]
 8000e22:	4b27      	ldr	r3, [pc, #156]	@ (8000ec0 <HAL_ADC_MspInit+0xe0>)
 8000e24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e26:	4a26      	ldr	r2, [pc, #152]	@ (8000ec0 <HAL_ADC_MspInit+0xe0>)
 8000e28:	f043 0301 	orr.w	r3, r3, #1
 8000e2c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e2e:	4b24      	ldr	r3, [pc, #144]	@ (8000ec0 <HAL_ADC_MspInit+0xe0>)
 8000e30:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e32:	f003 0301 	and.w	r3, r3, #1
 8000e36:	60fb      	str	r3, [r7, #12]
 8000e38:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000e3a:	2301      	movs	r3, #1
 8000e3c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000e3e:	2303      	movs	r3, #3
 8000e40:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e42:	2300      	movs	r3, #0
 8000e44:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e46:	f107 0314 	add.w	r3, r7, #20
 8000e4a:	4619      	mov	r1, r3
 8000e4c:	481d      	ldr	r0, [pc, #116]	@ (8000ec4 <HAL_ADC_MspInit+0xe4>)
 8000e4e:	f001 fb47 	bl	80024e0 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8000e52:	4b1d      	ldr	r3, [pc, #116]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e54:	4a1d      	ldr	r2, [pc, #116]	@ (8000ecc <HAL_ADC_MspInit+0xec>)
 8000e56:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8000e58:	4b1b      	ldr	r3, [pc, #108]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e5a:	2200      	movs	r2, #0
 8000e5c:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000e5e:	4b1a      	ldr	r3, [pc, #104]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e60:	2200      	movs	r2, #0
 8000e62:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8000e64:	4b18      	ldr	r3, [pc, #96]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e66:	2200      	movs	r2, #0
 8000e68:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8000e6a:	4b17      	ldr	r3, [pc, #92]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e6c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000e70:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8000e72:	4b15      	ldr	r3, [pc, #84]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e74:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8000e78:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8000e7a:	4b13      	ldr	r3, [pc, #76]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e7c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000e80:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8000e82:	4b11      	ldr	r3, [pc, #68]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e84:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000e88:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8000e8a:	4b0f      	ldr	r3, [pc, #60]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e8c:	2200      	movs	r2, #0
 8000e8e:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8000e90:	4b0d      	ldr	r3, [pc, #52]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e92:	2200      	movs	r2, #0
 8000e94:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8000e96:	480c      	ldr	r0, [pc, #48]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000e98:	f000 ffb2 	bl	8001e00 <HAL_DMA_Init>
 8000e9c:	4603      	mov	r3, r0
 8000e9e:	2b00      	cmp	r3, #0
 8000ea0:	d001      	beq.n	8000ea6 <HAL_ADC_MspInit+0xc6>
    {
      Error_Handler();
 8000ea2:	f7ff ff6f 	bl	8000d84 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 8000ea6:	687b      	ldr	r3, [r7, #4]
 8000ea8:	4a07      	ldr	r2, [pc, #28]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000eaa:	639a      	str	r2, [r3, #56]	@ 0x38
 8000eac:	4a06      	ldr	r2, [pc, #24]	@ (8000ec8 <HAL_ADC_MspInit+0xe8>)
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 8000eb2:	bf00      	nop
 8000eb4:	3728      	adds	r7, #40	@ 0x28
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	bd80      	pop	{r7, pc}
 8000eba:	bf00      	nop
 8000ebc:	40012000 	.word	0x40012000
 8000ec0:	40023800 	.word	0x40023800
 8000ec4:	40020000 	.word	0x40020000
 8000ec8:	200000c0 	.word	0x200000c0
 8000ecc:	40026410 	.word	0x40026410

08000ed0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000ed0:	b580      	push	{r7, lr}
 8000ed2:	b084      	sub	sp, #16
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	681b      	ldr	r3, [r3, #0]
 8000edc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000ee0:	d115      	bne.n	8000f0e <HAL_TIM_Base_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	60fb      	str	r3, [r7, #12]
 8000ee6:	4b0c      	ldr	r3, [pc, #48]	@ (8000f18 <HAL_TIM_Base_MspInit+0x48>)
 8000ee8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000eea:	4a0b      	ldr	r2, [pc, #44]	@ (8000f18 <HAL_TIM_Base_MspInit+0x48>)
 8000eec:	f043 0301 	orr.w	r3, r3, #1
 8000ef0:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ef2:	4b09      	ldr	r3, [pc, #36]	@ (8000f18 <HAL_TIM_Base_MspInit+0x48>)
 8000ef4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ef6:	f003 0301 	and.w	r3, r3, #1
 8000efa:	60fb      	str	r3, [r7, #12]
 8000efc:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8000efe:	2200      	movs	r2, #0
 8000f00:	2100      	movs	r1, #0
 8000f02:	201c      	movs	r0, #28
 8000f04:	f000 ff45 	bl	8001d92 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000f08:	201c      	movs	r0, #28
 8000f0a:	f000 ff5e 	bl	8001dca <HAL_NVIC_EnableIRQ>

  /* USER CODE END TIM2_MspInit 1 */

  }

}
 8000f0e:	bf00      	nop
 8000f10:	3710      	adds	r7, #16
 8000f12:	46bd      	mov	sp, r7
 8000f14:	bd80      	pop	{r7, pc}
 8000f16:	bf00      	nop
 8000f18:	40023800 	.word	0x40023800

08000f1c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000f1c:	b580      	push	{r7, lr}
 8000f1e:	b08a      	sub	sp, #40	@ 0x28
 8000f20:	af00      	add	r7, sp, #0
 8000f22:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f24:	f107 0314 	add.w	r3, r7, #20
 8000f28:	2200      	movs	r2, #0
 8000f2a:	601a      	str	r2, [r3, #0]
 8000f2c:	605a      	str	r2, [r3, #4]
 8000f2e:	609a      	str	r2, [r3, #8]
 8000f30:	60da      	str	r2, [r3, #12]
 8000f32:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8000f34:	687b      	ldr	r3, [r7, #4]
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	4a19      	ldr	r2, [pc, #100]	@ (8000fa0 <HAL_UART_MspInit+0x84>)
 8000f3a:	4293      	cmp	r3, r2
 8000f3c:	d12b      	bne.n	8000f96 <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8000f3e:	2300      	movs	r3, #0
 8000f40:	613b      	str	r3, [r7, #16]
 8000f42:	4b18      	ldr	r3, [pc, #96]	@ (8000fa4 <HAL_UART_MspInit+0x88>)
 8000f44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f46:	4a17      	ldr	r2, [pc, #92]	@ (8000fa4 <HAL_UART_MspInit+0x88>)
 8000f48:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000f4c:	6413      	str	r3, [r2, #64]	@ 0x40
 8000f4e:	4b15      	ldr	r3, [pc, #84]	@ (8000fa4 <HAL_UART_MspInit+0x88>)
 8000f50:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f52:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000f56:	613b      	str	r3, [r7, #16]
 8000f58:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f5a:	2300      	movs	r3, #0
 8000f5c:	60fb      	str	r3, [r7, #12]
 8000f5e:	4b11      	ldr	r3, [pc, #68]	@ (8000fa4 <HAL_UART_MspInit+0x88>)
 8000f60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f62:	4a10      	ldr	r2, [pc, #64]	@ (8000fa4 <HAL_UART_MspInit+0x88>)
 8000f64:	f043 0301 	orr.w	r3, r3, #1
 8000f68:	6313      	str	r3, [r2, #48]	@ 0x30
 8000f6a:	4b0e      	ldr	r3, [pc, #56]	@ (8000fa4 <HAL_UART_MspInit+0x88>)
 8000f6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f6e:	f003 0301 	and.w	r3, r3, #1
 8000f72:	60fb      	str	r3, [r7, #12]
 8000f74:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8000f76:	230c      	movs	r3, #12
 8000f78:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f7a:	2302      	movs	r3, #2
 8000f7c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f7e:	2300      	movs	r3, #0
 8000f80:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f82:	2303      	movs	r3, #3
 8000f84:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8000f86:	2307      	movs	r3, #7
 8000f88:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f8a:	f107 0314 	add.w	r3, r7, #20
 8000f8e:	4619      	mov	r1, r3
 8000f90:	4805      	ldr	r0, [pc, #20]	@ (8000fa8 <HAL_UART_MspInit+0x8c>)
 8000f92:	f001 faa5 	bl	80024e0 <HAL_GPIO_Init>

  /* USER CODE END USART2_MspInit 1 */

  }

}
 8000f96:	bf00      	nop
 8000f98:	3728      	adds	r7, #40	@ 0x28
 8000f9a:	46bd      	mov	sp, r7
 8000f9c:	bd80      	pop	{r7, pc}
 8000f9e:	bf00      	nop
 8000fa0:	40004400 	.word	0x40004400
 8000fa4:	40023800 	.word	0x40023800
 8000fa8:	40020000 	.word	0x40020000

08000fac <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000fac:	b480      	push	{r7}
 8000fae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000fb0:	bf00      	nop
 8000fb2:	e7fd      	b.n	8000fb0 <NMI_Handler+0x4>

08000fb4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000fb4:	b480      	push	{r7}
 8000fb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000fb8:	bf00      	nop
 8000fba:	e7fd      	b.n	8000fb8 <HardFault_Handler+0x4>

08000fbc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000fbc:	b480      	push	{r7}
 8000fbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000fc0:	bf00      	nop
 8000fc2:	e7fd      	b.n	8000fc0 <MemManage_Handler+0x4>

08000fc4 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000fc4:	b480      	push	{r7}
 8000fc6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000fc8:	bf00      	nop
 8000fca:	e7fd      	b.n	8000fc8 <BusFault_Handler+0x4>

08000fcc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000fcc:	b480      	push	{r7}
 8000fce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000fd0:	bf00      	nop
 8000fd2:	e7fd      	b.n	8000fd0 <UsageFault_Handler+0x4>

08000fd4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000fd4:	b480      	push	{r7}
 8000fd6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000fd8:	bf00      	nop
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe0:	4770      	bx	lr

08000fe2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000fe2:	b480      	push	{r7}
 8000fe4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000fe6:	bf00      	nop
 8000fe8:	46bd      	mov	sp, r7
 8000fea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fee:	4770      	bx	lr

08000ff0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000ff0:	b480      	push	{r7}
 8000ff2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000ff4:	bf00      	nop
 8000ff6:	46bd      	mov	sp, r7
 8000ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ffc:	4770      	bx	lr

08000ffe <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000ffe:	b580      	push	{r7, lr}
 8001000:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001002:	f000 f90b 	bl	800121c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001006:	bf00      	nop
 8001008:	bd80      	pop	{r7, pc}
	...

0800100c <TIM2_IRQHandler>:
/**
  * @brief This function handles TIM2 global interrupt.
  * Interrupt 64 times per second
  */
void TIM2_IRQHandler(void)
{
 800100c:	b580      	push	{r7, lr}
 800100e:	b082      	sub	sp, #8
 8001010:	af00      	add	r7, sp, #0
	uint16_t filtered_value = MovingAverageFilter_Apply(&adc_filter, (uint16_t)ADC_value);
 8001012:	4b16      	ldr	r3, [pc, #88]	@ (800106c <TIM2_IRQHandler+0x60>)
 8001014:	681b      	ldr	r3, [r3, #0]
 8001016:	b29b      	uxth	r3, r3
 8001018:	4619      	mov	r1, r3
 800101a:	4815      	ldr	r0, [pc, #84]	@ (8001070 <TIM2_IRQHandler+0x64>)
 800101c:	f7ff fc42 	bl	80008a4 <MovingAverageFilter_Apply>
 8001020:	4603      	mov	r3, r0
 8001022:	80fb      	strh	r3, [r7, #6]

	uint8_t high_byte = (filtered_value >> 8) & 0xFF;
 8001024:	88fb      	ldrh	r3, [r7, #6]
 8001026:	0a1b      	lsrs	r3, r3, #8
 8001028:	b29b      	uxth	r3, r3
 800102a:	b2db      	uxtb	r3, r3
 800102c:	717b      	strb	r3, [r7, #5]
	uint8_t low_byte = filtered_value & 0xFF;
 800102e:	88fb      	ldrh	r3, [r7, #6]
 8001030:	b2db      	uxtb	r3, r3
 8001032:	713b      	strb	r3, [r7, #4]
	cb_write(&adc_buffer, &high_byte, 1);
 8001034:	1d7b      	adds	r3, r7, #5
 8001036:	2201      	movs	r2, #1
 8001038:	4619      	mov	r1, r3
 800103a:	480e      	ldr	r0, [pc, #56]	@ (8001074 <TIM2_IRQHandler+0x68>)
 800103c:	f7ff fb11 	bl	8000662 <cb_write>
	cb_write(&adc_buffer, &low_byte, 1);
 8001040:	1d3b      	adds	r3, r7, #4
 8001042:	2201      	movs	r2, #1
 8001044:	4619      	mov	r1, r3
 8001046:	480b      	ldr	r0, [pc, #44]	@ (8001074 <TIM2_IRQHandler+0x68>)
 8001048:	f7ff fb0b 	bl	8000662 <cb_write>

	if (cb_data_count(&adc_buffer) >= 128)
 800104c:	4809      	ldr	r0, [pc, #36]	@ (8001074 <TIM2_IRQHandler+0x68>)
 800104e:	f7ff fb56 	bl	80006fe <cb_data_count>
 8001052:	4603      	mov	r3, r0
 8001054:	2b7f      	cmp	r3, #127	@ 0x7f
 8001056:	d902      	bls.n	800105e <TIM2_IRQHandler+0x52>
	{
		send_flag = 1;
 8001058:	4b07      	ldr	r3, [pc, #28]	@ (8001078 <TIM2_IRQHandler+0x6c>)
 800105a:	2201      	movs	r2, #1
 800105c:	701a      	strb	r2, [r3, #0]
	}
	  /* USER CODE END TIM2_IRQn 0 */
	HAL_TIM_IRQHandler(&htim2);
 800105e:	4807      	ldr	r0, [pc, #28]	@ (800107c <TIM2_IRQHandler+0x70>)
 8001060:	f002 f90c 	bl	800327c <HAL_TIM_IRQHandler>
}
 8001064:	bf00      	nop
 8001066:	3708      	adds	r7, #8
 8001068:	46bd      	mov	sp, r7
 800106a:	bd80      	pop	{r7, pc}
 800106c:	20000310 	.word	0x20000310
 8001070:	20000314 	.word	0x20000314
 8001074:	2000031c 	.word	0x2000031c
 8001078:	2000030e 	.word	0x2000030e
 800107c:	20000120 	.word	0x20000120

08001080 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8001080:	b580      	push	{r7, lr}
 8001082:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001084:	4802      	ldr	r0, [pc, #8]	@ (8001090 <DMA2_Stream0_IRQHandler+0x10>)
 8001086:	f000 ffc1 	bl	800200c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 800108a:	bf00      	nop
 800108c:	bd80      	pop	{r7, pc}
 800108e:	bf00      	nop
 8001090:	200000c0 	.word	0x200000c0

08001094 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001094:	b580      	push	{r7, lr}
 8001096:	b086      	sub	sp, #24
 8001098:	af00      	add	r7, sp, #0
 800109a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800109c:	4a14      	ldr	r2, [pc, #80]	@ (80010f0 <_sbrk+0x5c>)
 800109e:	4b15      	ldr	r3, [pc, #84]	@ (80010f4 <_sbrk+0x60>)
 80010a0:	1ad3      	subs	r3, r2, r3
 80010a2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80010a4:	697b      	ldr	r3, [r7, #20]
 80010a6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80010a8:	4b13      	ldr	r3, [pc, #76]	@ (80010f8 <_sbrk+0x64>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	2b00      	cmp	r3, #0
 80010ae:	d102      	bne.n	80010b6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80010b0:	4b11      	ldr	r3, [pc, #68]	@ (80010f8 <_sbrk+0x64>)
 80010b2:	4a12      	ldr	r2, [pc, #72]	@ (80010fc <_sbrk+0x68>)
 80010b4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80010b6:	4b10      	ldr	r3, [pc, #64]	@ (80010f8 <_sbrk+0x64>)
 80010b8:	681a      	ldr	r2, [r3, #0]
 80010ba:	687b      	ldr	r3, [r7, #4]
 80010bc:	4413      	add	r3, r2
 80010be:	693a      	ldr	r2, [r7, #16]
 80010c0:	429a      	cmp	r2, r3
 80010c2:	d207      	bcs.n	80010d4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80010c4:	f003 f8a0 	bl	8004208 <__errno>
 80010c8:	4603      	mov	r3, r0
 80010ca:	220c      	movs	r2, #12
 80010cc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80010ce:	f04f 33ff 	mov.w	r3, #4294967295
 80010d2:	e009      	b.n	80010e8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80010d4:	4b08      	ldr	r3, [pc, #32]	@ (80010f8 <_sbrk+0x64>)
 80010d6:	681b      	ldr	r3, [r3, #0]
 80010d8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80010da:	4b07      	ldr	r3, [pc, #28]	@ (80010f8 <_sbrk+0x64>)
 80010dc:	681a      	ldr	r2, [r3, #0]
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	4413      	add	r3, r2
 80010e2:	4a05      	ldr	r2, [pc, #20]	@ (80010f8 <_sbrk+0x64>)
 80010e4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80010e6:	68fb      	ldr	r3, [r7, #12]
}
 80010e8:	4618      	mov	r0, r3
 80010ea:	3718      	adds	r7, #24
 80010ec:	46bd      	mov	sp, r7
 80010ee:	bd80      	pop	{r7, pc}
 80010f0:	20020000 	.word	0x20020000
 80010f4:	00000400 	.word	0x00000400
 80010f8:	20000534 	.word	0x20000534
 80010fc:	20000688 	.word	0x20000688

08001100 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001100:	b480      	push	{r7}
 8001102:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001104:	4b06      	ldr	r3, [pc, #24]	@ (8001120 <SystemInit+0x20>)
 8001106:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800110a:	4a05      	ldr	r2, [pc, #20]	@ (8001120 <SystemInit+0x20>)
 800110c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001110:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001114:	bf00      	nop
 8001116:	46bd      	mov	sp, r7
 8001118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800111c:	4770      	bx	lr
 800111e:	bf00      	nop
 8001120:	e000ed00 	.word	0xe000ed00

08001124 <Reset_Handler>:
 8001124:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800115c <LoopFillZerobss+0xe>
 8001128:	f7ff ffea 	bl	8001100 <SystemInit>
 800112c:	480c      	ldr	r0, [pc, #48]	@ (8001160 <LoopFillZerobss+0x12>)
 800112e:	490d      	ldr	r1, [pc, #52]	@ (8001164 <LoopFillZerobss+0x16>)
 8001130:	4a0d      	ldr	r2, [pc, #52]	@ (8001168 <LoopFillZerobss+0x1a>)
 8001132:	2300      	movs	r3, #0
 8001134:	e002      	b.n	800113c <LoopCopyDataInit>

08001136 <CopyDataInit>:
 8001136:	58d4      	ldr	r4, [r2, r3]
 8001138:	50c4      	str	r4, [r0, r3]
 800113a:	3304      	adds	r3, #4

0800113c <LoopCopyDataInit>:
 800113c:	18c4      	adds	r4, r0, r3
 800113e:	428c      	cmp	r4, r1
 8001140:	d3f9      	bcc.n	8001136 <CopyDataInit>
 8001142:	4a0a      	ldr	r2, [pc, #40]	@ (800116c <LoopFillZerobss+0x1e>)
 8001144:	4c0a      	ldr	r4, [pc, #40]	@ (8001170 <LoopFillZerobss+0x22>)
 8001146:	2300      	movs	r3, #0
 8001148:	e001      	b.n	800114e <LoopFillZerobss>

0800114a <FillZerobss>:
 800114a:	6013      	str	r3, [r2, #0]
 800114c:	3204      	adds	r2, #4

0800114e <LoopFillZerobss>:
 800114e:	42a2      	cmp	r2, r4
 8001150:	d3fb      	bcc.n	800114a <FillZerobss>
 8001152:	f003 f85f 	bl	8004214 <__libc_init_array>
 8001156:	f7ff fbe9 	bl	800092c <main>
 800115a:	4770      	bx	lr
 800115c:	20020000 	.word	0x20020000
 8001160:	20000000 	.word	0x20000000
 8001164:	2000005c 	.word	0x2000005c
 8001168:	08004b94 	.word	0x08004b94
 800116c:	2000005c 	.word	0x2000005c
 8001170:	20000684 	.word	0x20000684

08001174 <ADC_IRQHandler>:
 8001174:	e7fe      	b.n	8001174 <ADC_IRQHandler>
	...

08001178 <HAL_Init>:
 8001178:	b580      	push	{r7, lr}
 800117a:	af00      	add	r7, sp, #0
 800117c:	4b0e      	ldr	r3, [pc, #56]	@ (80011b8 <HAL_Init+0x40>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	4a0d      	ldr	r2, [pc, #52]	@ (80011b8 <HAL_Init+0x40>)
 8001182:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001186:	6013      	str	r3, [r2, #0]
 8001188:	4b0b      	ldr	r3, [pc, #44]	@ (80011b8 <HAL_Init+0x40>)
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	4a0a      	ldr	r2, [pc, #40]	@ (80011b8 <HAL_Init+0x40>)
 800118e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001192:	6013      	str	r3, [r2, #0]
 8001194:	4b08      	ldr	r3, [pc, #32]	@ (80011b8 <HAL_Init+0x40>)
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	4a07      	ldr	r2, [pc, #28]	@ (80011b8 <HAL_Init+0x40>)
 800119a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800119e:	6013      	str	r3, [r2, #0]
 80011a0:	2003      	movs	r0, #3
 80011a2:	f000 fdeb 	bl	8001d7c <HAL_NVIC_SetPriorityGrouping>
 80011a6:	2000      	movs	r0, #0
 80011a8:	f000 f808 	bl	80011bc <HAL_InitTick>
 80011ac:	f7ff fdf0 	bl	8000d90 <HAL_MspInit>
 80011b0:	2300      	movs	r3, #0
 80011b2:	4618      	mov	r0, r3
 80011b4:	bd80      	pop	{r7, pc}
 80011b6:	bf00      	nop
 80011b8:	40023c00 	.word	0x40023c00

080011bc <HAL_InitTick>:
 80011bc:	b580      	push	{r7, lr}
 80011be:	b082      	sub	sp, #8
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	6078      	str	r0, [r7, #4]
 80011c4:	4b12      	ldr	r3, [pc, #72]	@ (8001210 <HAL_InitTick+0x54>)
 80011c6:	681a      	ldr	r2, [r3, #0]
 80011c8:	4b12      	ldr	r3, [pc, #72]	@ (8001214 <HAL_InitTick+0x58>)
 80011ca:	781b      	ldrb	r3, [r3, #0]
 80011cc:	4619      	mov	r1, r3
 80011ce:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80011d2:	fbb3 f3f1 	udiv	r3, r3, r1
 80011d6:	fbb2 f3f3 	udiv	r3, r2, r3
 80011da:	4618      	mov	r0, r3
 80011dc:	f000 fe03 	bl	8001de6 <HAL_SYSTICK_Config>
 80011e0:	4603      	mov	r3, r0
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d001      	beq.n	80011ea <HAL_InitTick+0x2e>
 80011e6:	2301      	movs	r3, #1
 80011e8:	e00e      	b.n	8001208 <HAL_InitTick+0x4c>
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	2b0f      	cmp	r3, #15
 80011ee:	d80a      	bhi.n	8001206 <HAL_InitTick+0x4a>
 80011f0:	2200      	movs	r2, #0
 80011f2:	6879      	ldr	r1, [r7, #4]
 80011f4:	f04f 30ff 	mov.w	r0, #4294967295
 80011f8:	f000 fdcb 	bl	8001d92 <HAL_NVIC_SetPriority>
 80011fc:	4a06      	ldr	r2, [pc, #24]	@ (8001218 <HAL_InitTick+0x5c>)
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	6013      	str	r3, [r2, #0]
 8001202:	2300      	movs	r3, #0
 8001204:	e000      	b.n	8001208 <HAL_InitTick+0x4c>
 8001206:	2301      	movs	r3, #1
 8001208:	4618      	mov	r0, r3
 800120a:	3708      	adds	r7, #8
 800120c:	46bd      	mov	sp, r7
 800120e:	bd80      	pop	{r7, pc}
 8001210:	20000000 	.word	0x20000000
 8001214:	20000008 	.word	0x20000008
 8001218:	20000004 	.word	0x20000004

0800121c <HAL_IncTick>:
 800121c:	b480      	push	{r7}
 800121e:	af00      	add	r7, sp, #0
 8001220:	4b06      	ldr	r3, [pc, #24]	@ (800123c <HAL_IncTick+0x20>)
 8001222:	781b      	ldrb	r3, [r3, #0]
 8001224:	461a      	mov	r2, r3
 8001226:	4b06      	ldr	r3, [pc, #24]	@ (8001240 <HAL_IncTick+0x24>)
 8001228:	681b      	ldr	r3, [r3, #0]
 800122a:	4413      	add	r3, r2
 800122c:	4a04      	ldr	r2, [pc, #16]	@ (8001240 <HAL_IncTick+0x24>)
 800122e:	6013      	str	r3, [r2, #0]
 8001230:	bf00      	nop
 8001232:	46bd      	mov	sp, r7
 8001234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001238:	4770      	bx	lr
 800123a:	bf00      	nop
 800123c:	20000008 	.word	0x20000008
 8001240:	20000538 	.word	0x20000538

08001244 <HAL_GetTick>:
 8001244:	b480      	push	{r7}
 8001246:	af00      	add	r7, sp, #0
 8001248:	4b03      	ldr	r3, [pc, #12]	@ (8001258 <HAL_GetTick+0x14>)
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	4618      	mov	r0, r3
 800124e:	46bd      	mov	sp, r7
 8001250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001254:	4770      	bx	lr
 8001256:	bf00      	nop
 8001258:	20000538 	.word	0x20000538

0800125c <HAL_ADC_Init>:
 800125c:	b580      	push	{r7, lr}
 800125e:	b084      	sub	sp, #16
 8001260:	af00      	add	r7, sp, #0
 8001262:	6078      	str	r0, [r7, #4]
 8001264:	2300      	movs	r3, #0
 8001266:	73fb      	strb	r3, [r7, #15]
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	2b00      	cmp	r3, #0
 800126c:	d101      	bne.n	8001272 <HAL_ADC_Init+0x16>
 800126e:	2301      	movs	r3, #1
 8001270:	e033      	b.n	80012da <HAL_ADC_Init+0x7e>
 8001272:	687b      	ldr	r3, [r7, #4]
 8001274:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001276:	2b00      	cmp	r3, #0
 8001278:	d109      	bne.n	800128e <HAL_ADC_Init+0x32>
 800127a:	6878      	ldr	r0, [r7, #4]
 800127c:	f7ff fdb0 	bl	8000de0 <HAL_ADC_MspInit>
 8001280:	687b      	ldr	r3, [r7, #4]
 8001282:	2200      	movs	r2, #0
 8001284:	645a      	str	r2, [r3, #68]	@ 0x44
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	2200      	movs	r2, #0
 800128a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800128e:	687b      	ldr	r3, [r7, #4]
 8001290:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001292:	f003 0310 	and.w	r3, r3, #16
 8001296:	2b00      	cmp	r3, #0
 8001298:	d118      	bne.n	80012cc <HAL_ADC_Init+0x70>
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800129e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80012a2:	f023 0302 	bic.w	r3, r3, #2
 80012a6:	f043 0202 	orr.w	r2, r3, #2
 80012aa:	687b      	ldr	r3, [r7, #4]
 80012ac:	641a      	str	r2, [r3, #64]	@ 0x40
 80012ae:	6878      	ldr	r0, [r7, #4]
 80012b0:	f000 fb16 	bl	80018e0 <ADC_Init>
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	2200      	movs	r2, #0
 80012b8:	645a      	str	r2, [r3, #68]	@ 0x44
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012be:	f023 0303 	bic.w	r3, r3, #3
 80012c2:	f043 0201 	orr.w	r2, r3, #1
 80012c6:	687b      	ldr	r3, [r7, #4]
 80012c8:	641a      	str	r2, [r3, #64]	@ 0x40
 80012ca:	e001      	b.n	80012d0 <HAL_ADC_Init+0x74>
 80012cc:	2301      	movs	r3, #1
 80012ce:	73fb      	strb	r3, [r7, #15]
 80012d0:	687b      	ldr	r3, [r7, #4]
 80012d2:	2200      	movs	r2, #0
 80012d4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80012d8:	7bfb      	ldrb	r3, [r7, #15]
 80012da:	4618      	mov	r0, r3
 80012dc:	3710      	adds	r7, #16
 80012de:	46bd      	mov	sp, r7
 80012e0:	bd80      	pop	{r7, pc}
	...

080012e4 <HAL_ADC_Start_IT>:
 80012e4:	b480      	push	{r7}
 80012e6:	b085      	sub	sp, #20
 80012e8:	af00      	add	r7, sp, #0
 80012ea:	6078      	str	r0, [r7, #4]
 80012ec:	2300      	movs	r3, #0
 80012ee:	60bb      	str	r3, [r7, #8]
 80012f0:	687b      	ldr	r3, [r7, #4]
 80012f2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80012f6:	2b01      	cmp	r3, #1
 80012f8:	d101      	bne.n	80012fe <HAL_ADC_Start_IT+0x1a>
 80012fa:	2302      	movs	r3, #2
 80012fc:	e0a1      	b.n	8001442 <HAL_ADC_Start_IT+0x15e>
 80012fe:	687b      	ldr	r3, [r7, #4]
 8001300:	2201      	movs	r2, #1
 8001302:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	681b      	ldr	r3, [r3, #0]
 800130a:	689b      	ldr	r3, [r3, #8]
 800130c:	f003 0301 	and.w	r3, r3, #1
 8001310:	2b01      	cmp	r3, #1
 8001312:	d018      	beq.n	8001346 <HAL_ADC_Start_IT+0x62>
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	689a      	ldr	r2, [r3, #8]
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	f042 0201 	orr.w	r2, r2, #1
 8001322:	609a      	str	r2, [r3, #8]
 8001324:	4b4a      	ldr	r3, [pc, #296]	@ (8001450 <HAL_ADC_Start_IT+0x16c>)
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	4a4a      	ldr	r2, [pc, #296]	@ (8001454 <HAL_ADC_Start_IT+0x170>)
 800132a:	fba2 2303 	umull	r2, r3, r2, r3
 800132e:	0c9a      	lsrs	r2, r3, #18
 8001330:	4613      	mov	r3, r2
 8001332:	005b      	lsls	r3, r3, #1
 8001334:	4413      	add	r3, r2
 8001336:	60bb      	str	r3, [r7, #8]
 8001338:	e002      	b.n	8001340 <HAL_ADC_Start_IT+0x5c>
 800133a:	68bb      	ldr	r3, [r7, #8]
 800133c:	3b01      	subs	r3, #1
 800133e:	60bb      	str	r3, [r7, #8]
 8001340:	68bb      	ldr	r3, [r7, #8]
 8001342:	2b00      	cmp	r3, #0
 8001344:	d1f9      	bne.n	800133a <HAL_ADC_Start_IT+0x56>
 8001346:	687b      	ldr	r3, [r7, #4]
 8001348:	681b      	ldr	r3, [r3, #0]
 800134a:	689b      	ldr	r3, [r3, #8]
 800134c:	f003 0301 	and.w	r3, r3, #1
 8001350:	2b01      	cmp	r3, #1
 8001352:	d169      	bne.n	8001428 <HAL_ADC_Start_IT+0x144>
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001358:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 800135c:	f023 0301 	bic.w	r3, r3, #1
 8001360:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	641a      	str	r2, [r3, #64]	@ 0x40
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	681b      	ldr	r3, [r3, #0]
 800136c:	685b      	ldr	r3, [r3, #4]
 800136e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001372:	2b00      	cmp	r3, #0
 8001374:	d007      	beq.n	8001386 <HAL_ADC_Start_IT+0xa2>
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800137a:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800137e:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001382:	687b      	ldr	r3, [r7, #4]
 8001384:	641a      	str	r2, [r3, #64]	@ 0x40
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800138a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800138e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001392:	d106      	bne.n	80013a2 <HAL_ADC_Start_IT+0xbe>
 8001394:	687b      	ldr	r3, [r7, #4]
 8001396:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001398:	f023 0206 	bic.w	r2, r3, #6
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	645a      	str	r2, [r3, #68]	@ 0x44
 80013a0:	e002      	b.n	80013a8 <HAL_ADC_Start_IT+0xc4>
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	2200      	movs	r2, #0
 80013a6:	645a      	str	r2, [r3, #68]	@ 0x44
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	2200      	movs	r2, #0
 80013ac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80013b0:	4b29      	ldr	r3, [pc, #164]	@ (8001458 <HAL_ADC_Start_IT+0x174>)
 80013b2:	60fb      	str	r3, [r7, #12]
 80013b4:	687b      	ldr	r3, [r7, #4]
 80013b6:	681b      	ldr	r3, [r3, #0]
 80013b8:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 80013bc:	601a      	str	r2, [r3, #0]
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	681b      	ldr	r3, [r3, #0]
 80013c2:	685b      	ldr	r3, [r3, #4]
 80013c4:	687a      	ldr	r2, [r7, #4]
 80013c6:	6812      	ldr	r2, [r2, #0]
 80013c8:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80013cc:	f043 0320 	orr.w	r3, r3, #32
 80013d0:	6053      	str	r3, [r2, #4]
 80013d2:	68fb      	ldr	r3, [r7, #12]
 80013d4:	685b      	ldr	r3, [r3, #4]
 80013d6:	f003 031f 	and.w	r3, r3, #31
 80013da:	2b00      	cmp	r3, #0
 80013dc:	d10f      	bne.n	80013fe <HAL_ADC_Start_IT+0x11a>
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	681b      	ldr	r3, [r3, #0]
 80013e2:	689b      	ldr	r3, [r3, #8]
 80013e4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80013e8:	2b00      	cmp	r3, #0
 80013ea:	d129      	bne.n	8001440 <HAL_ADC_Start_IT+0x15c>
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	681b      	ldr	r3, [r3, #0]
 80013f0:	689a      	ldr	r2, [r3, #8]
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80013fa:	609a      	str	r2, [r3, #8]
 80013fc:	e020      	b.n	8001440 <HAL_ADC_Start_IT+0x15c>
 80013fe:	687b      	ldr	r3, [r7, #4]
 8001400:	681b      	ldr	r3, [r3, #0]
 8001402:	4a16      	ldr	r2, [pc, #88]	@ (800145c <HAL_ADC_Start_IT+0x178>)
 8001404:	4293      	cmp	r3, r2
 8001406:	d11b      	bne.n	8001440 <HAL_ADC_Start_IT+0x15c>
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	681b      	ldr	r3, [r3, #0]
 800140c:	689b      	ldr	r3, [r3, #8]
 800140e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001412:	2b00      	cmp	r3, #0
 8001414:	d114      	bne.n	8001440 <HAL_ADC_Start_IT+0x15c>
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	681b      	ldr	r3, [r3, #0]
 800141a:	689a      	ldr	r2, [r3, #8]
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	681b      	ldr	r3, [r3, #0]
 8001420:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8001424:	609a      	str	r2, [r3, #8]
 8001426:	e00b      	b.n	8001440 <HAL_ADC_Start_IT+0x15c>
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800142c:	f043 0210 	orr.w	r2, r3, #16
 8001430:	687b      	ldr	r3, [r7, #4]
 8001432:	641a      	str	r2, [r3, #64]	@ 0x40
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001438:	f043 0201 	orr.w	r2, r3, #1
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	645a      	str	r2, [r3, #68]	@ 0x44
 8001440:	2300      	movs	r3, #0
 8001442:	4618      	mov	r0, r3
 8001444:	3714      	adds	r7, #20
 8001446:	46bd      	mov	sp, r7
 8001448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800144c:	4770      	bx	lr
 800144e:	bf00      	nop
 8001450:	20000000 	.word	0x20000000
 8001454:	431bde83 	.word	0x431bde83
 8001458:	40012300 	.word	0x40012300
 800145c:	40012000 	.word	0x40012000

08001460 <HAL_ADC_Start_DMA>:
 8001460:	b580      	push	{r7, lr}
 8001462:	b086      	sub	sp, #24
 8001464:	af00      	add	r7, sp, #0
 8001466:	60f8      	str	r0, [r7, #12]
 8001468:	60b9      	str	r1, [r7, #8]
 800146a:	607a      	str	r2, [r7, #4]
 800146c:	2300      	movs	r3, #0
 800146e:	613b      	str	r3, [r7, #16]
 8001470:	68fb      	ldr	r3, [r7, #12]
 8001472:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001476:	2b01      	cmp	r3, #1
 8001478:	d101      	bne.n	800147e <HAL_ADC_Start_DMA+0x1e>
 800147a:	2302      	movs	r3, #2
 800147c:	e0ce      	b.n	800161c <HAL_ADC_Start_DMA+0x1bc>
 800147e:	68fb      	ldr	r3, [r7, #12]
 8001480:	2201      	movs	r2, #1
 8001482:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001486:	68fb      	ldr	r3, [r7, #12]
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	689b      	ldr	r3, [r3, #8]
 800148c:	f003 0301 	and.w	r3, r3, #1
 8001490:	2b01      	cmp	r3, #1
 8001492:	d018      	beq.n	80014c6 <HAL_ADC_Start_DMA+0x66>
 8001494:	68fb      	ldr	r3, [r7, #12]
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	689a      	ldr	r2, [r3, #8]
 800149a:	68fb      	ldr	r3, [r7, #12]
 800149c:	681b      	ldr	r3, [r3, #0]
 800149e:	f042 0201 	orr.w	r2, r2, #1
 80014a2:	609a      	str	r2, [r3, #8]
 80014a4:	4b5f      	ldr	r3, [pc, #380]	@ (8001624 <HAL_ADC_Start_DMA+0x1c4>)
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	4a5f      	ldr	r2, [pc, #380]	@ (8001628 <HAL_ADC_Start_DMA+0x1c8>)
 80014aa:	fba2 2303 	umull	r2, r3, r2, r3
 80014ae:	0c9a      	lsrs	r2, r3, #18
 80014b0:	4613      	mov	r3, r2
 80014b2:	005b      	lsls	r3, r3, #1
 80014b4:	4413      	add	r3, r2
 80014b6:	613b      	str	r3, [r7, #16]
 80014b8:	e002      	b.n	80014c0 <HAL_ADC_Start_DMA+0x60>
 80014ba:	693b      	ldr	r3, [r7, #16]
 80014bc:	3b01      	subs	r3, #1
 80014be:	613b      	str	r3, [r7, #16]
 80014c0:	693b      	ldr	r3, [r7, #16]
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d1f9      	bne.n	80014ba <HAL_ADC_Start_DMA+0x5a>
 80014c6:	68fb      	ldr	r3, [r7, #12]
 80014c8:	681b      	ldr	r3, [r3, #0]
 80014ca:	689b      	ldr	r3, [r3, #8]
 80014cc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80014d0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80014d4:	d107      	bne.n	80014e6 <HAL_ADC_Start_DMA+0x86>
 80014d6:	68fb      	ldr	r3, [r7, #12]
 80014d8:	681b      	ldr	r3, [r3, #0]
 80014da:	689a      	ldr	r2, [r3, #8]
 80014dc:	68fb      	ldr	r3, [r7, #12]
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80014e4:	609a      	str	r2, [r3, #8]
 80014e6:	68fb      	ldr	r3, [r7, #12]
 80014e8:	681b      	ldr	r3, [r3, #0]
 80014ea:	689b      	ldr	r3, [r3, #8]
 80014ec:	f003 0301 	and.w	r3, r3, #1
 80014f0:	2b01      	cmp	r3, #1
 80014f2:	f040 8086 	bne.w	8001602 <HAL_ADC_Start_DMA+0x1a2>
 80014f6:	68fb      	ldr	r3, [r7, #12]
 80014f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80014fa:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 80014fe:	f023 0301 	bic.w	r3, r3, #1
 8001502:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001506:	68fb      	ldr	r3, [r7, #12]
 8001508:	641a      	str	r2, [r3, #64]	@ 0x40
 800150a:	68fb      	ldr	r3, [r7, #12]
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	685b      	ldr	r3, [r3, #4]
 8001510:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001514:	2b00      	cmp	r3, #0
 8001516:	d007      	beq.n	8001528 <HAL_ADC_Start_DMA+0xc8>
 8001518:	68fb      	ldr	r3, [r7, #12]
 800151a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800151c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001520:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8001524:	68fb      	ldr	r3, [r7, #12]
 8001526:	641a      	str	r2, [r3, #64]	@ 0x40
 8001528:	68fb      	ldr	r3, [r7, #12]
 800152a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800152c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001530:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001534:	d106      	bne.n	8001544 <HAL_ADC_Start_DMA+0xe4>
 8001536:	68fb      	ldr	r3, [r7, #12]
 8001538:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800153a:	f023 0206 	bic.w	r2, r3, #6
 800153e:	68fb      	ldr	r3, [r7, #12]
 8001540:	645a      	str	r2, [r3, #68]	@ 0x44
 8001542:	e002      	b.n	800154a <HAL_ADC_Start_DMA+0xea>
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	2200      	movs	r2, #0
 8001548:	645a      	str	r2, [r3, #68]	@ 0x44
 800154a:	68fb      	ldr	r3, [r7, #12]
 800154c:	2200      	movs	r2, #0
 800154e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001552:	4b36      	ldr	r3, [pc, #216]	@ (800162c <HAL_ADC_Start_DMA+0x1cc>)
 8001554:	617b      	str	r3, [r7, #20]
 8001556:	68fb      	ldr	r3, [r7, #12]
 8001558:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800155a:	4a35      	ldr	r2, [pc, #212]	@ (8001630 <HAL_ADC_Start_DMA+0x1d0>)
 800155c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800155e:	68fb      	ldr	r3, [r7, #12]
 8001560:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001562:	4a34      	ldr	r2, [pc, #208]	@ (8001634 <HAL_ADC_Start_DMA+0x1d4>)
 8001564:	641a      	str	r2, [r3, #64]	@ 0x40
 8001566:	68fb      	ldr	r3, [r7, #12]
 8001568:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800156a:	4a33      	ldr	r2, [pc, #204]	@ (8001638 <HAL_ADC_Start_DMA+0x1d8>)
 800156c:	64da      	str	r2, [r3, #76]	@ 0x4c
 800156e:	68fb      	ldr	r3, [r7, #12]
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8001576:	601a      	str	r2, [r3, #0]
 8001578:	68fb      	ldr	r3, [r7, #12]
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	685a      	ldr	r2, [r3, #4]
 800157e:	68fb      	ldr	r3, [r7, #12]
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8001586:	605a      	str	r2, [r3, #4]
 8001588:	68fb      	ldr	r3, [r7, #12]
 800158a:	681b      	ldr	r3, [r3, #0]
 800158c:	689a      	ldr	r2, [r3, #8]
 800158e:	68fb      	ldr	r3, [r7, #12]
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001596:	609a      	str	r2, [r3, #8]
 8001598:	68fb      	ldr	r3, [r7, #12]
 800159a:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800159c:	68fb      	ldr	r3, [r7, #12]
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	334c      	adds	r3, #76	@ 0x4c
 80015a2:	4619      	mov	r1, r3
 80015a4:	68ba      	ldr	r2, [r7, #8]
 80015a6:	687b      	ldr	r3, [r7, #4]
 80015a8:	f000 fcd8 	bl	8001f5c <HAL_DMA_Start_IT>
 80015ac:	697b      	ldr	r3, [r7, #20]
 80015ae:	685b      	ldr	r3, [r3, #4]
 80015b0:	f003 031f 	and.w	r3, r3, #31
 80015b4:	2b00      	cmp	r3, #0
 80015b6:	d10f      	bne.n	80015d8 <HAL_ADC_Start_DMA+0x178>
 80015b8:	68fb      	ldr	r3, [r7, #12]
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	689b      	ldr	r3, [r3, #8]
 80015be:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80015c2:	2b00      	cmp	r3, #0
 80015c4:	d129      	bne.n	800161a <HAL_ADC_Start_DMA+0x1ba>
 80015c6:	68fb      	ldr	r3, [r7, #12]
 80015c8:	681b      	ldr	r3, [r3, #0]
 80015ca:	689a      	ldr	r2, [r3, #8]
 80015cc:	68fb      	ldr	r3, [r7, #12]
 80015ce:	681b      	ldr	r3, [r3, #0]
 80015d0:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80015d4:	609a      	str	r2, [r3, #8]
 80015d6:	e020      	b.n	800161a <HAL_ADC_Start_DMA+0x1ba>
 80015d8:	68fb      	ldr	r3, [r7, #12]
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	4a17      	ldr	r2, [pc, #92]	@ (800163c <HAL_ADC_Start_DMA+0x1dc>)
 80015de:	4293      	cmp	r3, r2
 80015e0:	d11b      	bne.n	800161a <HAL_ADC_Start_DMA+0x1ba>
 80015e2:	68fb      	ldr	r3, [r7, #12]
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	689b      	ldr	r3, [r3, #8]
 80015e8:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80015ec:	2b00      	cmp	r3, #0
 80015ee:	d114      	bne.n	800161a <HAL_ADC_Start_DMA+0x1ba>
 80015f0:	68fb      	ldr	r3, [r7, #12]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	689a      	ldr	r2, [r3, #8]
 80015f6:	68fb      	ldr	r3, [r7, #12]
 80015f8:	681b      	ldr	r3, [r3, #0]
 80015fa:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80015fe:	609a      	str	r2, [r3, #8]
 8001600:	e00b      	b.n	800161a <HAL_ADC_Start_DMA+0x1ba>
 8001602:	68fb      	ldr	r3, [r7, #12]
 8001604:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001606:	f043 0210 	orr.w	r2, r3, #16
 800160a:	68fb      	ldr	r3, [r7, #12]
 800160c:	641a      	str	r2, [r3, #64]	@ 0x40
 800160e:	68fb      	ldr	r3, [r7, #12]
 8001610:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001612:	f043 0201 	orr.w	r2, r3, #1
 8001616:	68fb      	ldr	r3, [r7, #12]
 8001618:	645a      	str	r2, [r3, #68]	@ 0x44
 800161a:	2300      	movs	r3, #0
 800161c:	4618      	mov	r0, r3
 800161e:	3718      	adds	r7, #24
 8001620:	46bd      	mov	sp, r7
 8001622:	bd80      	pop	{r7, pc}
 8001624:	20000000 	.word	0x20000000
 8001628:	431bde83 	.word	0x431bde83
 800162c:	40012300 	.word	0x40012300
 8001630:	08001ad9 	.word	0x08001ad9
 8001634:	08001b93 	.word	0x08001b93
 8001638:	08001baf 	.word	0x08001baf
 800163c:	40012000 	.word	0x40012000

08001640 <HAL_ADC_ConvCpltCallback>:
 8001640:	b480      	push	{r7}
 8001642:	b083      	sub	sp, #12
 8001644:	af00      	add	r7, sp, #0
 8001646:	6078      	str	r0, [r7, #4]
 8001648:	bf00      	nop
 800164a:	370c      	adds	r7, #12
 800164c:	46bd      	mov	sp, r7
 800164e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001652:	4770      	bx	lr

08001654 <HAL_ADC_ConvHalfCpltCallback>:
 8001654:	b480      	push	{r7}
 8001656:	b083      	sub	sp, #12
 8001658:	af00      	add	r7, sp, #0
 800165a:	6078      	str	r0, [r7, #4]
 800165c:	bf00      	nop
 800165e:	370c      	adds	r7, #12
 8001660:	46bd      	mov	sp, r7
 8001662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001666:	4770      	bx	lr

08001668 <HAL_ADC_ErrorCallback>:
 8001668:	b480      	push	{r7}
 800166a:	b083      	sub	sp, #12
 800166c:	af00      	add	r7, sp, #0
 800166e:	6078      	str	r0, [r7, #4]
 8001670:	bf00      	nop
 8001672:	370c      	adds	r7, #12
 8001674:	46bd      	mov	sp, r7
 8001676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800167a:	4770      	bx	lr

0800167c <HAL_ADC_ConfigChannel>:
 800167c:	b480      	push	{r7}
 800167e:	b085      	sub	sp, #20
 8001680:	af00      	add	r7, sp, #0
 8001682:	6078      	str	r0, [r7, #4]
 8001684:	6039      	str	r1, [r7, #0]
 8001686:	2300      	movs	r3, #0
 8001688:	60bb      	str	r3, [r7, #8]
 800168a:	687b      	ldr	r3, [r7, #4]
 800168c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001690:	2b01      	cmp	r3, #1
 8001692:	d101      	bne.n	8001698 <HAL_ADC_ConfigChannel+0x1c>
 8001694:	2302      	movs	r3, #2
 8001696:	e113      	b.n	80018c0 <HAL_ADC_ConfigChannel+0x244>
 8001698:	687b      	ldr	r3, [r7, #4]
 800169a:	2201      	movs	r2, #1
 800169c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80016a0:	683b      	ldr	r3, [r7, #0]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	2b09      	cmp	r3, #9
 80016a6:	d925      	bls.n	80016f4 <HAL_ADC_ConfigChannel+0x78>
 80016a8:	687b      	ldr	r3, [r7, #4]
 80016aa:	681b      	ldr	r3, [r3, #0]
 80016ac:	68d9      	ldr	r1, [r3, #12]
 80016ae:	683b      	ldr	r3, [r7, #0]
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	b29b      	uxth	r3, r3
 80016b4:	461a      	mov	r2, r3
 80016b6:	4613      	mov	r3, r2
 80016b8:	005b      	lsls	r3, r3, #1
 80016ba:	4413      	add	r3, r2
 80016bc:	3b1e      	subs	r3, #30
 80016be:	2207      	movs	r2, #7
 80016c0:	fa02 f303 	lsl.w	r3, r2, r3
 80016c4:	43da      	mvns	r2, r3
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	681b      	ldr	r3, [r3, #0]
 80016ca:	400a      	ands	r2, r1
 80016cc:	60da      	str	r2, [r3, #12]
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	68d9      	ldr	r1, [r3, #12]
 80016d4:	683b      	ldr	r3, [r7, #0]
 80016d6:	689a      	ldr	r2, [r3, #8]
 80016d8:	683b      	ldr	r3, [r7, #0]
 80016da:	681b      	ldr	r3, [r3, #0]
 80016dc:	b29b      	uxth	r3, r3
 80016de:	4618      	mov	r0, r3
 80016e0:	4603      	mov	r3, r0
 80016e2:	005b      	lsls	r3, r3, #1
 80016e4:	4403      	add	r3, r0
 80016e6:	3b1e      	subs	r3, #30
 80016e8:	409a      	lsls	r2, r3
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	681b      	ldr	r3, [r3, #0]
 80016ee:	430a      	orrs	r2, r1
 80016f0:	60da      	str	r2, [r3, #12]
 80016f2:	e022      	b.n	800173a <HAL_ADC_ConfigChannel+0xbe>
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	681b      	ldr	r3, [r3, #0]
 80016f8:	6919      	ldr	r1, [r3, #16]
 80016fa:	683b      	ldr	r3, [r7, #0]
 80016fc:	681b      	ldr	r3, [r3, #0]
 80016fe:	b29b      	uxth	r3, r3
 8001700:	461a      	mov	r2, r3
 8001702:	4613      	mov	r3, r2
 8001704:	005b      	lsls	r3, r3, #1
 8001706:	4413      	add	r3, r2
 8001708:	2207      	movs	r2, #7
 800170a:	fa02 f303 	lsl.w	r3, r2, r3
 800170e:	43da      	mvns	r2, r3
 8001710:	687b      	ldr	r3, [r7, #4]
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	400a      	ands	r2, r1
 8001716:	611a      	str	r2, [r3, #16]
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	6919      	ldr	r1, [r3, #16]
 800171e:	683b      	ldr	r3, [r7, #0]
 8001720:	689a      	ldr	r2, [r3, #8]
 8001722:	683b      	ldr	r3, [r7, #0]
 8001724:	681b      	ldr	r3, [r3, #0]
 8001726:	b29b      	uxth	r3, r3
 8001728:	4618      	mov	r0, r3
 800172a:	4603      	mov	r3, r0
 800172c:	005b      	lsls	r3, r3, #1
 800172e:	4403      	add	r3, r0
 8001730:	409a      	lsls	r2, r3
 8001732:	687b      	ldr	r3, [r7, #4]
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	430a      	orrs	r2, r1
 8001738:	611a      	str	r2, [r3, #16]
 800173a:	683b      	ldr	r3, [r7, #0]
 800173c:	685b      	ldr	r3, [r3, #4]
 800173e:	2b06      	cmp	r3, #6
 8001740:	d824      	bhi.n	800178c <HAL_ADC_ConfigChannel+0x110>
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001748:	683b      	ldr	r3, [r7, #0]
 800174a:	685a      	ldr	r2, [r3, #4]
 800174c:	4613      	mov	r3, r2
 800174e:	009b      	lsls	r3, r3, #2
 8001750:	4413      	add	r3, r2
 8001752:	3b05      	subs	r3, #5
 8001754:	221f      	movs	r2, #31
 8001756:	fa02 f303 	lsl.w	r3, r2, r3
 800175a:	43da      	mvns	r2, r3
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	400a      	ands	r2, r1
 8001762:	635a      	str	r2, [r3, #52]	@ 0x34
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	681b      	ldr	r3, [r3, #0]
 8001768:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800176a:	683b      	ldr	r3, [r7, #0]
 800176c:	681b      	ldr	r3, [r3, #0]
 800176e:	b29b      	uxth	r3, r3
 8001770:	4618      	mov	r0, r3
 8001772:	683b      	ldr	r3, [r7, #0]
 8001774:	685a      	ldr	r2, [r3, #4]
 8001776:	4613      	mov	r3, r2
 8001778:	009b      	lsls	r3, r3, #2
 800177a:	4413      	add	r3, r2
 800177c:	3b05      	subs	r3, #5
 800177e:	fa00 f203 	lsl.w	r2, r0, r3
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	681b      	ldr	r3, [r3, #0]
 8001786:	430a      	orrs	r2, r1
 8001788:	635a      	str	r2, [r3, #52]	@ 0x34
 800178a:	e04c      	b.n	8001826 <HAL_ADC_ConfigChannel+0x1aa>
 800178c:	683b      	ldr	r3, [r7, #0]
 800178e:	685b      	ldr	r3, [r3, #4]
 8001790:	2b0c      	cmp	r3, #12
 8001792:	d824      	bhi.n	80017de <HAL_ADC_ConfigChannel+0x162>
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800179a:	683b      	ldr	r3, [r7, #0]
 800179c:	685a      	ldr	r2, [r3, #4]
 800179e:	4613      	mov	r3, r2
 80017a0:	009b      	lsls	r3, r3, #2
 80017a2:	4413      	add	r3, r2
 80017a4:	3b23      	subs	r3, #35	@ 0x23
 80017a6:	221f      	movs	r2, #31
 80017a8:	fa02 f303 	lsl.w	r3, r2, r3
 80017ac:	43da      	mvns	r2, r3
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	400a      	ands	r2, r1
 80017b4:	631a      	str	r2, [r3, #48]	@ 0x30
 80017b6:	687b      	ldr	r3, [r7, #4]
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80017bc:	683b      	ldr	r3, [r7, #0]
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	b29b      	uxth	r3, r3
 80017c2:	4618      	mov	r0, r3
 80017c4:	683b      	ldr	r3, [r7, #0]
 80017c6:	685a      	ldr	r2, [r3, #4]
 80017c8:	4613      	mov	r3, r2
 80017ca:	009b      	lsls	r3, r3, #2
 80017cc:	4413      	add	r3, r2
 80017ce:	3b23      	subs	r3, #35	@ 0x23
 80017d0:	fa00 f203 	lsl.w	r2, r0, r3
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	430a      	orrs	r2, r1
 80017da:	631a      	str	r2, [r3, #48]	@ 0x30
 80017dc:	e023      	b.n	8001826 <HAL_ADC_ConfigChannel+0x1aa>
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80017e4:	683b      	ldr	r3, [r7, #0]
 80017e6:	685a      	ldr	r2, [r3, #4]
 80017e8:	4613      	mov	r3, r2
 80017ea:	009b      	lsls	r3, r3, #2
 80017ec:	4413      	add	r3, r2
 80017ee:	3b41      	subs	r3, #65	@ 0x41
 80017f0:	221f      	movs	r2, #31
 80017f2:	fa02 f303 	lsl.w	r3, r2, r3
 80017f6:	43da      	mvns	r2, r3
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	681b      	ldr	r3, [r3, #0]
 80017fc:	400a      	ands	r2, r1
 80017fe:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	681b      	ldr	r3, [r3, #0]
 8001804:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001806:	683b      	ldr	r3, [r7, #0]
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	b29b      	uxth	r3, r3
 800180c:	4618      	mov	r0, r3
 800180e:	683b      	ldr	r3, [r7, #0]
 8001810:	685a      	ldr	r2, [r3, #4]
 8001812:	4613      	mov	r3, r2
 8001814:	009b      	lsls	r3, r3, #2
 8001816:	4413      	add	r3, r2
 8001818:	3b41      	subs	r3, #65	@ 0x41
 800181a:	fa00 f203 	lsl.w	r2, r0, r3
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	430a      	orrs	r2, r1
 8001824:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001826:	4b29      	ldr	r3, [pc, #164]	@ (80018cc <HAL_ADC_ConfigChannel+0x250>)
 8001828:	60fb      	str	r3, [r7, #12]
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	4a28      	ldr	r2, [pc, #160]	@ (80018d0 <HAL_ADC_ConfigChannel+0x254>)
 8001830:	4293      	cmp	r3, r2
 8001832:	d10f      	bne.n	8001854 <HAL_ADC_ConfigChannel+0x1d8>
 8001834:	683b      	ldr	r3, [r7, #0]
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	2b12      	cmp	r3, #18
 800183a:	d10b      	bne.n	8001854 <HAL_ADC_ConfigChannel+0x1d8>
 800183c:	68fb      	ldr	r3, [r7, #12]
 800183e:	685b      	ldr	r3, [r3, #4]
 8001840:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8001844:	68fb      	ldr	r3, [r7, #12]
 8001846:	605a      	str	r2, [r3, #4]
 8001848:	68fb      	ldr	r3, [r7, #12]
 800184a:	685b      	ldr	r3, [r3, #4]
 800184c:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8001850:	68fb      	ldr	r3, [r7, #12]
 8001852:	605a      	str	r2, [r3, #4]
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	4a1d      	ldr	r2, [pc, #116]	@ (80018d0 <HAL_ADC_ConfigChannel+0x254>)
 800185a:	4293      	cmp	r3, r2
 800185c:	d12b      	bne.n	80018b6 <HAL_ADC_ConfigChannel+0x23a>
 800185e:	683b      	ldr	r3, [r7, #0]
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	4a1c      	ldr	r2, [pc, #112]	@ (80018d4 <HAL_ADC_ConfigChannel+0x258>)
 8001864:	4293      	cmp	r3, r2
 8001866:	d003      	beq.n	8001870 <HAL_ADC_ConfigChannel+0x1f4>
 8001868:	683b      	ldr	r3, [r7, #0]
 800186a:	681b      	ldr	r3, [r3, #0]
 800186c:	2b11      	cmp	r3, #17
 800186e:	d122      	bne.n	80018b6 <HAL_ADC_ConfigChannel+0x23a>
 8001870:	68fb      	ldr	r3, [r7, #12]
 8001872:	685b      	ldr	r3, [r3, #4]
 8001874:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8001878:	68fb      	ldr	r3, [r7, #12]
 800187a:	605a      	str	r2, [r3, #4]
 800187c:	68fb      	ldr	r3, [r7, #12]
 800187e:	685b      	ldr	r3, [r3, #4]
 8001880:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8001884:	68fb      	ldr	r3, [r7, #12]
 8001886:	605a      	str	r2, [r3, #4]
 8001888:	683b      	ldr	r3, [r7, #0]
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	4a11      	ldr	r2, [pc, #68]	@ (80018d4 <HAL_ADC_ConfigChannel+0x258>)
 800188e:	4293      	cmp	r3, r2
 8001890:	d111      	bne.n	80018b6 <HAL_ADC_ConfigChannel+0x23a>
 8001892:	4b11      	ldr	r3, [pc, #68]	@ (80018d8 <HAL_ADC_ConfigChannel+0x25c>)
 8001894:	681b      	ldr	r3, [r3, #0]
 8001896:	4a11      	ldr	r2, [pc, #68]	@ (80018dc <HAL_ADC_ConfigChannel+0x260>)
 8001898:	fba2 2303 	umull	r2, r3, r2, r3
 800189c:	0c9a      	lsrs	r2, r3, #18
 800189e:	4613      	mov	r3, r2
 80018a0:	009b      	lsls	r3, r3, #2
 80018a2:	4413      	add	r3, r2
 80018a4:	005b      	lsls	r3, r3, #1
 80018a6:	60bb      	str	r3, [r7, #8]
 80018a8:	e002      	b.n	80018b0 <HAL_ADC_ConfigChannel+0x234>
 80018aa:	68bb      	ldr	r3, [r7, #8]
 80018ac:	3b01      	subs	r3, #1
 80018ae:	60bb      	str	r3, [r7, #8]
 80018b0:	68bb      	ldr	r3, [r7, #8]
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d1f9      	bne.n	80018aa <HAL_ADC_ConfigChannel+0x22e>
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	2200      	movs	r2, #0
 80018ba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80018be:	2300      	movs	r3, #0
 80018c0:	4618      	mov	r0, r3
 80018c2:	3714      	adds	r7, #20
 80018c4:	46bd      	mov	sp, r7
 80018c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ca:	4770      	bx	lr
 80018cc:	40012300 	.word	0x40012300
 80018d0:	40012000 	.word	0x40012000
 80018d4:	10000012 	.word	0x10000012
 80018d8:	20000000 	.word	0x20000000
 80018dc:	431bde83 	.word	0x431bde83

080018e0 <ADC_Init>:
 80018e0:	b480      	push	{r7}
 80018e2:	b085      	sub	sp, #20
 80018e4:	af00      	add	r7, sp, #0
 80018e6:	6078      	str	r0, [r7, #4]
 80018e8:	4b79      	ldr	r3, [pc, #484]	@ (8001ad0 <ADC_Init+0x1f0>)
 80018ea:	60fb      	str	r3, [r7, #12]
 80018ec:	68fb      	ldr	r3, [r7, #12]
 80018ee:	685b      	ldr	r3, [r3, #4]
 80018f0:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 80018f4:	68fb      	ldr	r3, [r7, #12]
 80018f6:	605a      	str	r2, [r3, #4]
 80018f8:	68fb      	ldr	r3, [r7, #12]
 80018fa:	685a      	ldr	r2, [r3, #4]
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	685b      	ldr	r3, [r3, #4]
 8001900:	431a      	orrs	r2, r3
 8001902:	68fb      	ldr	r3, [r7, #12]
 8001904:	605a      	str	r2, [r3, #4]
 8001906:	687b      	ldr	r3, [r7, #4]
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	685a      	ldr	r2, [r3, #4]
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8001914:	605a      	str	r2, [r3, #4]
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	681b      	ldr	r3, [r3, #0]
 800191a:	6859      	ldr	r1, [r3, #4]
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	691b      	ldr	r3, [r3, #16]
 8001920:	021a      	lsls	r2, r3, #8
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	430a      	orrs	r2, r1
 8001928:	605a      	str	r2, [r3, #4]
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	685a      	ldr	r2, [r3, #4]
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8001938:	605a      	str	r2, [r3, #4]
 800193a:	687b      	ldr	r3, [r7, #4]
 800193c:	681b      	ldr	r3, [r3, #0]
 800193e:	6859      	ldr	r1, [r3, #4]
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	689a      	ldr	r2, [r3, #8]
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	430a      	orrs	r2, r1
 800194a:	605a      	str	r2, [r3, #4]
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	681b      	ldr	r3, [r3, #0]
 8001950:	689a      	ldr	r2, [r3, #8]
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800195a:	609a      	str	r2, [r3, #8]
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	681b      	ldr	r3, [r3, #0]
 8001960:	6899      	ldr	r1, [r3, #8]
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	68da      	ldr	r2, [r3, #12]
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	430a      	orrs	r2, r1
 800196c:	609a      	str	r2, [r3, #8]
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001972:	4a58      	ldr	r2, [pc, #352]	@ (8001ad4 <ADC_Init+0x1f4>)
 8001974:	4293      	cmp	r3, r2
 8001976:	d022      	beq.n	80019be <ADC_Init+0xde>
 8001978:	687b      	ldr	r3, [r7, #4]
 800197a:	681b      	ldr	r3, [r3, #0]
 800197c:	689a      	ldr	r2, [r3, #8]
 800197e:	687b      	ldr	r3, [r7, #4]
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8001986:	609a      	str	r2, [r3, #8]
 8001988:	687b      	ldr	r3, [r7, #4]
 800198a:	681b      	ldr	r3, [r3, #0]
 800198c:	6899      	ldr	r1, [r3, #8]
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	430a      	orrs	r2, r1
 8001998:	609a      	str	r2, [r3, #8]
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	681b      	ldr	r3, [r3, #0]
 800199e:	689a      	ldr	r2, [r3, #8]
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	681b      	ldr	r3, [r3, #0]
 80019a4:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80019a8:	609a      	str	r2, [r3, #8]
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	681b      	ldr	r3, [r3, #0]
 80019ae:	6899      	ldr	r1, [r3, #8]
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80019b4:	687b      	ldr	r3, [r7, #4]
 80019b6:	681b      	ldr	r3, [r3, #0]
 80019b8:	430a      	orrs	r2, r1
 80019ba:	609a      	str	r2, [r3, #8]
 80019bc:	e00f      	b.n	80019de <ADC_Init+0xfe>
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	681b      	ldr	r3, [r3, #0]
 80019c2:	689a      	ldr	r2, [r3, #8]
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	681b      	ldr	r3, [r3, #0]
 80019c8:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80019cc:	609a      	str	r2, [r3, #8]
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	689a      	ldr	r2, [r3, #8]
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80019dc:	609a      	str	r2, [r3, #8]
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	689a      	ldr	r2, [r3, #8]
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	681b      	ldr	r3, [r3, #0]
 80019e8:	f022 0202 	bic.w	r2, r2, #2
 80019ec:	609a      	str	r2, [r3, #8]
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	681b      	ldr	r3, [r3, #0]
 80019f2:	6899      	ldr	r1, [r3, #8]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	7e1b      	ldrb	r3, [r3, #24]
 80019f8:	005a      	lsls	r2, r3, #1
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	430a      	orrs	r2, r1
 8001a00:	609a      	str	r2, [r3, #8]
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001a08:	2b00      	cmp	r3, #0
 8001a0a:	d01b      	beq.n	8001a44 <ADC_Init+0x164>
 8001a0c:	687b      	ldr	r3, [r7, #4]
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	685a      	ldr	r2, [r3, #4]
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8001a1a:	605a      	str	r2, [r3, #4]
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	681b      	ldr	r3, [r3, #0]
 8001a20:	685a      	ldr	r2, [r3, #4]
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8001a2a:	605a      	str	r2, [r3, #4]
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	6859      	ldr	r1, [r3, #4]
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a36:	3b01      	subs	r3, #1
 8001a38:	035a      	lsls	r2, r3, #13
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	430a      	orrs	r2, r1
 8001a40:	605a      	str	r2, [r3, #4]
 8001a42:	e007      	b.n	8001a54 <ADC_Init+0x174>
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	681b      	ldr	r3, [r3, #0]
 8001a48:	685a      	ldr	r2, [r3, #4]
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001a52:	605a      	str	r2, [r3, #4]
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	681b      	ldr	r3, [r3, #0]
 8001a5e:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8001a62:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8001a6a:	687b      	ldr	r3, [r7, #4]
 8001a6c:	69db      	ldr	r3, [r3, #28]
 8001a6e:	3b01      	subs	r3, #1
 8001a70:	051a      	lsls	r2, r3, #20
 8001a72:	687b      	ldr	r3, [r7, #4]
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	430a      	orrs	r2, r1
 8001a78:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001a7a:	687b      	ldr	r3, [r7, #4]
 8001a7c:	681b      	ldr	r3, [r3, #0]
 8001a7e:	689a      	ldr	r2, [r3, #8]
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8001a88:	609a      	str	r2, [r3, #8]
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	6899      	ldr	r1, [r3, #8]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8001a96:	025a      	lsls	r2, r3, #9
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	681b      	ldr	r3, [r3, #0]
 8001a9c:	430a      	orrs	r2, r1
 8001a9e:	609a      	str	r2, [r3, #8]
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	689a      	ldr	r2, [r3, #8]
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001aae:	609a      	str	r2, [r3, #8]
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	6899      	ldr	r1, [r3, #8]
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	695b      	ldr	r3, [r3, #20]
 8001aba:	029a      	lsls	r2, r3, #10
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	430a      	orrs	r2, r1
 8001ac2:	609a      	str	r2, [r3, #8]
 8001ac4:	bf00      	nop
 8001ac6:	3714      	adds	r7, #20
 8001ac8:	46bd      	mov	sp, r7
 8001aca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ace:	4770      	bx	lr
 8001ad0:	40012300 	.word	0x40012300
 8001ad4:	0f000001 	.word	0x0f000001

08001ad8 <ADC_DMAConvCplt>:
 8001ad8:	b580      	push	{r7, lr}
 8001ada:	b084      	sub	sp, #16
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	6078      	str	r0, [r7, #4]
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001ae4:	60fb      	str	r3, [r7, #12]
 8001ae6:	68fb      	ldr	r3, [r7, #12]
 8001ae8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001aea:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8001aee:	2b00      	cmp	r3, #0
 8001af0:	d13c      	bne.n	8001b6c <ADC_DMAConvCplt+0x94>
 8001af2:	68fb      	ldr	r3, [r7, #12]
 8001af4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001af6:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8001afa:	68fb      	ldr	r3, [r7, #12]
 8001afc:	641a      	str	r2, [r3, #64]	@ 0x40
 8001afe:	68fb      	ldr	r3, [r7, #12]
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	689b      	ldr	r3, [r3, #8]
 8001b04:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8001b08:	2b00      	cmp	r3, #0
 8001b0a:	d12b      	bne.n	8001b64 <ADC_DMAConvCplt+0x8c>
 8001b0c:	68fb      	ldr	r3, [r7, #12]
 8001b0e:	7e1b      	ldrb	r3, [r3, #24]
 8001b10:	2b00      	cmp	r3, #0
 8001b12:	d127      	bne.n	8001b64 <ADC_DMAConvCplt+0x8c>
 8001b14:	68fb      	ldr	r3, [r7, #12]
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001b1a:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8001b1e:	2b00      	cmp	r3, #0
 8001b20:	d006      	beq.n	8001b30 <ADC_DMAConvCplt+0x58>
 8001b22:	68fb      	ldr	r3, [r7, #12]
 8001b24:	681b      	ldr	r3, [r3, #0]
 8001b26:	689b      	ldr	r3, [r3, #8]
 8001b28:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	d119      	bne.n	8001b64 <ADC_DMAConvCplt+0x8c>
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	685a      	ldr	r2, [r3, #4]
 8001b36:	68fb      	ldr	r3, [r7, #12]
 8001b38:	681b      	ldr	r3, [r3, #0]
 8001b3a:	f022 0220 	bic.w	r2, r2, #32
 8001b3e:	605a      	str	r2, [r3, #4]
 8001b40:	68fb      	ldr	r3, [r7, #12]
 8001b42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b44:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8001b48:	68fb      	ldr	r3, [r7, #12]
 8001b4a:	641a      	str	r2, [r3, #64]	@ 0x40
 8001b4c:	68fb      	ldr	r3, [r7, #12]
 8001b4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b50:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001b54:	2b00      	cmp	r3, #0
 8001b56:	d105      	bne.n	8001b64 <ADC_DMAConvCplt+0x8c>
 8001b58:	68fb      	ldr	r3, [r7, #12]
 8001b5a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b5c:	f043 0201 	orr.w	r2, r3, #1
 8001b60:	68fb      	ldr	r3, [r7, #12]
 8001b62:	641a      	str	r2, [r3, #64]	@ 0x40
 8001b64:	68f8      	ldr	r0, [r7, #12]
 8001b66:	f7ff fd6b 	bl	8001640 <HAL_ADC_ConvCpltCallback>
 8001b6a:	e00e      	b.n	8001b8a <ADC_DMAConvCplt+0xb2>
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001b70:	f003 0310 	and.w	r3, r3, #16
 8001b74:	2b00      	cmp	r3, #0
 8001b76:	d003      	beq.n	8001b80 <ADC_DMAConvCplt+0xa8>
 8001b78:	68f8      	ldr	r0, [r7, #12]
 8001b7a:	f7ff fd75 	bl	8001668 <HAL_ADC_ErrorCallback>
 8001b7e:	e004      	b.n	8001b8a <ADC_DMAConvCplt+0xb2>
 8001b80:	68fb      	ldr	r3, [r7, #12]
 8001b82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001b84:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b86:	6878      	ldr	r0, [r7, #4]
 8001b88:	4798      	blx	r3
 8001b8a:	bf00      	nop
 8001b8c:	3710      	adds	r7, #16
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bd80      	pop	{r7, pc}

08001b92 <ADC_DMAHalfConvCplt>:
 8001b92:	b580      	push	{r7, lr}
 8001b94:	b084      	sub	sp, #16
 8001b96:	af00      	add	r7, sp, #0
 8001b98:	6078      	str	r0, [r7, #4]
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001b9e:	60fb      	str	r3, [r7, #12]
 8001ba0:	68f8      	ldr	r0, [r7, #12]
 8001ba2:	f7ff fd57 	bl	8001654 <HAL_ADC_ConvHalfCpltCallback>
 8001ba6:	bf00      	nop
 8001ba8:	3710      	adds	r7, #16
 8001baa:	46bd      	mov	sp, r7
 8001bac:	bd80      	pop	{r7, pc}

08001bae <ADC_DMAError>:
 8001bae:	b580      	push	{r7, lr}
 8001bb0:	b084      	sub	sp, #16
 8001bb2:	af00      	add	r7, sp, #0
 8001bb4:	6078      	str	r0, [r7, #4]
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001bba:	60fb      	str	r3, [r7, #12]
 8001bbc:	68fb      	ldr	r3, [r7, #12]
 8001bbe:	2240      	movs	r2, #64	@ 0x40
 8001bc0:	641a      	str	r2, [r3, #64]	@ 0x40
 8001bc2:	68fb      	ldr	r3, [r7, #12]
 8001bc4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001bc6:	f043 0204 	orr.w	r2, r3, #4
 8001bca:	68fb      	ldr	r3, [r7, #12]
 8001bcc:	645a      	str	r2, [r3, #68]	@ 0x44
 8001bce:	68f8      	ldr	r0, [r7, #12]
 8001bd0:	f7ff fd4a 	bl	8001668 <HAL_ADC_ErrorCallback>
 8001bd4:	bf00      	nop
 8001bd6:	3710      	adds	r7, #16
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	bd80      	pop	{r7, pc}

08001bdc <__NVIC_SetPriorityGrouping>:
 8001bdc:	b480      	push	{r7}
 8001bde:	b085      	sub	sp, #20
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	6078      	str	r0, [r7, #4]
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	f003 0307 	and.w	r3, r3, #7
 8001bea:	60fb      	str	r3, [r7, #12]
 8001bec:	4b0c      	ldr	r3, [pc, #48]	@ (8001c20 <__NVIC_SetPriorityGrouping+0x44>)
 8001bee:	68db      	ldr	r3, [r3, #12]
 8001bf0:	60bb      	str	r3, [r7, #8]
 8001bf2:	68ba      	ldr	r2, [r7, #8]
 8001bf4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001bf8:	4013      	ands	r3, r2
 8001bfa:	60bb      	str	r3, [r7, #8]
 8001bfc:	68fb      	ldr	r3, [r7, #12]
 8001bfe:	021a      	lsls	r2, r3, #8
 8001c00:	68bb      	ldr	r3, [r7, #8]
 8001c02:	4313      	orrs	r3, r2
 8001c04:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001c08:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001c0c:	60bb      	str	r3, [r7, #8]
 8001c0e:	4a04      	ldr	r2, [pc, #16]	@ (8001c20 <__NVIC_SetPriorityGrouping+0x44>)
 8001c10:	68bb      	ldr	r3, [r7, #8]
 8001c12:	60d3      	str	r3, [r2, #12]
 8001c14:	bf00      	nop
 8001c16:	3714      	adds	r7, #20
 8001c18:	46bd      	mov	sp, r7
 8001c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c1e:	4770      	bx	lr
 8001c20:	e000ed00 	.word	0xe000ed00

08001c24 <__NVIC_GetPriorityGrouping>:
 8001c24:	b480      	push	{r7}
 8001c26:	af00      	add	r7, sp, #0
 8001c28:	4b04      	ldr	r3, [pc, #16]	@ (8001c3c <__NVIC_GetPriorityGrouping+0x18>)
 8001c2a:	68db      	ldr	r3, [r3, #12]
 8001c2c:	0a1b      	lsrs	r3, r3, #8
 8001c2e:	f003 0307 	and.w	r3, r3, #7
 8001c32:	4618      	mov	r0, r3
 8001c34:	46bd      	mov	sp, r7
 8001c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c3a:	4770      	bx	lr
 8001c3c:	e000ed00 	.word	0xe000ed00

08001c40 <__NVIC_EnableIRQ>:
 8001c40:	b480      	push	{r7}
 8001c42:	b083      	sub	sp, #12
 8001c44:	af00      	add	r7, sp, #0
 8001c46:	4603      	mov	r3, r0
 8001c48:	71fb      	strb	r3, [r7, #7]
 8001c4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	db0b      	blt.n	8001c6a <__NVIC_EnableIRQ+0x2a>
 8001c52:	79fb      	ldrb	r3, [r7, #7]
 8001c54:	f003 021f 	and.w	r2, r3, #31
 8001c58:	4907      	ldr	r1, [pc, #28]	@ (8001c78 <__NVIC_EnableIRQ+0x38>)
 8001c5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c5e:	095b      	lsrs	r3, r3, #5
 8001c60:	2001      	movs	r0, #1
 8001c62:	fa00 f202 	lsl.w	r2, r0, r2
 8001c66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001c6a:	bf00      	nop
 8001c6c:	370c      	adds	r7, #12
 8001c6e:	46bd      	mov	sp, r7
 8001c70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c74:	4770      	bx	lr
 8001c76:	bf00      	nop
 8001c78:	e000e100 	.word	0xe000e100

08001c7c <__NVIC_SetPriority>:
 8001c7c:	b480      	push	{r7}
 8001c7e:	b083      	sub	sp, #12
 8001c80:	af00      	add	r7, sp, #0
 8001c82:	4603      	mov	r3, r0
 8001c84:	6039      	str	r1, [r7, #0]
 8001c86:	71fb      	strb	r3, [r7, #7]
 8001c88:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c8c:	2b00      	cmp	r3, #0
 8001c8e:	db0a      	blt.n	8001ca6 <__NVIC_SetPriority+0x2a>
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	b2da      	uxtb	r2, r3
 8001c94:	490c      	ldr	r1, [pc, #48]	@ (8001cc8 <__NVIC_SetPriority+0x4c>)
 8001c96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c9a:	0112      	lsls	r2, r2, #4
 8001c9c:	b2d2      	uxtb	r2, r2
 8001c9e:	440b      	add	r3, r1
 8001ca0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001ca4:	e00a      	b.n	8001cbc <__NVIC_SetPriority+0x40>
 8001ca6:	683b      	ldr	r3, [r7, #0]
 8001ca8:	b2da      	uxtb	r2, r3
 8001caa:	4908      	ldr	r1, [pc, #32]	@ (8001ccc <__NVIC_SetPriority+0x50>)
 8001cac:	79fb      	ldrb	r3, [r7, #7]
 8001cae:	f003 030f 	and.w	r3, r3, #15
 8001cb2:	3b04      	subs	r3, #4
 8001cb4:	0112      	lsls	r2, r2, #4
 8001cb6:	b2d2      	uxtb	r2, r2
 8001cb8:	440b      	add	r3, r1
 8001cba:	761a      	strb	r2, [r3, #24]
 8001cbc:	bf00      	nop
 8001cbe:	370c      	adds	r7, #12
 8001cc0:	46bd      	mov	sp, r7
 8001cc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cc6:	4770      	bx	lr
 8001cc8:	e000e100 	.word	0xe000e100
 8001ccc:	e000ed00 	.word	0xe000ed00

08001cd0 <NVIC_EncodePriority>:
 8001cd0:	b480      	push	{r7}
 8001cd2:	b089      	sub	sp, #36	@ 0x24
 8001cd4:	af00      	add	r7, sp, #0
 8001cd6:	60f8      	str	r0, [r7, #12]
 8001cd8:	60b9      	str	r1, [r7, #8]
 8001cda:	607a      	str	r2, [r7, #4]
 8001cdc:	68fb      	ldr	r3, [r7, #12]
 8001cde:	f003 0307 	and.w	r3, r3, #7
 8001ce2:	61fb      	str	r3, [r7, #28]
 8001ce4:	69fb      	ldr	r3, [r7, #28]
 8001ce6:	f1c3 0307 	rsb	r3, r3, #7
 8001cea:	2b04      	cmp	r3, #4
 8001cec:	bf28      	it	cs
 8001cee:	2304      	movcs	r3, #4
 8001cf0:	61bb      	str	r3, [r7, #24]
 8001cf2:	69fb      	ldr	r3, [r7, #28]
 8001cf4:	3304      	adds	r3, #4
 8001cf6:	2b06      	cmp	r3, #6
 8001cf8:	d902      	bls.n	8001d00 <NVIC_EncodePriority+0x30>
 8001cfa:	69fb      	ldr	r3, [r7, #28]
 8001cfc:	3b03      	subs	r3, #3
 8001cfe:	e000      	b.n	8001d02 <NVIC_EncodePriority+0x32>
 8001d00:	2300      	movs	r3, #0
 8001d02:	617b      	str	r3, [r7, #20]
 8001d04:	f04f 32ff 	mov.w	r2, #4294967295
 8001d08:	69bb      	ldr	r3, [r7, #24]
 8001d0a:	fa02 f303 	lsl.w	r3, r2, r3
 8001d0e:	43da      	mvns	r2, r3
 8001d10:	68bb      	ldr	r3, [r7, #8]
 8001d12:	401a      	ands	r2, r3
 8001d14:	697b      	ldr	r3, [r7, #20]
 8001d16:	409a      	lsls	r2, r3
 8001d18:	f04f 31ff 	mov.w	r1, #4294967295
 8001d1c:	697b      	ldr	r3, [r7, #20]
 8001d1e:	fa01 f303 	lsl.w	r3, r1, r3
 8001d22:	43d9      	mvns	r1, r3
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	400b      	ands	r3, r1
 8001d28:	4313      	orrs	r3, r2
 8001d2a:	4618      	mov	r0, r3
 8001d2c:	3724      	adds	r7, #36	@ 0x24
 8001d2e:	46bd      	mov	sp, r7
 8001d30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d34:	4770      	bx	lr
	...

08001d38 <SysTick_Config>:
 8001d38:	b580      	push	{r7, lr}
 8001d3a:	b082      	sub	sp, #8
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	6078      	str	r0, [r7, #4]
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	3b01      	subs	r3, #1
 8001d44:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001d48:	d301      	bcc.n	8001d4e <SysTick_Config+0x16>
 8001d4a:	2301      	movs	r3, #1
 8001d4c:	e00f      	b.n	8001d6e <SysTick_Config+0x36>
 8001d4e:	4a0a      	ldr	r2, [pc, #40]	@ (8001d78 <SysTick_Config+0x40>)
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	3b01      	subs	r3, #1
 8001d54:	6053      	str	r3, [r2, #4]
 8001d56:	210f      	movs	r1, #15
 8001d58:	f04f 30ff 	mov.w	r0, #4294967295
 8001d5c:	f7ff ff8e 	bl	8001c7c <__NVIC_SetPriority>
 8001d60:	4b05      	ldr	r3, [pc, #20]	@ (8001d78 <SysTick_Config+0x40>)
 8001d62:	2200      	movs	r2, #0
 8001d64:	609a      	str	r2, [r3, #8]
 8001d66:	4b04      	ldr	r3, [pc, #16]	@ (8001d78 <SysTick_Config+0x40>)
 8001d68:	2207      	movs	r2, #7
 8001d6a:	601a      	str	r2, [r3, #0]
 8001d6c:	2300      	movs	r3, #0
 8001d6e:	4618      	mov	r0, r3
 8001d70:	3708      	adds	r7, #8
 8001d72:	46bd      	mov	sp, r7
 8001d74:	bd80      	pop	{r7, pc}
 8001d76:	bf00      	nop
 8001d78:	e000e010 	.word	0xe000e010

08001d7c <HAL_NVIC_SetPriorityGrouping>:
 8001d7c:	b580      	push	{r7, lr}
 8001d7e:	b082      	sub	sp, #8
 8001d80:	af00      	add	r7, sp, #0
 8001d82:	6078      	str	r0, [r7, #4]
 8001d84:	6878      	ldr	r0, [r7, #4]
 8001d86:	f7ff ff29 	bl	8001bdc <__NVIC_SetPriorityGrouping>
 8001d8a:	bf00      	nop
 8001d8c:	3708      	adds	r7, #8
 8001d8e:	46bd      	mov	sp, r7
 8001d90:	bd80      	pop	{r7, pc}

08001d92 <HAL_NVIC_SetPriority>:
 8001d92:	b580      	push	{r7, lr}
 8001d94:	b086      	sub	sp, #24
 8001d96:	af00      	add	r7, sp, #0
 8001d98:	4603      	mov	r3, r0
 8001d9a:	60b9      	str	r1, [r7, #8]
 8001d9c:	607a      	str	r2, [r7, #4]
 8001d9e:	73fb      	strb	r3, [r7, #15]
 8001da0:	2300      	movs	r3, #0
 8001da2:	617b      	str	r3, [r7, #20]
 8001da4:	f7ff ff3e 	bl	8001c24 <__NVIC_GetPriorityGrouping>
 8001da8:	6178      	str	r0, [r7, #20]
 8001daa:	687a      	ldr	r2, [r7, #4]
 8001dac:	68b9      	ldr	r1, [r7, #8]
 8001dae:	6978      	ldr	r0, [r7, #20]
 8001db0:	f7ff ff8e 	bl	8001cd0 <NVIC_EncodePriority>
 8001db4:	4602      	mov	r2, r0
 8001db6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001dba:	4611      	mov	r1, r2
 8001dbc:	4618      	mov	r0, r3
 8001dbe:	f7ff ff5d 	bl	8001c7c <__NVIC_SetPriority>
 8001dc2:	bf00      	nop
 8001dc4:	3718      	adds	r7, #24
 8001dc6:	46bd      	mov	sp, r7
 8001dc8:	bd80      	pop	{r7, pc}

08001dca <HAL_NVIC_EnableIRQ>:
 8001dca:	b580      	push	{r7, lr}
 8001dcc:	b082      	sub	sp, #8
 8001dce:	af00      	add	r7, sp, #0
 8001dd0:	4603      	mov	r3, r0
 8001dd2:	71fb      	strb	r3, [r7, #7]
 8001dd4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dd8:	4618      	mov	r0, r3
 8001dda:	f7ff ff31 	bl	8001c40 <__NVIC_EnableIRQ>
 8001dde:	bf00      	nop
 8001de0:	3708      	adds	r7, #8
 8001de2:	46bd      	mov	sp, r7
 8001de4:	bd80      	pop	{r7, pc}

08001de6 <HAL_SYSTICK_Config>:
 8001de6:	b580      	push	{r7, lr}
 8001de8:	b082      	sub	sp, #8
 8001dea:	af00      	add	r7, sp, #0
 8001dec:	6078      	str	r0, [r7, #4]
 8001dee:	6878      	ldr	r0, [r7, #4]
 8001df0:	f7ff ffa2 	bl	8001d38 <SysTick_Config>
 8001df4:	4603      	mov	r3, r0
 8001df6:	4618      	mov	r0, r3
 8001df8:	3708      	adds	r7, #8
 8001dfa:	46bd      	mov	sp, r7
 8001dfc:	bd80      	pop	{r7, pc}
	...

08001e00 <HAL_DMA_Init>:
 8001e00:	b580      	push	{r7, lr}
 8001e02:	b086      	sub	sp, #24
 8001e04:	af00      	add	r7, sp, #0
 8001e06:	6078      	str	r0, [r7, #4]
 8001e08:	2300      	movs	r3, #0
 8001e0a:	617b      	str	r3, [r7, #20]
 8001e0c:	f7ff fa1a 	bl	8001244 <HAL_GetTick>
 8001e10:	6138      	str	r0, [r7, #16]
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	2b00      	cmp	r3, #0
 8001e16:	d101      	bne.n	8001e1c <HAL_DMA_Init+0x1c>
 8001e18:	2301      	movs	r3, #1
 8001e1a:	e099      	b.n	8001f50 <HAL_DMA_Init+0x150>
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	2202      	movs	r2, #2
 8001e20:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	2200      	movs	r2, #0
 8001e28:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	681b      	ldr	r3, [r3, #0]
 8001e30:	681a      	ldr	r2, [r3, #0]
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	f022 0201 	bic.w	r2, r2, #1
 8001e3a:	601a      	str	r2, [r3, #0]
 8001e3c:	e00f      	b.n	8001e5e <HAL_DMA_Init+0x5e>
 8001e3e:	f7ff fa01 	bl	8001244 <HAL_GetTick>
 8001e42:	4602      	mov	r2, r0
 8001e44:	693b      	ldr	r3, [r7, #16]
 8001e46:	1ad3      	subs	r3, r2, r3
 8001e48:	2b05      	cmp	r3, #5
 8001e4a:	d908      	bls.n	8001e5e <HAL_DMA_Init+0x5e>
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	2220      	movs	r2, #32
 8001e50:	655a      	str	r2, [r3, #84]	@ 0x54
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	2203      	movs	r2, #3
 8001e56:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001e5a:	2303      	movs	r3, #3
 8001e5c:	e078      	b.n	8001f50 <HAL_DMA_Init+0x150>
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	681b      	ldr	r3, [r3, #0]
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	f003 0301 	and.w	r3, r3, #1
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	d1e8      	bne.n	8001e3e <HAL_DMA_Init+0x3e>
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	617b      	str	r3, [r7, #20]
 8001e74:	697a      	ldr	r2, [r7, #20]
 8001e76:	4b38      	ldr	r3, [pc, #224]	@ (8001f58 <HAL_DMA_Init+0x158>)
 8001e78:	4013      	ands	r3, r2
 8001e7a:	617b      	str	r3, [r7, #20]
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	685a      	ldr	r2, [r3, #4]
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	689b      	ldr	r3, [r3, #8]
 8001e84:	431a      	orrs	r2, r3
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	68db      	ldr	r3, [r3, #12]
 8001e8a:	431a      	orrs	r2, r3
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	691b      	ldr	r3, [r3, #16]
 8001e90:	431a      	orrs	r2, r3
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	695b      	ldr	r3, [r3, #20]
 8001e96:	431a      	orrs	r2, r3
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	699b      	ldr	r3, [r3, #24]
 8001e9c:	431a      	orrs	r2, r3
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	69db      	ldr	r3, [r3, #28]
 8001ea2:	431a      	orrs	r2, r3
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	6a1b      	ldr	r3, [r3, #32]
 8001ea8:	4313      	orrs	r3, r2
 8001eaa:	697a      	ldr	r2, [r7, #20]
 8001eac:	4313      	orrs	r3, r2
 8001eae:	617b      	str	r3, [r7, #20]
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001eb4:	2b04      	cmp	r3, #4
 8001eb6:	d107      	bne.n	8001ec8 <HAL_DMA_Init+0xc8>
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ec0:	4313      	orrs	r3, r2
 8001ec2:	697a      	ldr	r2, [r7, #20]
 8001ec4:	4313      	orrs	r3, r2
 8001ec6:	617b      	str	r3, [r7, #20]
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	697a      	ldr	r2, [r7, #20]
 8001ece:	601a      	str	r2, [r3, #0]
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	695b      	ldr	r3, [r3, #20]
 8001ed6:	617b      	str	r3, [r7, #20]
 8001ed8:	697b      	ldr	r3, [r7, #20]
 8001eda:	f023 0307 	bic.w	r3, r3, #7
 8001ede:	617b      	str	r3, [r7, #20]
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001ee4:	697a      	ldr	r2, [r7, #20]
 8001ee6:	4313      	orrs	r3, r2
 8001ee8:	617b      	str	r3, [r7, #20]
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001eee:	2b04      	cmp	r3, #4
 8001ef0:	d117      	bne.n	8001f22 <HAL_DMA_Init+0x122>
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001ef6:	697a      	ldr	r2, [r7, #20]
 8001ef8:	4313      	orrs	r3, r2
 8001efa:	617b      	str	r3, [r7, #20]
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f00:	2b00      	cmp	r3, #0
 8001f02:	d00e      	beq.n	8001f22 <HAL_DMA_Init+0x122>
 8001f04:	6878      	ldr	r0, [r7, #4]
 8001f06:	f000 fa6f 	bl	80023e8 <DMA_CheckFifoParam>
 8001f0a:	4603      	mov	r3, r0
 8001f0c:	2b00      	cmp	r3, #0
 8001f0e:	d008      	beq.n	8001f22 <HAL_DMA_Init+0x122>
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	2240      	movs	r2, #64	@ 0x40
 8001f14:	655a      	str	r2, [r3, #84]	@ 0x54
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	2201      	movs	r2, #1
 8001f1a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001f1e:	2301      	movs	r3, #1
 8001f20:	e016      	b.n	8001f50 <HAL_DMA_Init+0x150>
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	697a      	ldr	r2, [r7, #20]
 8001f28:	615a      	str	r2, [r3, #20]
 8001f2a:	6878      	ldr	r0, [r7, #4]
 8001f2c:	f000 fa26 	bl	800237c <DMA_CalcBaseAndBitshift>
 8001f30:	4603      	mov	r3, r0
 8001f32:	60fb      	str	r3, [r7, #12]
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001f38:	223f      	movs	r2, #63	@ 0x3f
 8001f3a:	409a      	lsls	r2, r3
 8001f3c:	68fb      	ldr	r3, [r7, #12]
 8001f3e:	609a      	str	r2, [r3, #8]
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	2200      	movs	r2, #0
 8001f44:	655a      	str	r2, [r3, #84]	@ 0x54
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	2201      	movs	r2, #1
 8001f4a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001f4e:	2300      	movs	r3, #0
 8001f50:	4618      	mov	r0, r3
 8001f52:	3718      	adds	r7, #24
 8001f54:	46bd      	mov	sp, r7
 8001f56:	bd80      	pop	{r7, pc}
 8001f58:	f010803f 	.word	0xf010803f

08001f5c <HAL_DMA_Start_IT>:
 8001f5c:	b580      	push	{r7, lr}
 8001f5e:	b086      	sub	sp, #24
 8001f60:	af00      	add	r7, sp, #0
 8001f62:	60f8      	str	r0, [r7, #12]
 8001f64:	60b9      	str	r1, [r7, #8]
 8001f66:	607a      	str	r2, [r7, #4]
 8001f68:	603b      	str	r3, [r7, #0]
 8001f6a:	2300      	movs	r3, #0
 8001f6c:	75fb      	strb	r3, [r7, #23]
 8001f6e:	68fb      	ldr	r3, [r7, #12]
 8001f70:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001f72:	613b      	str	r3, [r7, #16]
 8001f74:	68fb      	ldr	r3, [r7, #12]
 8001f76:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8001f7a:	2b01      	cmp	r3, #1
 8001f7c:	d101      	bne.n	8001f82 <HAL_DMA_Start_IT+0x26>
 8001f7e:	2302      	movs	r3, #2
 8001f80:	e040      	b.n	8002004 <HAL_DMA_Start_IT+0xa8>
 8001f82:	68fb      	ldr	r3, [r7, #12]
 8001f84:	2201      	movs	r2, #1
 8001f86:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001f8a:	68fb      	ldr	r3, [r7, #12]
 8001f8c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001f90:	b2db      	uxtb	r3, r3
 8001f92:	2b01      	cmp	r3, #1
 8001f94:	d12f      	bne.n	8001ff6 <HAL_DMA_Start_IT+0x9a>
 8001f96:	68fb      	ldr	r3, [r7, #12]
 8001f98:	2202      	movs	r2, #2
 8001f9a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001f9e:	68fb      	ldr	r3, [r7, #12]
 8001fa0:	2200      	movs	r2, #0
 8001fa2:	655a      	str	r2, [r3, #84]	@ 0x54
 8001fa4:	683b      	ldr	r3, [r7, #0]
 8001fa6:	687a      	ldr	r2, [r7, #4]
 8001fa8:	68b9      	ldr	r1, [r7, #8]
 8001faa:	68f8      	ldr	r0, [r7, #12]
 8001fac:	f000 f9b8 	bl	8002320 <DMA_SetConfig>
 8001fb0:	68fb      	ldr	r3, [r7, #12]
 8001fb2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001fb4:	223f      	movs	r2, #63	@ 0x3f
 8001fb6:	409a      	lsls	r2, r3
 8001fb8:	693b      	ldr	r3, [r7, #16]
 8001fba:	609a      	str	r2, [r3, #8]
 8001fbc:	68fb      	ldr	r3, [r7, #12]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	681a      	ldr	r2, [r3, #0]
 8001fc2:	68fb      	ldr	r3, [r7, #12]
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	f042 0216 	orr.w	r2, r2, #22
 8001fca:	601a      	str	r2, [r3, #0]
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d007      	beq.n	8001fe4 <HAL_DMA_Start_IT+0x88>
 8001fd4:	68fb      	ldr	r3, [r7, #12]
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	681a      	ldr	r2, [r3, #0]
 8001fda:	68fb      	ldr	r3, [r7, #12]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	f042 0208 	orr.w	r2, r2, #8
 8001fe2:	601a      	str	r2, [r3, #0]
 8001fe4:	68fb      	ldr	r3, [r7, #12]
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	681a      	ldr	r2, [r3, #0]
 8001fea:	68fb      	ldr	r3, [r7, #12]
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	f042 0201 	orr.w	r2, r2, #1
 8001ff2:	601a      	str	r2, [r3, #0]
 8001ff4:	e005      	b.n	8002002 <HAL_DMA_Start_IT+0xa6>
 8001ff6:	68fb      	ldr	r3, [r7, #12]
 8001ff8:	2200      	movs	r2, #0
 8001ffa:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001ffe:	2302      	movs	r3, #2
 8002000:	75fb      	strb	r3, [r7, #23]
 8002002:	7dfb      	ldrb	r3, [r7, #23]
 8002004:	4618      	mov	r0, r3
 8002006:	3718      	adds	r7, #24
 8002008:	46bd      	mov	sp, r7
 800200a:	bd80      	pop	{r7, pc}

0800200c <HAL_DMA_IRQHandler>:
 800200c:	b580      	push	{r7, lr}
 800200e:	b086      	sub	sp, #24
 8002010:	af00      	add	r7, sp, #0
 8002012:	6078      	str	r0, [r7, #4]
 8002014:	2300      	movs	r3, #0
 8002016:	60bb      	str	r3, [r7, #8]
 8002018:	4b8e      	ldr	r3, [pc, #568]	@ (8002254 <HAL_DMA_IRQHandler+0x248>)
 800201a:	681b      	ldr	r3, [r3, #0]
 800201c:	4a8e      	ldr	r2, [pc, #568]	@ (8002258 <HAL_DMA_IRQHandler+0x24c>)
 800201e:	fba2 2303 	umull	r2, r3, r2, r3
 8002022:	0a9b      	lsrs	r3, r3, #10
 8002024:	617b      	str	r3, [r7, #20]
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800202a:	613b      	str	r3, [r7, #16]
 800202c:	693b      	ldr	r3, [r7, #16]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	60fb      	str	r3, [r7, #12]
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002036:	2208      	movs	r2, #8
 8002038:	409a      	lsls	r2, r3
 800203a:	68fb      	ldr	r3, [r7, #12]
 800203c:	4013      	ands	r3, r2
 800203e:	2b00      	cmp	r3, #0
 8002040:	d01a      	beq.n	8002078 <HAL_DMA_IRQHandler+0x6c>
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	f003 0304 	and.w	r3, r3, #4
 800204c:	2b00      	cmp	r3, #0
 800204e:	d013      	beq.n	8002078 <HAL_DMA_IRQHandler+0x6c>
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	681a      	ldr	r2, [r3, #0]
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	f022 0204 	bic.w	r2, r2, #4
 800205e:	601a      	str	r2, [r3, #0]
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002064:	2208      	movs	r2, #8
 8002066:	409a      	lsls	r2, r3
 8002068:	693b      	ldr	r3, [r7, #16]
 800206a:	609a      	str	r2, [r3, #8]
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002070:	f043 0201 	orr.w	r2, r3, #1
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	655a      	str	r2, [r3, #84]	@ 0x54
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800207c:	2201      	movs	r2, #1
 800207e:	409a      	lsls	r2, r3
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	4013      	ands	r3, r2
 8002084:	2b00      	cmp	r3, #0
 8002086:	d012      	beq.n	80020ae <HAL_DMA_IRQHandler+0xa2>
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	695b      	ldr	r3, [r3, #20]
 800208e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002092:	2b00      	cmp	r3, #0
 8002094:	d00b      	beq.n	80020ae <HAL_DMA_IRQHandler+0xa2>
 8002096:	687b      	ldr	r3, [r7, #4]
 8002098:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800209a:	2201      	movs	r2, #1
 800209c:	409a      	lsls	r2, r3
 800209e:	693b      	ldr	r3, [r7, #16]
 80020a0:	609a      	str	r2, [r3, #8]
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80020a6:	f043 0202 	orr.w	r2, r3, #2
 80020aa:	687b      	ldr	r3, [r7, #4]
 80020ac:	655a      	str	r2, [r3, #84]	@ 0x54
 80020ae:	687b      	ldr	r3, [r7, #4]
 80020b0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80020b2:	2204      	movs	r2, #4
 80020b4:	409a      	lsls	r2, r3
 80020b6:	68fb      	ldr	r3, [r7, #12]
 80020b8:	4013      	ands	r3, r2
 80020ba:	2b00      	cmp	r3, #0
 80020bc:	d012      	beq.n	80020e4 <HAL_DMA_IRQHandler+0xd8>
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	681b      	ldr	r3, [r3, #0]
 80020c4:	f003 0302 	and.w	r3, r3, #2
 80020c8:	2b00      	cmp	r3, #0
 80020ca:	d00b      	beq.n	80020e4 <HAL_DMA_IRQHandler+0xd8>
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80020d0:	2204      	movs	r2, #4
 80020d2:	409a      	lsls	r2, r3
 80020d4:	693b      	ldr	r3, [r7, #16]
 80020d6:	609a      	str	r2, [r3, #8]
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80020dc:	f043 0204 	orr.w	r2, r3, #4
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	655a      	str	r2, [r3, #84]	@ 0x54
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80020e8:	2210      	movs	r2, #16
 80020ea:	409a      	lsls	r2, r3
 80020ec:	68fb      	ldr	r3, [r7, #12]
 80020ee:	4013      	ands	r3, r2
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	d043      	beq.n	800217c <HAL_DMA_IRQHandler+0x170>
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	681b      	ldr	r3, [r3, #0]
 80020f8:	681b      	ldr	r3, [r3, #0]
 80020fa:	f003 0308 	and.w	r3, r3, #8
 80020fe:	2b00      	cmp	r3, #0
 8002100:	d03c      	beq.n	800217c <HAL_DMA_IRQHandler+0x170>
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002106:	2210      	movs	r2, #16
 8002108:	409a      	lsls	r2, r3
 800210a:	693b      	ldr	r3, [r7, #16]
 800210c:	609a      	str	r2, [r3, #8]
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8002118:	2b00      	cmp	r3, #0
 800211a:	d018      	beq.n	800214e <HAL_DMA_IRQHandler+0x142>
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8002126:	2b00      	cmp	r3, #0
 8002128:	d108      	bne.n	800213c <HAL_DMA_IRQHandler+0x130>
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800212e:	2b00      	cmp	r3, #0
 8002130:	d024      	beq.n	800217c <HAL_DMA_IRQHandler+0x170>
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002136:	6878      	ldr	r0, [r7, #4]
 8002138:	4798      	blx	r3
 800213a:	e01f      	b.n	800217c <HAL_DMA_IRQHandler+0x170>
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002140:	2b00      	cmp	r3, #0
 8002142:	d01b      	beq.n	800217c <HAL_DMA_IRQHandler+0x170>
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002148:	6878      	ldr	r0, [r7, #4]
 800214a:	4798      	blx	r3
 800214c:	e016      	b.n	800217c <HAL_DMA_IRQHandler+0x170>
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002158:	2b00      	cmp	r3, #0
 800215a:	d107      	bne.n	800216c <HAL_DMA_IRQHandler+0x160>
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	681a      	ldr	r2, [r3, #0]
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	f022 0208 	bic.w	r2, r2, #8
 800216a:	601a      	str	r2, [r3, #0]
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002170:	2b00      	cmp	r3, #0
 8002172:	d003      	beq.n	800217c <HAL_DMA_IRQHandler+0x170>
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002178:	6878      	ldr	r0, [r7, #4]
 800217a:	4798      	blx	r3
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8002180:	2220      	movs	r2, #32
 8002182:	409a      	lsls	r2, r3
 8002184:	68fb      	ldr	r3, [r7, #12]
 8002186:	4013      	ands	r3, r2
 8002188:	2b00      	cmp	r3, #0
 800218a:	f000 808f 	beq.w	80022ac <HAL_DMA_IRQHandler+0x2a0>
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	f003 0310 	and.w	r3, r3, #16
 8002198:	2b00      	cmp	r3, #0
 800219a:	f000 8087 	beq.w	80022ac <HAL_DMA_IRQHandler+0x2a0>
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80021a2:	2220      	movs	r2, #32
 80021a4:	409a      	lsls	r2, r3
 80021a6:	693b      	ldr	r3, [r7, #16]
 80021a8:	609a      	str	r2, [r3, #8]
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80021b0:	b2db      	uxtb	r3, r3
 80021b2:	2b05      	cmp	r3, #5
 80021b4:	d136      	bne.n	8002224 <HAL_DMA_IRQHandler+0x218>
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	681a      	ldr	r2, [r3, #0]
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	f022 0216 	bic.w	r2, r2, #22
 80021c4:	601a      	str	r2, [r3, #0]
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	695a      	ldr	r2, [r3, #20]
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80021d4:	615a      	str	r2, [r3, #20]
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021da:	2b00      	cmp	r3, #0
 80021dc:	d103      	bne.n	80021e6 <HAL_DMA_IRQHandler+0x1da>
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80021e2:	2b00      	cmp	r3, #0
 80021e4:	d007      	beq.n	80021f6 <HAL_DMA_IRQHandler+0x1ea>
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	681b      	ldr	r3, [r3, #0]
 80021ea:	681a      	ldr	r2, [r3, #0]
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	f022 0208 	bic.w	r2, r2, #8
 80021f4:	601a      	str	r2, [r3, #0]
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80021fa:	223f      	movs	r2, #63	@ 0x3f
 80021fc:	409a      	lsls	r2, r3
 80021fe:	693b      	ldr	r3, [r7, #16]
 8002200:	609a      	str	r2, [r3, #8]
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	2201      	movs	r2, #1
 8002206:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	2200      	movs	r2, #0
 800220e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002216:	2b00      	cmp	r3, #0
 8002218:	d07e      	beq.n	8002318 <HAL_DMA_IRQHandler+0x30c>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800221e:	6878      	ldr	r0, [r7, #4]
 8002220:	4798      	blx	r3
 8002222:	e079      	b.n	8002318 <HAL_DMA_IRQHandler+0x30c>
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	681b      	ldr	r3, [r3, #0]
 800222a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800222e:	2b00      	cmp	r3, #0
 8002230:	d01d      	beq.n	800226e <HAL_DMA_IRQHandler+0x262>
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	681b      	ldr	r3, [r3, #0]
 8002238:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800223c:	2b00      	cmp	r3, #0
 800223e:	d10d      	bne.n	800225c <HAL_DMA_IRQHandler+0x250>
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002244:	2b00      	cmp	r3, #0
 8002246:	d031      	beq.n	80022ac <HAL_DMA_IRQHandler+0x2a0>
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800224c:	6878      	ldr	r0, [r7, #4]
 800224e:	4798      	blx	r3
 8002250:	e02c      	b.n	80022ac <HAL_DMA_IRQHandler+0x2a0>
 8002252:	bf00      	nop
 8002254:	20000000 	.word	0x20000000
 8002258:	1b4e81b5 	.word	0x1b4e81b5
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002260:	2b00      	cmp	r3, #0
 8002262:	d023      	beq.n	80022ac <HAL_DMA_IRQHandler+0x2a0>
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002268:	6878      	ldr	r0, [r7, #4]
 800226a:	4798      	blx	r3
 800226c:	e01e      	b.n	80022ac <HAL_DMA_IRQHandler+0x2a0>
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	681b      	ldr	r3, [r3, #0]
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002278:	2b00      	cmp	r3, #0
 800227a:	d10f      	bne.n	800229c <HAL_DMA_IRQHandler+0x290>
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	681b      	ldr	r3, [r3, #0]
 8002280:	681a      	ldr	r2, [r3, #0]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	681b      	ldr	r3, [r3, #0]
 8002286:	f022 0210 	bic.w	r2, r2, #16
 800228a:	601a      	str	r2, [r3, #0]
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	2201      	movs	r2, #1
 8002290:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	2200      	movs	r2, #0
 8002298:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80022a0:	2b00      	cmp	r3, #0
 80022a2:	d003      	beq.n	80022ac <HAL_DMA_IRQHandler+0x2a0>
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80022a8:	6878      	ldr	r0, [r7, #4]
 80022aa:	4798      	blx	r3
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d032      	beq.n	800231a <HAL_DMA_IRQHandler+0x30e>
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80022b8:	f003 0301 	and.w	r3, r3, #1
 80022bc:	2b00      	cmp	r3, #0
 80022be:	d022      	beq.n	8002306 <HAL_DMA_IRQHandler+0x2fa>
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	2205      	movs	r2, #5
 80022c4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	681a      	ldr	r2, [r3, #0]
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	f022 0201 	bic.w	r2, r2, #1
 80022d6:	601a      	str	r2, [r3, #0]
 80022d8:	68bb      	ldr	r3, [r7, #8]
 80022da:	3301      	adds	r3, #1
 80022dc:	60bb      	str	r3, [r7, #8]
 80022de:	697a      	ldr	r2, [r7, #20]
 80022e0:	429a      	cmp	r2, r3
 80022e2:	d307      	bcc.n	80022f4 <HAL_DMA_IRQHandler+0x2e8>
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	681b      	ldr	r3, [r3, #0]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	f003 0301 	and.w	r3, r3, #1
 80022ee:	2b00      	cmp	r3, #0
 80022f0:	d1f2      	bne.n	80022d8 <HAL_DMA_IRQHandler+0x2cc>
 80022f2:	e000      	b.n	80022f6 <HAL_DMA_IRQHandler+0x2ea>
 80022f4:	bf00      	nop
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	2201      	movs	r2, #1
 80022fa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	2200      	movs	r2, #0
 8002302:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800230a:	2b00      	cmp	r3, #0
 800230c:	d005      	beq.n	800231a <HAL_DMA_IRQHandler+0x30e>
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002312:	6878      	ldr	r0, [r7, #4]
 8002314:	4798      	blx	r3
 8002316:	e000      	b.n	800231a <HAL_DMA_IRQHandler+0x30e>
 8002318:	bf00      	nop
 800231a:	3718      	adds	r7, #24
 800231c:	46bd      	mov	sp, r7
 800231e:	bd80      	pop	{r7, pc}

08002320 <DMA_SetConfig>:
 8002320:	b480      	push	{r7}
 8002322:	b085      	sub	sp, #20
 8002324:	af00      	add	r7, sp, #0
 8002326:	60f8      	str	r0, [r7, #12]
 8002328:	60b9      	str	r1, [r7, #8]
 800232a:	607a      	str	r2, [r7, #4]
 800232c:	603b      	str	r3, [r7, #0]
 800232e:	68fb      	ldr	r3, [r7, #12]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	681a      	ldr	r2, [r3, #0]
 8002334:	68fb      	ldr	r3, [r7, #12]
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800233c:	601a      	str	r2, [r3, #0]
 800233e:	68fb      	ldr	r3, [r7, #12]
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	683a      	ldr	r2, [r7, #0]
 8002344:	605a      	str	r2, [r3, #4]
 8002346:	68fb      	ldr	r3, [r7, #12]
 8002348:	689b      	ldr	r3, [r3, #8]
 800234a:	2b40      	cmp	r3, #64	@ 0x40
 800234c:	d108      	bne.n	8002360 <DMA_SetConfig+0x40>
 800234e:	68fb      	ldr	r3, [r7, #12]
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	687a      	ldr	r2, [r7, #4]
 8002354:	609a      	str	r2, [r3, #8]
 8002356:	68fb      	ldr	r3, [r7, #12]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	68ba      	ldr	r2, [r7, #8]
 800235c:	60da      	str	r2, [r3, #12]
 800235e:	e007      	b.n	8002370 <DMA_SetConfig+0x50>
 8002360:	68fb      	ldr	r3, [r7, #12]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	68ba      	ldr	r2, [r7, #8]
 8002366:	609a      	str	r2, [r3, #8]
 8002368:	68fb      	ldr	r3, [r7, #12]
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	687a      	ldr	r2, [r7, #4]
 800236e:	60da      	str	r2, [r3, #12]
 8002370:	bf00      	nop
 8002372:	3714      	adds	r7, #20
 8002374:	46bd      	mov	sp, r7
 8002376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800237a:	4770      	bx	lr

0800237c <DMA_CalcBaseAndBitshift>:
 800237c:	b480      	push	{r7}
 800237e:	b085      	sub	sp, #20
 8002380:	af00      	add	r7, sp, #0
 8002382:	6078      	str	r0, [r7, #4]
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	b2db      	uxtb	r3, r3
 800238a:	3b10      	subs	r3, #16
 800238c:	4a14      	ldr	r2, [pc, #80]	@ (80023e0 <DMA_CalcBaseAndBitshift+0x64>)
 800238e:	fba2 2303 	umull	r2, r3, r2, r3
 8002392:	091b      	lsrs	r3, r3, #4
 8002394:	60fb      	str	r3, [r7, #12]
 8002396:	4a13      	ldr	r2, [pc, #76]	@ (80023e4 <DMA_CalcBaseAndBitshift+0x68>)
 8002398:	68fb      	ldr	r3, [r7, #12]
 800239a:	4413      	add	r3, r2
 800239c:	781b      	ldrb	r3, [r3, #0]
 800239e:	461a      	mov	r2, r3
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	65da      	str	r2, [r3, #92]	@ 0x5c
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	2b03      	cmp	r3, #3
 80023a8:	d909      	bls.n	80023be <DMA_CalcBaseAndBitshift+0x42>
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 80023b2:	f023 0303 	bic.w	r3, r3, #3
 80023b6:	1d1a      	adds	r2, r3, #4
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	659a      	str	r2, [r3, #88]	@ 0x58
 80023bc:	e007      	b.n	80023ce <DMA_CalcBaseAndBitshift+0x52>
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	681b      	ldr	r3, [r3, #0]
 80023c2:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 80023c6:	f023 0303 	bic.w	r3, r3, #3
 80023ca:	687a      	ldr	r2, [r7, #4]
 80023cc:	6593      	str	r3, [r2, #88]	@ 0x58
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80023d2:	4618      	mov	r0, r3
 80023d4:	3714      	adds	r7, #20
 80023d6:	46bd      	mov	sp, r7
 80023d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023dc:	4770      	bx	lr
 80023de:	bf00      	nop
 80023e0:	aaaaaaab 	.word	0xaaaaaaab
 80023e4:	08004b48 	.word	0x08004b48

080023e8 <DMA_CheckFifoParam>:
 80023e8:	b480      	push	{r7}
 80023ea:	b085      	sub	sp, #20
 80023ec:	af00      	add	r7, sp, #0
 80023ee:	6078      	str	r0, [r7, #4]
 80023f0:	2300      	movs	r3, #0
 80023f2:	73fb      	strb	r3, [r7, #15]
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80023f8:	60bb      	str	r3, [r7, #8]
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	699b      	ldr	r3, [r3, #24]
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d11f      	bne.n	8002442 <DMA_CheckFifoParam+0x5a>
 8002402:	68bb      	ldr	r3, [r7, #8]
 8002404:	2b03      	cmp	r3, #3
 8002406:	d856      	bhi.n	80024b6 <DMA_CheckFifoParam+0xce>
 8002408:	a201      	add	r2, pc, #4	@ (adr r2, 8002410 <DMA_CheckFifoParam+0x28>)
 800240a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800240e:	bf00      	nop
 8002410:	08002421 	.word	0x08002421
 8002414:	08002433 	.word	0x08002433
 8002418:	08002421 	.word	0x08002421
 800241c:	080024b7 	.word	0x080024b7
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002424:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002428:	2b00      	cmp	r3, #0
 800242a:	d046      	beq.n	80024ba <DMA_CheckFifoParam+0xd2>
 800242c:	2301      	movs	r3, #1
 800242e:	73fb      	strb	r3, [r7, #15]
 8002430:	e043      	b.n	80024ba <DMA_CheckFifoParam+0xd2>
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002436:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800243a:	d140      	bne.n	80024be <DMA_CheckFifoParam+0xd6>
 800243c:	2301      	movs	r3, #1
 800243e:	73fb      	strb	r3, [r7, #15]
 8002440:	e03d      	b.n	80024be <DMA_CheckFifoParam+0xd6>
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	699b      	ldr	r3, [r3, #24]
 8002446:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800244a:	d121      	bne.n	8002490 <DMA_CheckFifoParam+0xa8>
 800244c:	68bb      	ldr	r3, [r7, #8]
 800244e:	2b03      	cmp	r3, #3
 8002450:	d837      	bhi.n	80024c2 <DMA_CheckFifoParam+0xda>
 8002452:	a201      	add	r2, pc, #4	@ (adr r2, 8002458 <DMA_CheckFifoParam+0x70>)
 8002454:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002458:	08002469 	.word	0x08002469
 800245c:	0800246f 	.word	0x0800246f
 8002460:	08002469 	.word	0x08002469
 8002464:	08002481 	.word	0x08002481
 8002468:	2301      	movs	r3, #1
 800246a:	73fb      	strb	r3, [r7, #15]
 800246c:	e030      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002472:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8002476:	2b00      	cmp	r3, #0
 8002478:	d025      	beq.n	80024c6 <DMA_CheckFifoParam+0xde>
 800247a:	2301      	movs	r3, #1
 800247c:	73fb      	strb	r3, [r7, #15]
 800247e:	e022      	b.n	80024c6 <DMA_CheckFifoParam+0xde>
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002484:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8002488:	d11f      	bne.n	80024ca <DMA_CheckFifoParam+0xe2>
 800248a:	2301      	movs	r3, #1
 800248c:	73fb      	strb	r3, [r7, #15]
 800248e:	e01c      	b.n	80024ca <DMA_CheckFifoParam+0xe2>
 8002490:	68bb      	ldr	r3, [r7, #8]
 8002492:	2b02      	cmp	r3, #2
 8002494:	d903      	bls.n	800249e <DMA_CheckFifoParam+0xb6>
 8002496:	68bb      	ldr	r3, [r7, #8]
 8002498:	2b03      	cmp	r3, #3
 800249a:	d003      	beq.n	80024a4 <DMA_CheckFifoParam+0xbc>
 800249c:	e018      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 800249e:	2301      	movs	r3, #1
 80024a0:	73fb      	strb	r3, [r7, #15]
 80024a2:	e015      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80024a8:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	d00e      	beq.n	80024ce <DMA_CheckFifoParam+0xe6>
 80024b0:	2301      	movs	r3, #1
 80024b2:	73fb      	strb	r3, [r7, #15]
 80024b4:	e00b      	b.n	80024ce <DMA_CheckFifoParam+0xe6>
 80024b6:	bf00      	nop
 80024b8:	e00a      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 80024ba:	bf00      	nop
 80024bc:	e008      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 80024be:	bf00      	nop
 80024c0:	e006      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 80024c2:	bf00      	nop
 80024c4:	e004      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 80024c6:	bf00      	nop
 80024c8:	e002      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 80024ca:	bf00      	nop
 80024cc:	e000      	b.n	80024d0 <DMA_CheckFifoParam+0xe8>
 80024ce:	bf00      	nop
 80024d0:	7bfb      	ldrb	r3, [r7, #15]
 80024d2:	4618      	mov	r0, r3
 80024d4:	3714      	adds	r7, #20
 80024d6:	46bd      	mov	sp, r7
 80024d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024dc:	4770      	bx	lr
 80024de:	bf00      	nop

080024e0 <HAL_GPIO_Init>:
 80024e0:	b480      	push	{r7}
 80024e2:	b089      	sub	sp, #36	@ 0x24
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	6078      	str	r0, [r7, #4]
 80024e8:	6039      	str	r1, [r7, #0]
 80024ea:	2300      	movs	r3, #0
 80024ec:	617b      	str	r3, [r7, #20]
 80024ee:	2300      	movs	r3, #0
 80024f0:	613b      	str	r3, [r7, #16]
 80024f2:	2300      	movs	r3, #0
 80024f4:	61bb      	str	r3, [r7, #24]
 80024f6:	2300      	movs	r3, #0
 80024f8:	61fb      	str	r3, [r7, #28]
 80024fa:	e159      	b.n	80027b0 <HAL_GPIO_Init+0x2d0>
 80024fc:	2201      	movs	r2, #1
 80024fe:	69fb      	ldr	r3, [r7, #28]
 8002500:	fa02 f303 	lsl.w	r3, r2, r3
 8002504:	617b      	str	r3, [r7, #20]
 8002506:	683b      	ldr	r3, [r7, #0]
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	697a      	ldr	r2, [r7, #20]
 800250c:	4013      	ands	r3, r2
 800250e:	613b      	str	r3, [r7, #16]
 8002510:	693a      	ldr	r2, [r7, #16]
 8002512:	697b      	ldr	r3, [r7, #20]
 8002514:	429a      	cmp	r2, r3
 8002516:	f040 8148 	bne.w	80027aa <HAL_GPIO_Init+0x2ca>
 800251a:	683b      	ldr	r3, [r7, #0]
 800251c:	685b      	ldr	r3, [r3, #4]
 800251e:	f003 0303 	and.w	r3, r3, #3
 8002522:	2b01      	cmp	r3, #1
 8002524:	d005      	beq.n	8002532 <HAL_GPIO_Init+0x52>
 8002526:	683b      	ldr	r3, [r7, #0]
 8002528:	685b      	ldr	r3, [r3, #4]
 800252a:	f003 0303 	and.w	r3, r3, #3
 800252e:	2b02      	cmp	r3, #2
 8002530:	d130      	bne.n	8002594 <HAL_GPIO_Init+0xb4>
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	689b      	ldr	r3, [r3, #8]
 8002536:	61bb      	str	r3, [r7, #24]
 8002538:	69fb      	ldr	r3, [r7, #28]
 800253a:	005b      	lsls	r3, r3, #1
 800253c:	2203      	movs	r2, #3
 800253e:	fa02 f303 	lsl.w	r3, r2, r3
 8002542:	43db      	mvns	r3, r3
 8002544:	69ba      	ldr	r2, [r7, #24]
 8002546:	4013      	ands	r3, r2
 8002548:	61bb      	str	r3, [r7, #24]
 800254a:	683b      	ldr	r3, [r7, #0]
 800254c:	68da      	ldr	r2, [r3, #12]
 800254e:	69fb      	ldr	r3, [r7, #28]
 8002550:	005b      	lsls	r3, r3, #1
 8002552:	fa02 f303 	lsl.w	r3, r2, r3
 8002556:	69ba      	ldr	r2, [r7, #24]
 8002558:	4313      	orrs	r3, r2
 800255a:	61bb      	str	r3, [r7, #24]
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	69ba      	ldr	r2, [r7, #24]
 8002560:	609a      	str	r2, [r3, #8]
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	685b      	ldr	r3, [r3, #4]
 8002566:	61bb      	str	r3, [r7, #24]
 8002568:	2201      	movs	r2, #1
 800256a:	69fb      	ldr	r3, [r7, #28]
 800256c:	fa02 f303 	lsl.w	r3, r2, r3
 8002570:	43db      	mvns	r3, r3
 8002572:	69ba      	ldr	r2, [r7, #24]
 8002574:	4013      	ands	r3, r2
 8002576:	61bb      	str	r3, [r7, #24]
 8002578:	683b      	ldr	r3, [r7, #0]
 800257a:	685b      	ldr	r3, [r3, #4]
 800257c:	091b      	lsrs	r3, r3, #4
 800257e:	f003 0201 	and.w	r2, r3, #1
 8002582:	69fb      	ldr	r3, [r7, #28]
 8002584:	fa02 f303 	lsl.w	r3, r2, r3
 8002588:	69ba      	ldr	r2, [r7, #24]
 800258a:	4313      	orrs	r3, r2
 800258c:	61bb      	str	r3, [r7, #24]
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	69ba      	ldr	r2, [r7, #24]
 8002592:	605a      	str	r2, [r3, #4]
 8002594:	683b      	ldr	r3, [r7, #0]
 8002596:	685b      	ldr	r3, [r3, #4]
 8002598:	f003 0303 	and.w	r3, r3, #3
 800259c:	2b03      	cmp	r3, #3
 800259e:	d017      	beq.n	80025d0 <HAL_GPIO_Init+0xf0>
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	68db      	ldr	r3, [r3, #12]
 80025a4:	61bb      	str	r3, [r7, #24]
 80025a6:	69fb      	ldr	r3, [r7, #28]
 80025a8:	005b      	lsls	r3, r3, #1
 80025aa:	2203      	movs	r2, #3
 80025ac:	fa02 f303 	lsl.w	r3, r2, r3
 80025b0:	43db      	mvns	r3, r3
 80025b2:	69ba      	ldr	r2, [r7, #24]
 80025b4:	4013      	ands	r3, r2
 80025b6:	61bb      	str	r3, [r7, #24]
 80025b8:	683b      	ldr	r3, [r7, #0]
 80025ba:	689a      	ldr	r2, [r3, #8]
 80025bc:	69fb      	ldr	r3, [r7, #28]
 80025be:	005b      	lsls	r3, r3, #1
 80025c0:	fa02 f303 	lsl.w	r3, r2, r3
 80025c4:	69ba      	ldr	r2, [r7, #24]
 80025c6:	4313      	orrs	r3, r2
 80025c8:	61bb      	str	r3, [r7, #24]
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	69ba      	ldr	r2, [r7, #24]
 80025ce:	60da      	str	r2, [r3, #12]
 80025d0:	683b      	ldr	r3, [r7, #0]
 80025d2:	685b      	ldr	r3, [r3, #4]
 80025d4:	f003 0303 	and.w	r3, r3, #3
 80025d8:	2b02      	cmp	r3, #2
 80025da:	d123      	bne.n	8002624 <HAL_GPIO_Init+0x144>
 80025dc:	69fb      	ldr	r3, [r7, #28]
 80025de:	08da      	lsrs	r2, r3, #3
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	3208      	adds	r2, #8
 80025e4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80025e8:	61bb      	str	r3, [r7, #24]
 80025ea:	69fb      	ldr	r3, [r7, #28]
 80025ec:	f003 0307 	and.w	r3, r3, #7
 80025f0:	009b      	lsls	r3, r3, #2
 80025f2:	220f      	movs	r2, #15
 80025f4:	fa02 f303 	lsl.w	r3, r2, r3
 80025f8:	43db      	mvns	r3, r3
 80025fa:	69ba      	ldr	r2, [r7, #24]
 80025fc:	4013      	ands	r3, r2
 80025fe:	61bb      	str	r3, [r7, #24]
 8002600:	683b      	ldr	r3, [r7, #0]
 8002602:	691a      	ldr	r2, [r3, #16]
 8002604:	69fb      	ldr	r3, [r7, #28]
 8002606:	f003 0307 	and.w	r3, r3, #7
 800260a:	009b      	lsls	r3, r3, #2
 800260c:	fa02 f303 	lsl.w	r3, r2, r3
 8002610:	69ba      	ldr	r2, [r7, #24]
 8002612:	4313      	orrs	r3, r2
 8002614:	61bb      	str	r3, [r7, #24]
 8002616:	69fb      	ldr	r3, [r7, #28]
 8002618:	08da      	lsrs	r2, r3, #3
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	3208      	adds	r2, #8
 800261e:	69b9      	ldr	r1, [r7, #24]
 8002620:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	61bb      	str	r3, [r7, #24]
 800262a:	69fb      	ldr	r3, [r7, #28]
 800262c:	005b      	lsls	r3, r3, #1
 800262e:	2203      	movs	r2, #3
 8002630:	fa02 f303 	lsl.w	r3, r2, r3
 8002634:	43db      	mvns	r3, r3
 8002636:	69ba      	ldr	r2, [r7, #24]
 8002638:	4013      	ands	r3, r2
 800263a:	61bb      	str	r3, [r7, #24]
 800263c:	683b      	ldr	r3, [r7, #0]
 800263e:	685b      	ldr	r3, [r3, #4]
 8002640:	f003 0203 	and.w	r2, r3, #3
 8002644:	69fb      	ldr	r3, [r7, #28]
 8002646:	005b      	lsls	r3, r3, #1
 8002648:	fa02 f303 	lsl.w	r3, r2, r3
 800264c:	69ba      	ldr	r2, [r7, #24]
 800264e:	4313      	orrs	r3, r2
 8002650:	61bb      	str	r3, [r7, #24]
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	69ba      	ldr	r2, [r7, #24]
 8002656:	601a      	str	r2, [r3, #0]
 8002658:	683b      	ldr	r3, [r7, #0]
 800265a:	685b      	ldr	r3, [r3, #4]
 800265c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002660:	2b00      	cmp	r3, #0
 8002662:	f000 80a2 	beq.w	80027aa <HAL_GPIO_Init+0x2ca>
 8002666:	2300      	movs	r3, #0
 8002668:	60fb      	str	r3, [r7, #12]
 800266a:	4b57      	ldr	r3, [pc, #348]	@ (80027c8 <HAL_GPIO_Init+0x2e8>)
 800266c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800266e:	4a56      	ldr	r2, [pc, #344]	@ (80027c8 <HAL_GPIO_Init+0x2e8>)
 8002670:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002674:	6453      	str	r3, [r2, #68]	@ 0x44
 8002676:	4b54      	ldr	r3, [pc, #336]	@ (80027c8 <HAL_GPIO_Init+0x2e8>)
 8002678:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800267a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800267e:	60fb      	str	r3, [r7, #12]
 8002680:	68fb      	ldr	r3, [r7, #12]
 8002682:	4a52      	ldr	r2, [pc, #328]	@ (80027cc <HAL_GPIO_Init+0x2ec>)
 8002684:	69fb      	ldr	r3, [r7, #28]
 8002686:	089b      	lsrs	r3, r3, #2
 8002688:	3302      	adds	r3, #2
 800268a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800268e:	61bb      	str	r3, [r7, #24]
 8002690:	69fb      	ldr	r3, [r7, #28]
 8002692:	f003 0303 	and.w	r3, r3, #3
 8002696:	009b      	lsls	r3, r3, #2
 8002698:	220f      	movs	r2, #15
 800269a:	fa02 f303 	lsl.w	r3, r2, r3
 800269e:	43db      	mvns	r3, r3
 80026a0:	69ba      	ldr	r2, [r7, #24]
 80026a2:	4013      	ands	r3, r2
 80026a4:	61bb      	str	r3, [r7, #24]
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	4a49      	ldr	r2, [pc, #292]	@ (80027d0 <HAL_GPIO_Init+0x2f0>)
 80026aa:	4293      	cmp	r3, r2
 80026ac:	d019      	beq.n	80026e2 <HAL_GPIO_Init+0x202>
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	4a48      	ldr	r2, [pc, #288]	@ (80027d4 <HAL_GPIO_Init+0x2f4>)
 80026b2:	4293      	cmp	r3, r2
 80026b4:	d013      	beq.n	80026de <HAL_GPIO_Init+0x1fe>
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	4a47      	ldr	r2, [pc, #284]	@ (80027d8 <HAL_GPIO_Init+0x2f8>)
 80026ba:	4293      	cmp	r3, r2
 80026bc:	d00d      	beq.n	80026da <HAL_GPIO_Init+0x1fa>
 80026be:	687b      	ldr	r3, [r7, #4]
 80026c0:	4a46      	ldr	r2, [pc, #280]	@ (80027dc <HAL_GPIO_Init+0x2fc>)
 80026c2:	4293      	cmp	r3, r2
 80026c4:	d007      	beq.n	80026d6 <HAL_GPIO_Init+0x1f6>
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	4a45      	ldr	r2, [pc, #276]	@ (80027e0 <HAL_GPIO_Init+0x300>)
 80026ca:	4293      	cmp	r3, r2
 80026cc:	d101      	bne.n	80026d2 <HAL_GPIO_Init+0x1f2>
 80026ce:	2304      	movs	r3, #4
 80026d0:	e008      	b.n	80026e4 <HAL_GPIO_Init+0x204>
 80026d2:	2307      	movs	r3, #7
 80026d4:	e006      	b.n	80026e4 <HAL_GPIO_Init+0x204>
 80026d6:	2303      	movs	r3, #3
 80026d8:	e004      	b.n	80026e4 <HAL_GPIO_Init+0x204>
 80026da:	2302      	movs	r3, #2
 80026dc:	e002      	b.n	80026e4 <HAL_GPIO_Init+0x204>
 80026de:	2301      	movs	r3, #1
 80026e0:	e000      	b.n	80026e4 <HAL_GPIO_Init+0x204>
 80026e2:	2300      	movs	r3, #0
 80026e4:	69fa      	ldr	r2, [r7, #28]
 80026e6:	f002 0203 	and.w	r2, r2, #3
 80026ea:	0092      	lsls	r2, r2, #2
 80026ec:	4093      	lsls	r3, r2
 80026ee:	69ba      	ldr	r2, [r7, #24]
 80026f0:	4313      	orrs	r3, r2
 80026f2:	61bb      	str	r3, [r7, #24]
 80026f4:	4935      	ldr	r1, [pc, #212]	@ (80027cc <HAL_GPIO_Init+0x2ec>)
 80026f6:	69fb      	ldr	r3, [r7, #28]
 80026f8:	089b      	lsrs	r3, r3, #2
 80026fa:	3302      	adds	r3, #2
 80026fc:	69ba      	ldr	r2, [r7, #24]
 80026fe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002702:	4b38      	ldr	r3, [pc, #224]	@ (80027e4 <HAL_GPIO_Init+0x304>)
 8002704:	689b      	ldr	r3, [r3, #8]
 8002706:	61bb      	str	r3, [r7, #24]
 8002708:	693b      	ldr	r3, [r7, #16]
 800270a:	43db      	mvns	r3, r3
 800270c:	69ba      	ldr	r2, [r7, #24]
 800270e:	4013      	ands	r3, r2
 8002710:	61bb      	str	r3, [r7, #24]
 8002712:	683b      	ldr	r3, [r7, #0]
 8002714:	685b      	ldr	r3, [r3, #4]
 8002716:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800271a:	2b00      	cmp	r3, #0
 800271c:	d003      	beq.n	8002726 <HAL_GPIO_Init+0x246>
 800271e:	69ba      	ldr	r2, [r7, #24]
 8002720:	693b      	ldr	r3, [r7, #16]
 8002722:	4313      	orrs	r3, r2
 8002724:	61bb      	str	r3, [r7, #24]
 8002726:	4a2f      	ldr	r2, [pc, #188]	@ (80027e4 <HAL_GPIO_Init+0x304>)
 8002728:	69bb      	ldr	r3, [r7, #24]
 800272a:	6093      	str	r3, [r2, #8]
 800272c:	4b2d      	ldr	r3, [pc, #180]	@ (80027e4 <HAL_GPIO_Init+0x304>)
 800272e:	68db      	ldr	r3, [r3, #12]
 8002730:	61bb      	str	r3, [r7, #24]
 8002732:	693b      	ldr	r3, [r7, #16]
 8002734:	43db      	mvns	r3, r3
 8002736:	69ba      	ldr	r2, [r7, #24]
 8002738:	4013      	ands	r3, r2
 800273a:	61bb      	str	r3, [r7, #24]
 800273c:	683b      	ldr	r3, [r7, #0]
 800273e:	685b      	ldr	r3, [r3, #4]
 8002740:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002744:	2b00      	cmp	r3, #0
 8002746:	d003      	beq.n	8002750 <HAL_GPIO_Init+0x270>
 8002748:	69ba      	ldr	r2, [r7, #24]
 800274a:	693b      	ldr	r3, [r7, #16]
 800274c:	4313      	orrs	r3, r2
 800274e:	61bb      	str	r3, [r7, #24]
 8002750:	4a24      	ldr	r2, [pc, #144]	@ (80027e4 <HAL_GPIO_Init+0x304>)
 8002752:	69bb      	ldr	r3, [r7, #24]
 8002754:	60d3      	str	r3, [r2, #12]
 8002756:	4b23      	ldr	r3, [pc, #140]	@ (80027e4 <HAL_GPIO_Init+0x304>)
 8002758:	685b      	ldr	r3, [r3, #4]
 800275a:	61bb      	str	r3, [r7, #24]
 800275c:	693b      	ldr	r3, [r7, #16]
 800275e:	43db      	mvns	r3, r3
 8002760:	69ba      	ldr	r2, [r7, #24]
 8002762:	4013      	ands	r3, r2
 8002764:	61bb      	str	r3, [r7, #24]
 8002766:	683b      	ldr	r3, [r7, #0]
 8002768:	685b      	ldr	r3, [r3, #4]
 800276a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800276e:	2b00      	cmp	r3, #0
 8002770:	d003      	beq.n	800277a <HAL_GPIO_Init+0x29a>
 8002772:	69ba      	ldr	r2, [r7, #24]
 8002774:	693b      	ldr	r3, [r7, #16]
 8002776:	4313      	orrs	r3, r2
 8002778:	61bb      	str	r3, [r7, #24]
 800277a:	4a1a      	ldr	r2, [pc, #104]	@ (80027e4 <HAL_GPIO_Init+0x304>)
 800277c:	69bb      	ldr	r3, [r7, #24]
 800277e:	6053      	str	r3, [r2, #4]
 8002780:	4b18      	ldr	r3, [pc, #96]	@ (80027e4 <HAL_GPIO_Init+0x304>)
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	61bb      	str	r3, [r7, #24]
 8002786:	693b      	ldr	r3, [r7, #16]
 8002788:	43db      	mvns	r3, r3
 800278a:	69ba      	ldr	r2, [r7, #24]
 800278c:	4013      	ands	r3, r2
 800278e:	61bb      	str	r3, [r7, #24]
 8002790:	683b      	ldr	r3, [r7, #0]
 8002792:	685b      	ldr	r3, [r3, #4]
 8002794:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002798:	2b00      	cmp	r3, #0
 800279a:	d003      	beq.n	80027a4 <HAL_GPIO_Init+0x2c4>
 800279c:	69ba      	ldr	r2, [r7, #24]
 800279e:	693b      	ldr	r3, [r7, #16]
 80027a0:	4313      	orrs	r3, r2
 80027a2:	61bb      	str	r3, [r7, #24]
 80027a4:	4a0f      	ldr	r2, [pc, #60]	@ (80027e4 <HAL_GPIO_Init+0x304>)
 80027a6:	69bb      	ldr	r3, [r7, #24]
 80027a8:	6013      	str	r3, [r2, #0]
 80027aa:	69fb      	ldr	r3, [r7, #28]
 80027ac:	3301      	adds	r3, #1
 80027ae:	61fb      	str	r3, [r7, #28]
 80027b0:	69fb      	ldr	r3, [r7, #28]
 80027b2:	2b0f      	cmp	r3, #15
 80027b4:	f67f aea2 	bls.w	80024fc <HAL_GPIO_Init+0x1c>
 80027b8:	bf00      	nop
 80027ba:	bf00      	nop
 80027bc:	3724      	adds	r7, #36	@ 0x24
 80027be:	46bd      	mov	sp, r7
 80027c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c4:	4770      	bx	lr
 80027c6:	bf00      	nop
 80027c8:	40023800 	.word	0x40023800
 80027cc:	40013800 	.word	0x40013800
 80027d0:	40020000 	.word	0x40020000
 80027d4:	40020400 	.word	0x40020400
 80027d8:	40020800 	.word	0x40020800
 80027dc:	40020c00 	.word	0x40020c00
 80027e0:	40021000 	.word	0x40021000
 80027e4:	40013c00 	.word	0x40013c00

080027e8 <HAL_RCC_OscConfig>:
 80027e8:	b580      	push	{r7, lr}
 80027ea:	b086      	sub	sp, #24
 80027ec:	af00      	add	r7, sp, #0
 80027ee:	6078      	str	r0, [r7, #4]
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	d101      	bne.n	80027fa <HAL_RCC_OscConfig+0x12>
 80027f6:	2301      	movs	r3, #1
 80027f8:	e267      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	681b      	ldr	r3, [r3, #0]
 80027fe:	f003 0301 	and.w	r3, r3, #1
 8002802:	2b00      	cmp	r3, #0
 8002804:	d075      	beq.n	80028f2 <HAL_RCC_OscConfig+0x10a>
 8002806:	4b88      	ldr	r3, [pc, #544]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002808:	689b      	ldr	r3, [r3, #8]
 800280a:	f003 030c 	and.w	r3, r3, #12
 800280e:	2b04      	cmp	r3, #4
 8002810:	d00c      	beq.n	800282c <HAL_RCC_OscConfig+0x44>
 8002812:	4b85      	ldr	r3, [pc, #532]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002814:	689b      	ldr	r3, [r3, #8]
 8002816:	f003 030c 	and.w	r3, r3, #12
 800281a:	2b08      	cmp	r3, #8
 800281c:	d112      	bne.n	8002844 <HAL_RCC_OscConfig+0x5c>
 800281e:	4b82      	ldr	r3, [pc, #520]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002820:	685b      	ldr	r3, [r3, #4]
 8002822:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002826:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800282a:	d10b      	bne.n	8002844 <HAL_RCC_OscConfig+0x5c>
 800282c:	4b7e      	ldr	r3, [pc, #504]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002834:	2b00      	cmp	r3, #0
 8002836:	d05b      	beq.n	80028f0 <HAL_RCC_OscConfig+0x108>
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	685b      	ldr	r3, [r3, #4]
 800283c:	2b00      	cmp	r3, #0
 800283e:	d157      	bne.n	80028f0 <HAL_RCC_OscConfig+0x108>
 8002840:	2301      	movs	r3, #1
 8002842:	e242      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	685b      	ldr	r3, [r3, #4]
 8002848:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800284c:	d106      	bne.n	800285c <HAL_RCC_OscConfig+0x74>
 800284e:	4b76      	ldr	r3, [pc, #472]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002850:	681b      	ldr	r3, [r3, #0]
 8002852:	4a75      	ldr	r2, [pc, #468]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002854:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002858:	6013      	str	r3, [r2, #0]
 800285a:	e01d      	b.n	8002898 <HAL_RCC_OscConfig+0xb0>
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	685b      	ldr	r3, [r3, #4]
 8002860:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002864:	d10c      	bne.n	8002880 <HAL_RCC_OscConfig+0x98>
 8002866:	4b70      	ldr	r3, [pc, #448]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002868:	681b      	ldr	r3, [r3, #0]
 800286a:	4a6f      	ldr	r2, [pc, #444]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 800286c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002870:	6013      	str	r3, [r2, #0]
 8002872:	4b6d      	ldr	r3, [pc, #436]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	4a6c      	ldr	r2, [pc, #432]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002878:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800287c:	6013      	str	r3, [r2, #0]
 800287e:	e00b      	b.n	8002898 <HAL_RCC_OscConfig+0xb0>
 8002880:	4b69      	ldr	r3, [pc, #420]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002882:	681b      	ldr	r3, [r3, #0]
 8002884:	4a68      	ldr	r2, [pc, #416]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002886:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800288a:	6013      	str	r3, [r2, #0]
 800288c:	4b66      	ldr	r3, [pc, #408]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4a65      	ldr	r2, [pc, #404]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002892:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002896:	6013      	str	r3, [r2, #0]
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	685b      	ldr	r3, [r3, #4]
 800289c:	2b00      	cmp	r3, #0
 800289e:	d013      	beq.n	80028c8 <HAL_RCC_OscConfig+0xe0>
 80028a0:	f7fe fcd0 	bl	8001244 <HAL_GetTick>
 80028a4:	6138      	str	r0, [r7, #16]
 80028a6:	e008      	b.n	80028ba <HAL_RCC_OscConfig+0xd2>
 80028a8:	f7fe fccc 	bl	8001244 <HAL_GetTick>
 80028ac:	4602      	mov	r2, r0
 80028ae:	693b      	ldr	r3, [r7, #16]
 80028b0:	1ad3      	subs	r3, r2, r3
 80028b2:	2b64      	cmp	r3, #100	@ 0x64
 80028b4:	d901      	bls.n	80028ba <HAL_RCC_OscConfig+0xd2>
 80028b6:	2303      	movs	r3, #3
 80028b8:	e207      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 80028ba:	4b5b      	ldr	r3, [pc, #364]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 80028bc:	681b      	ldr	r3, [r3, #0]
 80028be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	d0f0      	beq.n	80028a8 <HAL_RCC_OscConfig+0xc0>
 80028c6:	e014      	b.n	80028f2 <HAL_RCC_OscConfig+0x10a>
 80028c8:	f7fe fcbc 	bl	8001244 <HAL_GetTick>
 80028cc:	6138      	str	r0, [r7, #16]
 80028ce:	e008      	b.n	80028e2 <HAL_RCC_OscConfig+0xfa>
 80028d0:	f7fe fcb8 	bl	8001244 <HAL_GetTick>
 80028d4:	4602      	mov	r2, r0
 80028d6:	693b      	ldr	r3, [r7, #16]
 80028d8:	1ad3      	subs	r3, r2, r3
 80028da:	2b64      	cmp	r3, #100	@ 0x64
 80028dc:	d901      	bls.n	80028e2 <HAL_RCC_OscConfig+0xfa>
 80028de:	2303      	movs	r3, #3
 80028e0:	e1f3      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 80028e2:	4b51      	ldr	r3, [pc, #324]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d1f0      	bne.n	80028d0 <HAL_RCC_OscConfig+0xe8>
 80028ee:	e000      	b.n	80028f2 <HAL_RCC_OscConfig+0x10a>
 80028f0:	bf00      	nop
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	f003 0302 	and.w	r3, r3, #2
 80028fa:	2b00      	cmp	r3, #0
 80028fc:	d063      	beq.n	80029c6 <HAL_RCC_OscConfig+0x1de>
 80028fe:	4b4a      	ldr	r3, [pc, #296]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002900:	689b      	ldr	r3, [r3, #8]
 8002902:	f003 030c 	and.w	r3, r3, #12
 8002906:	2b00      	cmp	r3, #0
 8002908:	d00b      	beq.n	8002922 <HAL_RCC_OscConfig+0x13a>
 800290a:	4b47      	ldr	r3, [pc, #284]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 800290c:	689b      	ldr	r3, [r3, #8]
 800290e:	f003 030c 	and.w	r3, r3, #12
 8002912:	2b08      	cmp	r3, #8
 8002914:	d11c      	bne.n	8002950 <HAL_RCC_OscConfig+0x168>
 8002916:	4b44      	ldr	r3, [pc, #272]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002918:	685b      	ldr	r3, [r3, #4]
 800291a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800291e:	2b00      	cmp	r3, #0
 8002920:	d116      	bne.n	8002950 <HAL_RCC_OscConfig+0x168>
 8002922:	4b41      	ldr	r3, [pc, #260]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002924:	681b      	ldr	r3, [r3, #0]
 8002926:	f003 0302 	and.w	r3, r3, #2
 800292a:	2b00      	cmp	r3, #0
 800292c:	d005      	beq.n	800293a <HAL_RCC_OscConfig+0x152>
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	68db      	ldr	r3, [r3, #12]
 8002932:	2b01      	cmp	r3, #1
 8002934:	d001      	beq.n	800293a <HAL_RCC_OscConfig+0x152>
 8002936:	2301      	movs	r3, #1
 8002938:	e1c7      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 800293a:	4b3b      	ldr	r3, [pc, #236]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 800293c:	681b      	ldr	r3, [r3, #0]
 800293e:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	691b      	ldr	r3, [r3, #16]
 8002946:	00db      	lsls	r3, r3, #3
 8002948:	4937      	ldr	r1, [pc, #220]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 800294a:	4313      	orrs	r3, r2
 800294c:	600b      	str	r3, [r1, #0]
 800294e:	e03a      	b.n	80029c6 <HAL_RCC_OscConfig+0x1de>
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	68db      	ldr	r3, [r3, #12]
 8002954:	2b00      	cmp	r3, #0
 8002956:	d020      	beq.n	800299a <HAL_RCC_OscConfig+0x1b2>
 8002958:	4b34      	ldr	r3, [pc, #208]	@ (8002a2c <HAL_RCC_OscConfig+0x244>)
 800295a:	2201      	movs	r2, #1
 800295c:	601a      	str	r2, [r3, #0]
 800295e:	f7fe fc71 	bl	8001244 <HAL_GetTick>
 8002962:	6138      	str	r0, [r7, #16]
 8002964:	e008      	b.n	8002978 <HAL_RCC_OscConfig+0x190>
 8002966:	f7fe fc6d 	bl	8001244 <HAL_GetTick>
 800296a:	4602      	mov	r2, r0
 800296c:	693b      	ldr	r3, [r7, #16]
 800296e:	1ad3      	subs	r3, r2, r3
 8002970:	2b02      	cmp	r3, #2
 8002972:	d901      	bls.n	8002978 <HAL_RCC_OscConfig+0x190>
 8002974:	2303      	movs	r3, #3
 8002976:	e1a8      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002978:	4b2b      	ldr	r3, [pc, #172]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	f003 0302 	and.w	r3, r3, #2
 8002980:	2b00      	cmp	r3, #0
 8002982:	d0f0      	beq.n	8002966 <HAL_RCC_OscConfig+0x17e>
 8002984:	4b28      	ldr	r3, [pc, #160]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002986:	681b      	ldr	r3, [r3, #0]
 8002988:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	691b      	ldr	r3, [r3, #16]
 8002990:	00db      	lsls	r3, r3, #3
 8002992:	4925      	ldr	r1, [pc, #148]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 8002994:	4313      	orrs	r3, r2
 8002996:	600b      	str	r3, [r1, #0]
 8002998:	e015      	b.n	80029c6 <HAL_RCC_OscConfig+0x1de>
 800299a:	4b24      	ldr	r3, [pc, #144]	@ (8002a2c <HAL_RCC_OscConfig+0x244>)
 800299c:	2200      	movs	r2, #0
 800299e:	601a      	str	r2, [r3, #0]
 80029a0:	f7fe fc50 	bl	8001244 <HAL_GetTick>
 80029a4:	6138      	str	r0, [r7, #16]
 80029a6:	e008      	b.n	80029ba <HAL_RCC_OscConfig+0x1d2>
 80029a8:	f7fe fc4c 	bl	8001244 <HAL_GetTick>
 80029ac:	4602      	mov	r2, r0
 80029ae:	693b      	ldr	r3, [r7, #16]
 80029b0:	1ad3      	subs	r3, r2, r3
 80029b2:	2b02      	cmp	r3, #2
 80029b4:	d901      	bls.n	80029ba <HAL_RCC_OscConfig+0x1d2>
 80029b6:	2303      	movs	r3, #3
 80029b8:	e187      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 80029ba:	4b1b      	ldr	r3, [pc, #108]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	f003 0302 	and.w	r3, r3, #2
 80029c2:	2b00      	cmp	r3, #0
 80029c4:	d1f0      	bne.n	80029a8 <HAL_RCC_OscConfig+0x1c0>
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	f003 0308 	and.w	r3, r3, #8
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d036      	beq.n	8002a40 <HAL_RCC_OscConfig+0x258>
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	695b      	ldr	r3, [r3, #20]
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d016      	beq.n	8002a08 <HAL_RCC_OscConfig+0x220>
 80029da:	4b15      	ldr	r3, [pc, #84]	@ (8002a30 <HAL_RCC_OscConfig+0x248>)
 80029dc:	2201      	movs	r2, #1
 80029de:	601a      	str	r2, [r3, #0]
 80029e0:	f7fe fc30 	bl	8001244 <HAL_GetTick>
 80029e4:	6138      	str	r0, [r7, #16]
 80029e6:	e008      	b.n	80029fa <HAL_RCC_OscConfig+0x212>
 80029e8:	f7fe fc2c 	bl	8001244 <HAL_GetTick>
 80029ec:	4602      	mov	r2, r0
 80029ee:	693b      	ldr	r3, [r7, #16]
 80029f0:	1ad3      	subs	r3, r2, r3
 80029f2:	2b02      	cmp	r3, #2
 80029f4:	d901      	bls.n	80029fa <HAL_RCC_OscConfig+0x212>
 80029f6:	2303      	movs	r3, #3
 80029f8:	e167      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 80029fa:	4b0b      	ldr	r3, [pc, #44]	@ (8002a28 <HAL_RCC_OscConfig+0x240>)
 80029fc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80029fe:	f003 0302 	and.w	r3, r3, #2
 8002a02:	2b00      	cmp	r3, #0
 8002a04:	d0f0      	beq.n	80029e8 <HAL_RCC_OscConfig+0x200>
 8002a06:	e01b      	b.n	8002a40 <HAL_RCC_OscConfig+0x258>
 8002a08:	4b09      	ldr	r3, [pc, #36]	@ (8002a30 <HAL_RCC_OscConfig+0x248>)
 8002a0a:	2200      	movs	r2, #0
 8002a0c:	601a      	str	r2, [r3, #0]
 8002a0e:	f7fe fc19 	bl	8001244 <HAL_GetTick>
 8002a12:	6138      	str	r0, [r7, #16]
 8002a14:	e00e      	b.n	8002a34 <HAL_RCC_OscConfig+0x24c>
 8002a16:	f7fe fc15 	bl	8001244 <HAL_GetTick>
 8002a1a:	4602      	mov	r2, r0
 8002a1c:	693b      	ldr	r3, [r7, #16]
 8002a1e:	1ad3      	subs	r3, r2, r3
 8002a20:	2b02      	cmp	r3, #2
 8002a22:	d907      	bls.n	8002a34 <HAL_RCC_OscConfig+0x24c>
 8002a24:	2303      	movs	r3, #3
 8002a26:	e150      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002a28:	40023800 	.word	0x40023800
 8002a2c:	42470000 	.word	0x42470000
 8002a30:	42470e80 	.word	0x42470e80
 8002a34:	4b88      	ldr	r3, [pc, #544]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002a36:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002a38:	f003 0302 	and.w	r3, r3, #2
 8002a3c:	2b00      	cmp	r3, #0
 8002a3e:	d1ea      	bne.n	8002a16 <HAL_RCC_OscConfig+0x22e>
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	f003 0304 	and.w	r3, r3, #4
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	f000 8097 	beq.w	8002b7c <HAL_RCC_OscConfig+0x394>
 8002a4e:	2300      	movs	r3, #0
 8002a50:	75fb      	strb	r3, [r7, #23]
 8002a52:	4b81      	ldr	r3, [pc, #516]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002a54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a56:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d10f      	bne.n	8002a7e <HAL_RCC_OscConfig+0x296>
 8002a5e:	2300      	movs	r3, #0
 8002a60:	60bb      	str	r3, [r7, #8]
 8002a62:	4b7d      	ldr	r3, [pc, #500]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002a64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a66:	4a7c      	ldr	r2, [pc, #496]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002a68:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002a6c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002a6e:	4b7a      	ldr	r3, [pc, #488]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002a70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a72:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002a76:	60bb      	str	r3, [r7, #8]
 8002a78:	68bb      	ldr	r3, [r7, #8]
 8002a7a:	2301      	movs	r3, #1
 8002a7c:	75fb      	strb	r3, [r7, #23]
 8002a7e:	4b77      	ldr	r3, [pc, #476]	@ (8002c5c <HAL_RCC_OscConfig+0x474>)
 8002a80:	681b      	ldr	r3, [r3, #0]
 8002a82:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d118      	bne.n	8002abc <HAL_RCC_OscConfig+0x2d4>
 8002a8a:	4b74      	ldr	r3, [pc, #464]	@ (8002c5c <HAL_RCC_OscConfig+0x474>)
 8002a8c:	681b      	ldr	r3, [r3, #0]
 8002a8e:	4a73      	ldr	r2, [pc, #460]	@ (8002c5c <HAL_RCC_OscConfig+0x474>)
 8002a90:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002a94:	6013      	str	r3, [r2, #0]
 8002a96:	f7fe fbd5 	bl	8001244 <HAL_GetTick>
 8002a9a:	6138      	str	r0, [r7, #16]
 8002a9c:	e008      	b.n	8002ab0 <HAL_RCC_OscConfig+0x2c8>
 8002a9e:	f7fe fbd1 	bl	8001244 <HAL_GetTick>
 8002aa2:	4602      	mov	r2, r0
 8002aa4:	693b      	ldr	r3, [r7, #16]
 8002aa6:	1ad3      	subs	r3, r2, r3
 8002aa8:	2b02      	cmp	r3, #2
 8002aaa:	d901      	bls.n	8002ab0 <HAL_RCC_OscConfig+0x2c8>
 8002aac:	2303      	movs	r3, #3
 8002aae:	e10c      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002ab0:	4b6a      	ldr	r3, [pc, #424]	@ (8002c5c <HAL_RCC_OscConfig+0x474>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d0f0      	beq.n	8002a9e <HAL_RCC_OscConfig+0x2b6>
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	689b      	ldr	r3, [r3, #8]
 8002ac0:	2b01      	cmp	r3, #1
 8002ac2:	d106      	bne.n	8002ad2 <HAL_RCC_OscConfig+0x2ea>
 8002ac4:	4b64      	ldr	r3, [pc, #400]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002ac6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ac8:	4a63      	ldr	r2, [pc, #396]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002aca:	f043 0301 	orr.w	r3, r3, #1
 8002ace:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ad0:	e01c      	b.n	8002b0c <HAL_RCC_OscConfig+0x324>
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	689b      	ldr	r3, [r3, #8]
 8002ad6:	2b05      	cmp	r3, #5
 8002ad8:	d10c      	bne.n	8002af4 <HAL_RCC_OscConfig+0x30c>
 8002ada:	4b5f      	ldr	r3, [pc, #380]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002adc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ade:	4a5e      	ldr	r2, [pc, #376]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002ae0:	f043 0304 	orr.w	r3, r3, #4
 8002ae4:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ae6:	4b5c      	ldr	r3, [pc, #368]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002ae8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002aea:	4a5b      	ldr	r2, [pc, #364]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002aec:	f043 0301 	orr.w	r3, r3, #1
 8002af0:	6713      	str	r3, [r2, #112]	@ 0x70
 8002af2:	e00b      	b.n	8002b0c <HAL_RCC_OscConfig+0x324>
 8002af4:	4b58      	ldr	r3, [pc, #352]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002af6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002af8:	4a57      	ldr	r2, [pc, #348]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002afa:	f023 0301 	bic.w	r3, r3, #1
 8002afe:	6713      	str	r3, [r2, #112]	@ 0x70
 8002b00:	4b55      	ldr	r3, [pc, #340]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002b02:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b04:	4a54      	ldr	r2, [pc, #336]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002b06:	f023 0304 	bic.w	r3, r3, #4
 8002b0a:	6713      	str	r3, [r2, #112]	@ 0x70
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	689b      	ldr	r3, [r3, #8]
 8002b10:	2b00      	cmp	r3, #0
 8002b12:	d015      	beq.n	8002b40 <HAL_RCC_OscConfig+0x358>
 8002b14:	f7fe fb96 	bl	8001244 <HAL_GetTick>
 8002b18:	6138      	str	r0, [r7, #16]
 8002b1a:	e00a      	b.n	8002b32 <HAL_RCC_OscConfig+0x34a>
 8002b1c:	f7fe fb92 	bl	8001244 <HAL_GetTick>
 8002b20:	4602      	mov	r2, r0
 8002b22:	693b      	ldr	r3, [r7, #16]
 8002b24:	1ad3      	subs	r3, r2, r3
 8002b26:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002b2a:	4293      	cmp	r3, r2
 8002b2c:	d901      	bls.n	8002b32 <HAL_RCC_OscConfig+0x34a>
 8002b2e:	2303      	movs	r3, #3
 8002b30:	e0cb      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002b32:	4b49      	ldr	r3, [pc, #292]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002b34:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b36:	f003 0302 	and.w	r3, r3, #2
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	d0ee      	beq.n	8002b1c <HAL_RCC_OscConfig+0x334>
 8002b3e:	e014      	b.n	8002b6a <HAL_RCC_OscConfig+0x382>
 8002b40:	f7fe fb80 	bl	8001244 <HAL_GetTick>
 8002b44:	6138      	str	r0, [r7, #16]
 8002b46:	e00a      	b.n	8002b5e <HAL_RCC_OscConfig+0x376>
 8002b48:	f7fe fb7c 	bl	8001244 <HAL_GetTick>
 8002b4c:	4602      	mov	r2, r0
 8002b4e:	693b      	ldr	r3, [r7, #16]
 8002b50:	1ad3      	subs	r3, r2, r3
 8002b52:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002b56:	4293      	cmp	r3, r2
 8002b58:	d901      	bls.n	8002b5e <HAL_RCC_OscConfig+0x376>
 8002b5a:	2303      	movs	r3, #3
 8002b5c:	e0b5      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002b5e:	4b3e      	ldr	r3, [pc, #248]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002b60:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002b62:	f003 0302 	and.w	r3, r3, #2
 8002b66:	2b00      	cmp	r3, #0
 8002b68:	d1ee      	bne.n	8002b48 <HAL_RCC_OscConfig+0x360>
 8002b6a:	7dfb      	ldrb	r3, [r7, #23]
 8002b6c:	2b01      	cmp	r3, #1
 8002b6e:	d105      	bne.n	8002b7c <HAL_RCC_OscConfig+0x394>
 8002b70:	4b39      	ldr	r3, [pc, #228]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002b72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b74:	4a38      	ldr	r2, [pc, #224]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002b76:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002b7a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	699b      	ldr	r3, [r3, #24]
 8002b80:	2b00      	cmp	r3, #0
 8002b82:	f000 80a1 	beq.w	8002cc8 <HAL_RCC_OscConfig+0x4e0>
 8002b86:	4b34      	ldr	r3, [pc, #208]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002b88:	689b      	ldr	r3, [r3, #8]
 8002b8a:	f003 030c 	and.w	r3, r3, #12
 8002b8e:	2b08      	cmp	r3, #8
 8002b90:	d05c      	beq.n	8002c4c <HAL_RCC_OscConfig+0x464>
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	699b      	ldr	r3, [r3, #24]
 8002b96:	2b02      	cmp	r3, #2
 8002b98:	d141      	bne.n	8002c1e <HAL_RCC_OscConfig+0x436>
 8002b9a:	4b31      	ldr	r3, [pc, #196]	@ (8002c60 <HAL_RCC_OscConfig+0x478>)
 8002b9c:	2200      	movs	r2, #0
 8002b9e:	601a      	str	r2, [r3, #0]
 8002ba0:	f7fe fb50 	bl	8001244 <HAL_GetTick>
 8002ba4:	6138      	str	r0, [r7, #16]
 8002ba6:	e008      	b.n	8002bba <HAL_RCC_OscConfig+0x3d2>
 8002ba8:	f7fe fb4c 	bl	8001244 <HAL_GetTick>
 8002bac:	4602      	mov	r2, r0
 8002bae:	693b      	ldr	r3, [r7, #16]
 8002bb0:	1ad3      	subs	r3, r2, r3
 8002bb2:	2b02      	cmp	r3, #2
 8002bb4:	d901      	bls.n	8002bba <HAL_RCC_OscConfig+0x3d2>
 8002bb6:	2303      	movs	r3, #3
 8002bb8:	e087      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002bba:	4b27      	ldr	r3, [pc, #156]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002bc2:	2b00      	cmp	r3, #0
 8002bc4:	d1f0      	bne.n	8002ba8 <HAL_RCC_OscConfig+0x3c0>
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	69da      	ldr	r2, [r3, #28]
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	6a1b      	ldr	r3, [r3, #32]
 8002bce:	431a      	orrs	r2, r3
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002bd4:	019b      	lsls	r3, r3, #6
 8002bd6:	431a      	orrs	r2, r3
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002bdc:	085b      	lsrs	r3, r3, #1
 8002bde:	3b01      	subs	r3, #1
 8002be0:	041b      	lsls	r3, r3, #16
 8002be2:	431a      	orrs	r2, r3
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002be8:	061b      	lsls	r3, r3, #24
 8002bea:	491b      	ldr	r1, [pc, #108]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002bec:	4313      	orrs	r3, r2
 8002bee:	604b      	str	r3, [r1, #4]
 8002bf0:	4b1b      	ldr	r3, [pc, #108]	@ (8002c60 <HAL_RCC_OscConfig+0x478>)
 8002bf2:	2201      	movs	r2, #1
 8002bf4:	601a      	str	r2, [r3, #0]
 8002bf6:	f7fe fb25 	bl	8001244 <HAL_GetTick>
 8002bfa:	6138      	str	r0, [r7, #16]
 8002bfc:	e008      	b.n	8002c10 <HAL_RCC_OscConfig+0x428>
 8002bfe:	f7fe fb21 	bl	8001244 <HAL_GetTick>
 8002c02:	4602      	mov	r2, r0
 8002c04:	693b      	ldr	r3, [r7, #16]
 8002c06:	1ad3      	subs	r3, r2, r3
 8002c08:	2b02      	cmp	r3, #2
 8002c0a:	d901      	bls.n	8002c10 <HAL_RCC_OscConfig+0x428>
 8002c0c:	2303      	movs	r3, #3
 8002c0e:	e05c      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002c10:	4b11      	ldr	r3, [pc, #68]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d0f0      	beq.n	8002bfe <HAL_RCC_OscConfig+0x416>
 8002c1c:	e054      	b.n	8002cc8 <HAL_RCC_OscConfig+0x4e0>
 8002c1e:	4b10      	ldr	r3, [pc, #64]	@ (8002c60 <HAL_RCC_OscConfig+0x478>)
 8002c20:	2200      	movs	r2, #0
 8002c22:	601a      	str	r2, [r3, #0]
 8002c24:	f7fe fb0e 	bl	8001244 <HAL_GetTick>
 8002c28:	6138      	str	r0, [r7, #16]
 8002c2a:	e008      	b.n	8002c3e <HAL_RCC_OscConfig+0x456>
 8002c2c:	f7fe fb0a 	bl	8001244 <HAL_GetTick>
 8002c30:	4602      	mov	r2, r0
 8002c32:	693b      	ldr	r3, [r7, #16]
 8002c34:	1ad3      	subs	r3, r2, r3
 8002c36:	2b02      	cmp	r3, #2
 8002c38:	d901      	bls.n	8002c3e <HAL_RCC_OscConfig+0x456>
 8002c3a:	2303      	movs	r3, #3
 8002c3c:	e045      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002c3e:	4b06      	ldr	r3, [pc, #24]	@ (8002c58 <HAL_RCC_OscConfig+0x470>)
 8002c40:	681b      	ldr	r3, [r3, #0]
 8002c42:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	d1f0      	bne.n	8002c2c <HAL_RCC_OscConfig+0x444>
 8002c4a:	e03d      	b.n	8002cc8 <HAL_RCC_OscConfig+0x4e0>
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	699b      	ldr	r3, [r3, #24]
 8002c50:	2b01      	cmp	r3, #1
 8002c52:	d107      	bne.n	8002c64 <HAL_RCC_OscConfig+0x47c>
 8002c54:	2301      	movs	r3, #1
 8002c56:	e038      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002c58:	40023800 	.word	0x40023800
 8002c5c:	40007000 	.word	0x40007000
 8002c60:	42470060 	.word	0x42470060
 8002c64:	4b1b      	ldr	r3, [pc, #108]	@ (8002cd4 <HAL_RCC_OscConfig+0x4ec>)
 8002c66:	685b      	ldr	r3, [r3, #4]
 8002c68:	60fb      	str	r3, [r7, #12]
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	699b      	ldr	r3, [r3, #24]
 8002c6e:	2b01      	cmp	r3, #1
 8002c70:	d028      	beq.n	8002cc4 <HAL_RCC_OscConfig+0x4dc>
 8002c72:	68fb      	ldr	r3, [r7, #12]
 8002c74:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	69db      	ldr	r3, [r3, #28]
 8002c7c:	429a      	cmp	r2, r3
 8002c7e:	d121      	bne.n	8002cc4 <HAL_RCC_OscConfig+0x4dc>
 8002c80:	68fb      	ldr	r3, [r7, #12]
 8002c82:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	6a1b      	ldr	r3, [r3, #32]
 8002c8a:	429a      	cmp	r2, r3
 8002c8c:	d11a      	bne.n	8002cc4 <HAL_RCC_OscConfig+0x4dc>
 8002c8e:	68fa      	ldr	r2, [r7, #12]
 8002c90:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002c94:	4013      	ands	r3, r2
 8002c96:	687a      	ldr	r2, [r7, #4]
 8002c98:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002c9a:	0192      	lsls	r2, r2, #6
 8002c9c:	4293      	cmp	r3, r2
 8002c9e:	d111      	bne.n	8002cc4 <HAL_RCC_OscConfig+0x4dc>
 8002ca0:	68fb      	ldr	r3, [r7, #12]
 8002ca2:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002caa:	085b      	lsrs	r3, r3, #1
 8002cac:	3b01      	subs	r3, #1
 8002cae:	041b      	lsls	r3, r3, #16
 8002cb0:	429a      	cmp	r2, r3
 8002cb2:	d107      	bne.n	8002cc4 <HAL_RCC_OscConfig+0x4dc>
 8002cb4:	68fb      	ldr	r3, [r7, #12]
 8002cb6:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002cbe:	061b      	lsls	r3, r3, #24
 8002cc0:	429a      	cmp	r2, r3
 8002cc2:	d001      	beq.n	8002cc8 <HAL_RCC_OscConfig+0x4e0>
 8002cc4:	2301      	movs	r3, #1
 8002cc6:	e000      	b.n	8002cca <HAL_RCC_OscConfig+0x4e2>
 8002cc8:	2300      	movs	r3, #0
 8002cca:	4618      	mov	r0, r3
 8002ccc:	3718      	adds	r7, #24
 8002cce:	46bd      	mov	sp, r7
 8002cd0:	bd80      	pop	{r7, pc}
 8002cd2:	bf00      	nop
 8002cd4:	40023800 	.word	0x40023800

08002cd8 <HAL_RCC_ClockConfig>:
 8002cd8:	b580      	push	{r7, lr}
 8002cda:	b084      	sub	sp, #16
 8002cdc:	af00      	add	r7, sp, #0
 8002cde:	6078      	str	r0, [r7, #4]
 8002ce0:	6039      	str	r1, [r7, #0]
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	2b00      	cmp	r3, #0
 8002ce6:	d101      	bne.n	8002cec <HAL_RCC_ClockConfig+0x14>
 8002ce8:	2301      	movs	r3, #1
 8002cea:	e0cc      	b.n	8002e86 <HAL_RCC_ClockConfig+0x1ae>
 8002cec:	4b68      	ldr	r3, [pc, #416]	@ (8002e90 <HAL_RCC_ClockConfig+0x1b8>)
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	f003 0307 	and.w	r3, r3, #7
 8002cf4:	683a      	ldr	r2, [r7, #0]
 8002cf6:	429a      	cmp	r2, r3
 8002cf8:	d90c      	bls.n	8002d14 <HAL_RCC_ClockConfig+0x3c>
 8002cfa:	4b65      	ldr	r3, [pc, #404]	@ (8002e90 <HAL_RCC_ClockConfig+0x1b8>)
 8002cfc:	683a      	ldr	r2, [r7, #0]
 8002cfe:	b2d2      	uxtb	r2, r2
 8002d00:	701a      	strb	r2, [r3, #0]
 8002d02:	4b63      	ldr	r3, [pc, #396]	@ (8002e90 <HAL_RCC_ClockConfig+0x1b8>)
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	f003 0307 	and.w	r3, r3, #7
 8002d0a:	683a      	ldr	r2, [r7, #0]
 8002d0c:	429a      	cmp	r2, r3
 8002d0e:	d001      	beq.n	8002d14 <HAL_RCC_ClockConfig+0x3c>
 8002d10:	2301      	movs	r3, #1
 8002d12:	e0b8      	b.n	8002e86 <HAL_RCC_ClockConfig+0x1ae>
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	f003 0302 	and.w	r3, r3, #2
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d020      	beq.n	8002d62 <HAL_RCC_ClockConfig+0x8a>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	f003 0304 	and.w	r3, r3, #4
 8002d28:	2b00      	cmp	r3, #0
 8002d2a:	d005      	beq.n	8002d38 <HAL_RCC_ClockConfig+0x60>
 8002d2c:	4b59      	ldr	r3, [pc, #356]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002d2e:	689b      	ldr	r3, [r3, #8]
 8002d30:	4a58      	ldr	r2, [pc, #352]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002d32:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002d36:	6093      	str	r3, [r2, #8]
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	681b      	ldr	r3, [r3, #0]
 8002d3c:	f003 0308 	and.w	r3, r3, #8
 8002d40:	2b00      	cmp	r3, #0
 8002d42:	d005      	beq.n	8002d50 <HAL_RCC_ClockConfig+0x78>
 8002d44:	4b53      	ldr	r3, [pc, #332]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002d46:	689b      	ldr	r3, [r3, #8]
 8002d48:	4a52      	ldr	r2, [pc, #328]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002d4a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002d4e:	6093      	str	r3, [r2, #8]
 8002d50:	4b50      	ldr	r3, [pc, #320]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002d52:	689b      	ldr	r3, [r3, #8]
 8002d54:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	689b      	ldr	r3, [r3, #8]
 8002d5c:	494d      	ldr	r1, [pc, #308]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002d5e:	4313      	orrs	r3, r2
 8002d60:	608b      	str	r3, [r1, #8]
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	f003 0301 	and.w	r3, r3, #1
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d044      	beq.n	8002df8 <HAL_RCC_ClockConfig+0x120>
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	685b      	ldr	r3, [r3, #4]
 8002d72:	2b01      	cmp	r3, #1
 8002d74:	d107      	bne.n	8002d86 <HAL_RCC_ClockConfig+0xae>
 8002d76:	4b47      	ldr	r3, [pc, #284]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002d7e:	2b00      	cmp	r3, #0
 8002d80:	d119      	bne.n	8002db6 <HAL_RCC_ClockConfig+0xde>
 8002d82:	2301      	movs	r3, #1
 8002d84:	e07f      	b.n	8002e86 <HAL_RCC_ClockConfig+0x1ae>
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	685b      	ldr	r3, [r3, #4]
 8002d8a:	2b02      	cmp	r3, #2
 8002d8c:	d003      	beq.n	8002d96 <HAL_RCC_ClockConfig+0xbe>
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	685b      	ldr	r3, [r3, #4]
 8002d92:	2b03      	cmp	r3, #3
 8002d94:	d107      	bne.n	8002da6 <HAL_RCC_ClockConfig+0xce>
 8002d96:	4b3f      	ldr	r3, [pc, #252]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002d9e:	2b00      	cmp	r3, #0
 8002da0:	d109      	bne.n	8002db6 <HAL_RCC_ClockConfig+0xde>
 8002da2:	2301      	movs	r3, #1
 8002da4:	e06f      	b.n	8002e86 <HAL_RCC_ClockConfig+0x1ae>
 8002da6:	4b3b      	ldr	r3, [pc, #236]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	f003 0302 	and.w	r3, r3, #2
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d101      	bne.n	8002db6 <HAL_RCC_ClockConfig+0xde>
 8002db2:	2301      	movs	r3, #1
 8002db4:	e067      	b.n	8002e86 <HAL_RCC_ClockConfig+0x1ae>
 8002db6:	4b37      	ldr	r3, [pc, #220]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002db8:	689b      	ldr	r3, [r3, #8]
 8002dba:	f023 0203 	bic.w	r2, r3, #3
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	685b      	ldr	r3, [r3, #4]
 8002dc2:	4934      	ldr	r1, [pc, #208]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002dc4:	4313      	orrs	r3, r2
 8002dc6:	608b      	str	r3, [r1, #8]
 8002dc8:	f7fe fa3c 	bl	8001244 <HAL_GetTick>
 8002dcc:	60f8      	str	r0, [r7, #12]
 8002dce:	e00a      	b.n	8002de6 <HAL_RCC_ClockConfig+0x10e>
 8002dd0:	f7fe fa38 	bl	8001244 <HAL_GetTick>
 8002dd4:	4602      	mov	r2, r0
 8002dd6:	68fb      	ldr	r3, [r7, #12]
 8002dd8:	1ad3      	subs	r3, r2, r3
 8002dda:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002dde:	4293      	cmp	r3, r2
 8002de0:	d901      	bls.n	8002de6 <HAL_RCC_ClockConfig+0x10e>
 8002de2:	2303      	movs	r3, #3
 8002de4:	e04f      	b.n	8002e86 <HAL_RCC_ClockConfig+0x1ae>
 8002de6:	4b2b      	ldr	r3, [pc, #172]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002de8:	689b      	ldr	r3, [r3, #8]
 8002dea:	f003 020c 	and.w	r2, r3, #12
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	685b      	ldr	r3, [r3, #4]
 8002df2:	009b      	lsls	r3, r3, #2
 8002df4:	429a      	cmp	r2, r3
 8002df6:	d1eb      	bne.n	8002dd0 <HAL_RCC_ClockConfig+0xf8>
 8002df8:	4b25      	ldr	r3, [pc, #148]	@ (8002e90 <HAL_RCC_ClockConfig+0x1b8>)
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	f003 0307 	and.w	r3, r3, #7
 8002e00:	683a      	ldr	r2, [r7, #0]
 8002e02:	429a      	cmp	r2, r3
 8002e04:	d20c      	bcs.n	8002e20 <HAL_RCC_ClockConfig+0x148>
 8002e06:	4b22      	ldr	r3, [pc, #136]	@ (8002e90 <HAL_RCC_ClockConfig+0x1b8>)
 8002e08:	683a      	ldr	r2, [r7, #0]
 8002e0a:	b2d2      	uxtb	r2, r2
 8002e0c:	701a      	strb	r2, [r3, #0]
 8002e0e:	4b20      	ldr	r3, [pc, #128]	@ (8002e90 <HAL_RCC_ClockConfig+0x1b8>)
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	f003 0307 	and.w	r3, r3, #7
 8002e16:	683a      	ldr	r2, [r7, #0]
 8002e18:	429a      	cmp	r2, r3
 8002e1a:	d001      	beq.n	8002e20 <HAL_RCC_ClockConfig+0x148>
 8002e1c:	2301      	movs	r3, #1
 8002e1e:	e032      	b.n	8002e86 <HAL_RCC_ClockConfig+0x1ae>
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	f003 0304 	and.w	r3, r3, #4
 8002e28:	2b00      	cmp	r3, #0
 8002e2a:	d008      	beq.n	8002e3e <HAL_RCC_ClockConfig+0x166>
 8002e2c:	4b19      	ldr	r3, [pc, #100]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002e2e:	689b      	ldr	r3, [r3, #8]
 8002e30:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	68db      	ldr	r3, [r3, #12]
 8002e38:	4916      	ldr	r1, [pc, #88]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002e3a:	4313      	orrs	r3, r2
 8002e3c:	608b      	str	r3, [r1, #8]
 8002e3e:	687b      	ldr	r3, [r7, #4]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	f003 0308 	and.w	r3, r3, #8
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d009      	beq.n	8002e5e <HAL_RCC_ClockConfig+0x186>
 8002e4a:	4b12      	ldr	r3, [pc, #72]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002e4c:	689b      	ldr	r3, [r3, #8]
 8002e4e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	691b      	ldr	r3, [r3, #16]
 8002e56:	00db      	lsls	r3, r3, #3
 8002e58:	490e      	ldr	r1, [pc, #56]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002e5a:	4313      	orrs	r3, r2
 8002e5c:	608b      	str	r3, [r1, #8]
 8002e5e:	f000 f821 	bl	8002ea4 <HAL_RCC_GetSysClockFreq>
 8002e62:	4602      	mov	r2, r0
 8002e64:	4b0b      	ldr	r3, [pc, #44]	@ (8002e94 <HAL_RCC_ClockConfig+0x1bc>)
 8002e66:	689b      	ldr	r3, [r3, #8]
 8002e68:	091b      	lsrs	r3, r3, #4
 8002e6a:	f003 030f 	and.w	r3, r3, #15
 8002e6e:	490a      	ldr	r1, [pc, #40]	@ (8002e98 <HAL_RCC_ClockConfig+0x1c0>)
 8002e70:	5ccb      	ldrb	r3, [r1, r3]
 8002e72:	fa22 f303 	lsr.w	r3, r2, r3
 8002e76:	4a09      	ldr	r2, [pc, #36]	@ (8002e9c <HAL_RCC_ClockConfig+0x1c4>)
 8002e78:	6013      	str	r3, [r2, #0]
 8002e7a:	4b09      	ldr	r3, [pc, #36]	@ (8002ea0 <HAL_RCC_ClockConfig+0x1c8>)
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	4618      	mov	r0, r3
 8002e80:	f7fe f99c 	bl	80011bc <HAL_InitTick>
 8002e84:	2300      	movs	r3, #0
 8002e86:	4618      	mov	r0, r3
 8002e88:	3710      	adds	r7, #16
 8002e8a:	46bd      	mov	sp, r7
 8002e8c:	bd80      	pop	{r7, pc}
 8002e8e:	bf00      	nop
 8002e90:	40023c00 	.word	0x40023c00
 8002e94:	40023800 	.word	0x40023800
 8002e98:	08004b30 	.word	0x08004b30
 8002e9c:	20000000 	.word	0x20000000
 8002ea0:	20000004 	.word	0x20000004

08002ea4 <HAL_RCC_GetSysClockFreq>:
 8002ea4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002ea8:	b094      	sub	sp, #80	@ 0x50
 8002eaa:	af00      	add	r7, sp, #0
 8002eac:	2300      	movs	r3, #0
 8002eae:	647b      	str	r3, [r7, #68]	@ 0x44
 8002eb0:	2300      	movs	r3, #0
 8002eb2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002eb4:	2300      	movs	r3, #0
 8002eb6:	643b      	str	r3, [r7, #64]	@ 0x40
 8002eb8:	2300      	movs	r3, #0
 8002eba:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002ebc:	4b79      	ldr	r3, [pc, #484]	@ (80030a4 <HAL_RCC_GetSysClockFreq+0x200>)
 8002ebe:	689b      	ldr	r3, [r3, #8]
 8002ec0:	f003 030c 	and.w	r3, r3, #12
 8002ec4:	2b08      	cmp	r3, #8
 8002ec6:	d00d      	beq.n	8002ee4 <HAL_RCC_GetSysClockFreq+0x40>
 8002ec8:	2b08      	cmp	r3, #8
 8002eca:	f200 80e1 	bhi.w	8003090 <HAL_RCC_GetSysClockFreq+0x1ec>
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d002      	beq.n	8002ed8 <HAL_RCC_GetSysClockFreq+0x34>
 8002ed2:	2b04      	cmp	r3, #4
 8002ed4:	d003      	beq.n	8002ede <HAL_RCC_GetSysClockFreq+0x3a>
 8002ed6:	e0db      	b.n	8003090 <HAL_RCC_GetSysClockFreq+0x1ec>
 8002ed8:	4b73      	ldr	r3, [pc, #460]	@ (80030a8 <HAL_RCC_GetSysClockFreq+0x204>)
 8002eda:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002edc:	e0db      	b.n	8003096 <HAL_RCC_GetSysClockFreq+0x1f2>
 8002ede:	4b73      	ldr	r3, [pc, #460]	@ (80030ac <HAL_RCC_GetSysClockFreq+0x208>)
 8002ee0:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002ee2:	e0d8      	b.n	8003096 <HAL_RCC_GetSysClockFreq+0x1f2>
 8002ee4:	4b6f      	ldr	r3, [pc, #444]	@ (80030a4 <HAL_RCC_GetSysClockFreq+0x200>)
 8002ee6:	685b      	ldr	r3, [r3, #4]
 8002ee8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002eec:	647b      	str	r3, [r7, #68]	@ 0x44
 8002eee:	4b6d      	ldr	r3, [pc, #436]	@ (80030a4 <HAL_RCC_GetSysClockFreq+0x200>)
 8002ef0:	685b      	ldr	r3, [r3, #4]
 8002ef2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	d063      	beq.n	8002fc2 <HAL_RCC_GetSysClockFreq+0x11e>
 8002efa:	4b6a      	ldr	r3, [pc, #424]	@ (80030a4 <HAL_RCC_GetSysClockFreq+0x200>)
 8002efc:	685b      	ldr	r3, [r3, #4]
 8002efe:	099b      	lsrs	r3, r3, #6
 8002f00:	2200      	movs	r2, #0
 8002f02:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002f04:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8002f06:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002f08:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002f0c:	633b      	str	r3, [r7, #48]	@ 0x30
 8002f0e:	2300      	movs	r3, #0
 8002f10:	637b      	str	r3, [r7, #52]	@ 0x34
 8002f12:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8002f16:	4622      	mov	r2, r4
 8002f18:	462b      	mov	r3, r5
 8002f1a:	f04f 0000 	mov.w	r0, #0
 8002f1e:	f04f 0100 	mov.w	r1, #0
 8002f22:	0159      	lsls	r1, r3, #5
 8002f24:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002f28:	0150      	lsls	r0, r2, #5
 8002f2a:	4602      	mov	r2, r0
 8002f2c:	460b      	mov	r3, r1
 8002f2e:	4621      	mov	r1, r4
 8002f30:	1a51      	subs	r1, r2, r1
 8002f32:	6139      	str	r1, [r7, #16]
 8002f34:	4629      	mov	r1, r5
 8002f36:	eb63 0301 	sbc.w	r3, r3, r1
 8002f3a:	617b      	str	r3, [r7, #20]
 8002f3c:	f04f 0200 	mov.w	r2, #0
 8002f40:	f04f 0300 	mov.w	r3, #0
 8002f44:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8002f48:	4659      	mov	r1, fp
 8002f4a:	018b      	lsls	r3, r1, #6
 8002f4c:	4651      	mov	r1, sl
 8002f4e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002f52:	4651      	mov	r1, sl
 8002f54:	018a      	lsls	r2, r1, #6
 8002f56:	4651      	mov	r1, sl
 8002f58:	ebb2 0801 	subs.w	r8, r2, r1
 8002f5c:	4659      	mov	r1, fp
 8002f5e:	eb63 0901 	sbc.w	r9, r3, r1
 8002f62:	f04f 0200 	mov.w	r2, #0
 8002f66:	f04f 0300 	mov.w	r3, #0
 8002f6a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002f6e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002f72:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002f76:	4690      	mov	r8, r2
 8002f78:	4699      	mov	r9, r3
 8002f7a:	4623      	mov	r3, r4
 8002f7c:	eb18 0303 	adds.w	r3, r8, r3
 8002f80:	60bb      	str	r3, [r7, #8]
 8002f82:	462b      	mov	r3, r5
 8002f84:	eb49 0303 	adc.w	r3, r9, r3
 8002f88:	60fb      	str	r3, [r7, #12]
 8002f8a:	f04f 0200 	mov.w	r2, #0
 8002f8e:	f04f 0300 	mov.w	r3, #0
 8002f92:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8002f96:	4629      	mov	r1, r5
 8002f98:	024b      	lsls	r3, r1, #9
 8002f9a:	4621      	mov	r1, r4
 8002f9c:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8002fa0:	4621      	mov	r1, r4
 8002fa2:	024a      	lsls	r2, r1, #9
 8002fa4:	4610      	mov	r0, r2
 8002fa6:	4619      	mov	r1, r3
 8002fa8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002faa:	2200      	movs	r2, #0
 8002fac:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002fae:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8002fb0:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8002fb4:	f7fd f96c 	bl	8000290 <__aeabi_uldivmod>
 8002fb8:	4602      	mov	r2, r0
 8002fba:	460b      	mov	r3, r1
 8002fbc:	4613      	mov	r3, r2
 8002fbe:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002fc0:	e058      	b.n	8003074 <HAL_RCC_GetSysClockFreq+0x1d0>
 8002fc2:	4b38      	ldr	r3, [pc, #224]	@ (80030a4 <HAL_RCC_GetSysClockFreq+0x200>)
 8002fc4:	685b      	ldr	r3, [r3, #4]
 8002fc6:	099b      	lsrs	r3, r3, #6
 8002fc8:	2200      	movs	r2, #0
 8002fca:	4618      	mov	r0, r3
 8002fcc:	4611      	mov	r1, r2
 8002fce:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8002fd2:	623b      	str	r3, [r7, #32]
 8002fd4:	2300      	movs	r3, #0
 8002fd6:	627b      	str	r3, [r7, #36]	@ 0x24
 8002fd8:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002fdc:	4642      	mov	r2, r8
 8002fde:	464b      	mov	r3, r9
 8002fe0:	f04f 0000 	mov.w	r0, #0
 8002fe4:	f04f 0100 	mov.w	r1, #0
 8002fe8:	0159      	lsls	r1, r3, #5
 8002fea:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002fee:	0150      	lsls	r0, r2, #5
 8002ff0:	4602      	mov	r2, r0
 8002ff2:	460b      	mov	r3, r1
 8002ff4:	4641      	mov	r1, r8
 8002ff6:	ebb2 0a01 	subs.w	sl, r2, r1
 8002ffa:	4649      	mov	r1, r9
 8002ffc:	eb63 0b01 	sbc.w	fp, r3, r1
 8003000:	f04f 0200 	mov.w	r2, #0
 8003004:	f04f 0300 	mov.w	r3, #0
 8003008:	ea4f 138b 	mov.w	r3, fp, lsl #6
 800300c:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003010:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003014:	ebb2 040a 	subs.w	r4, r2, sl
 8003018:	eb63 050b 	sbc.w	r5, r3, fp
 800301c:	f04f 0200 	mov.w	r2, #0
 8003020:	f04f 0300 	mov.w	r3, #0
 8003024:	00eb      	lsls	r3, r5, #3
 8003026:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800302a:	00e2      	lsls	r2, r4, #3
 800302c:	4614      	mov	r4, r2
 800302e:	461d      	mov	r5, r3
 8003030:	4643      	mov	r3, r8
 8003032:	18e3      	adds	r3, r4, r3
 8003034:	603b      	str	r3, [r7, #0]
 8003036:	464b      	mov	r3, r9
 8003038:	eb45 0303 	adc.w	r3, r5, r3
 800303c:	607b      	str	r3, [r7, #4]
 800303e:	f04f 0200 	mov.w	r2, #0
 8003042:	f04f 0300 	mov.w	r3, #0
 8003046:	e9d7 4500 	ldrd	r4, r5, [r7]
 800304a:	4629      	mov	r1, r5
 800304c:	028b      	lsls	r3, r1, #10
 800304e:	4621      	mov	r1, r4
 8003050:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003054:	4621      	mov	r1, r4
 8003056:	028a      	lsls	r2, r1, #10
 8003058:	4610      	mov	r0, r2
 800305a:	4619      	mov	r1, r3
 800305c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800305e:	2200      	movs	r2, #0
 8003060:	61bb      	str	r3, [r7, #24]
 8003062:	61fa      	str	r2, [r7, #28]
 8003064:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003068:	f7fd f912 	bl	8000290 <__aeabi_uldivmod>
 800306c:	4602      	mov	r2, r0
 800306e:	460b      	mov	r3, r1
 8003070:	4613      	mov	r3, r2
 8003072:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003074:	4b0b      	ldr	r3, [pc, #44]	@ (80030a4 <HAL_RCC_GetSysClockFreq+0x200>)
 8003076:	685b      	ldr	r3, [r3, #4]
 8003078:	0c1b      	lsrs	r3, r3, #16
 800307a:	f003 0303 	and.w	r3, r3, #3
 800307e:	3301      	adds	r3, #1
 8003080:	005b      	lsls	r3, r3, #1
 8003082:	643b      	str	r3, [r7, #64]	@ 0x40
 8003084:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003086:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8003088:	fbb2 f3f3 	udiv	r3, r2, r3
 800308c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800308e:	e002      	b.n	8003096 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003090:	4b05      	ldr	r3, [pc, #20]	@ (80030a8 <HAL_RCC_GetSysClockFreq+0x204>)
 8003092:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003094:	bf00      	nop
 8003096:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003098:	4618      	mov	r0, r3
 800309a:	3750      	adds	r7, #80	@ 0x50
 800309c:	46bd      	mov	sp, r7
 800309e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80030a2:	bf00      	nop
 80030a4:	40023800 	.word	0x40023800
 80030a8:	00f42400 	.word	0x00f42400
 80030ac:	007a1200 	.word	0x007a1200

080030b0 <HAL_RCC_GetHCLKFreq>:
 80030b0:	b480      	push	{r7}
 80030b2:	af00      	add	r7, sp, #0
 80030b4:	4b03      	ldr	r3, [pc, #12]	@ (80030c4 <HAL_RCC_GetHCLKFreq+0x14>)
 80030b6:	681b      	ldr	r3, [r3, #0]
 80030b8:	4618      	mov	r0, r3
 80030ba:	46bd      	mov	sp, r7
 80030bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c0:	4770      	bx	lr
 80030c2:	bf00      	nop
 80030c4:	20000000 	.word	0x20000000

080030c8 <HAL_RCC_GetPCLK1Freq>:
 80030c8:	b580      	push	{r7, lr}
 80030ca:	af00      	add	r7, sp, #0
 80030cc:	f7ff fff0 	bl	80030b0 <HAL_RCC_GetHCLKFreq>
 80030d0:	4602      	mov	r2, r0
 80030d2:	4b05      	ldr	r3, [pc, #20]	@ (80030e8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80030d4:	689b      	ldr	r3, [r3, #8]
 80030d6:	0a9b      	lsrs	r3, r3, #10
 80030d8:	f003 0307 	and.w	r3, r3, #7
 80030dc:	4903      	ldr	r1, [pc, #12]	@ (80030ec <HAL_RCC_GetPCLK1Freq+0x24>)
 80030de:	5ccb      	ldrb	r3, [r1, r3]
 80030e0:	fa22 f303 	lsr.w	r3, r2, r3
 80030e4:	4618      	mov	r0, r3
 80030e6:	bd80      	pop	{r7, pc}
 80030e8:	40023800 	.word	0x40023800
 80030ec:	08004b40 	.word	0x08004b40

080030f0 <HAL_RCC_GetPCLK2Freq>:
 80030f0:	b580      	push	{r7, lr}
 80030f2:	af00      	add	r7, sp, #0
 80030f4:	f7ff ffdc 	bl	80030b0 <HAL_RCC_GetHCLKFreq>
 80030f8:	4602      	mov	r2, r0
 80030fa:	4b05      	ldr	r3, [pc, #20]	@ (8003110 <HAL_RCC_GetPCLK2Freq+0x20>)
 80030fc:	689b      	ldr	r3, [r3, #8]
 80030fe:	0b5b      	lsrs	r3, r3, #13
 8003100:	f003 0307 	and.w	r3, r3, #7
 8003104:	4903      	ldr	r1, [pc, #12]	@ (8003114 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003106:	5ccb      	ldrb	r3, [r1, r3]
 8003108:	fa22 f303 	lsr.w	r3, r2, r3
 800310c:	4618      	mov	r0, r3
 800310e:	bd80      	pop	{r7, pc}
 8003110:	40023800 	.word	0x40023800
 8003114:	08004b40 	.word	0x08004b40

08003118 <HAL_TIM_Base_Init>:
 8003118:	b580      	push	{r7, lr}
 800311a:	b082      	sub	sp, #8
 800311c:	af00      	add	r7, sp, #0
 800311e:	6078      	str	r0, [r7, #4]
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	2b00      	cmp	r3, #0
 8003124:	d101      	bne.n	800312a <HAL_TIM_Base_Init+0x12>
 8003126:	2301      	movs	r3, #1
 8003128:	e041      	b.n	80031ae <HAL_TIM_Base_Init+0x96>
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003130:	b2db      	uxtb	r3, r3
 8003132:	2b00      	cmp	r3, #0
 8003134:	d106      	bne.n	8003144 <HAL_TIM_Base_Init+0x2c>
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2200      	movs	r2, #0
 800313a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800313e:	6878      	ldr	r0, [r7, #4]
 8003140:	f7fd fec6 	bl	8000ed0 <HAL_TIM_Base_MspInit>
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	2202      	movs	r2, #2
 8003148:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	681a      	ldr	r2, [r3, #0]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	3304      	adds	r3, #4
 8003154:	4619      	mov	r1, r3
 8003156:	4610      	mov	r0, r2
 8003158:	f000 fa7a 	bl	8003650 <TIM_Base_SetConfig>
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	2201      	movs	r2, #1
 8003160:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	2201      	movs	r2, #1
 8003168:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	2201      	movs	r2, #1
 8003170:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	2201      	movs	r2, #1
 8003178:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	2201      	movs	r2, #1
 8003180:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	2201      	movs	r2, #1
 8003188:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	2201      	movs	r2, #1
 8003190:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	2201      	movs	r2, #1
 8003198:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	2201      	movs	r2, #1
 80031a0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	2201      	movs	r2, #1
 80031a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80031ac:	2300      	movs	r3, #0
 80031ae:	4618      	mov	r0, r3
 80031b0:	3708      	adds	r7, #8
 80031b2:	46bd      	mov	sp, r7
 80031b4:	bd80      	pop	{r7, pc}
	...

080031b8 <HAL_TIM_Base_Start_IT>:
 80031b8:	b480      	push	{r7}
 80031ba:	b085      	sub	sp, #20
 80031bc:	af00      	add	r7, sp, #0
 80031be:	6078      	str	r0, [r7, #4]
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80031c6:	b2db      	uxtb	r3, r3
 80031c8:	2b01      	cmp	r3, #1
 80031ca:	d001      	beq.n	80031d0 <HAL_TIM_Base_Start_IT+0x18>
 80031cc:	2301      	movs	r3, #1
 80031ce:	e044      	b.n	800325a <HAL_TIM_Base_Start_IT+0xa2>
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	2202      	movs	r2, #2
 80031d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	68da      	ldr	r2, [r3, #12]
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	f042 0201 	orr.w	r2, r2, #1
 80031e6:	60da      	str	r2, [r3, #12]
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	681b      	ldr	r3, [r3, #0]
 80031ec:	4a1e      	ldr	r2, [pc, #120]	@ (8003268 <HAL_TIM_Base_Start_IT+0xb0>)
 80031ee:	4293      	cmp	r3, r2
 80031f0:	d018      	beq.n	8003224 <HAL_TIM_Base_Start_IT+0x6c>
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	681b      	ldr	r3, [r3, #0]
 80031f6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80031fa:	d013      	beq.n	8003224 <HAL_TIM_Base_Start_IT+0x6c>
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	4a1a      	ldr	r2, [pc, #104]	@ (800326c <HAL_TIM_Base_Start_IT+0xb4>)
 8003202:	4293      	cmp	r3, r2
 8003204:	d00e      	beq.n	8003224 <HAL_TIM_Base_Start_IT+0x6c>
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	4a19      	ldr	r2, [pc, #100]	@ (8003270 <HAL_TIM_Base_Start_IT+0xb8>)
 800320c:	4293      	cmp	r3, r2
 800320e:	d009      	beq.n	8003224 <HAL_TIM_Base_Start_IT+0x6c>
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	4a17      	ldr	r2, [pc, #92]	@ (8003274 <HAL_TIM_Base_Start_IT+0xbc>)
 8003216:	4293      	cmp	r3, r2
 8003218:	d004      	beq.n	8003224 <HAL_TIM_Base_Start_IT+0x6c>
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	4a16      	ldr	r2, [pc, #88]	@ (8003278 <HAL_TIM_Base_Start_IT+0xc0>)
 8003220:	4293      	cmp	r3, r2
 8003222:	d111      	bne.n	8003248 <HAL_TIM_Base_Start_IT+0x90>
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	689b      	ldr	r3, [r3, #8]
 800322a:	f003 0307 	and.w	r3, r3, #7
 800322e:	60fb      	str	r3, [r7, #12]
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	2b06      	cmp	r3, #6
 8003234:	d010      	beq.n	8003258 <HAL_TIM_Base_Start_IT+0xa0>
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	681a      	ldr	r2, [r3, #0]
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	681b      	ldr	r3, [r3, #0]
 8003240:	f042 0201 	orr.w	r2, r2, #1
 8003244:	601a      	str	r2, [r3, #0]
 8003246:	e007      	b.n	8003258 <HAL_TIM_Base_Start_IT+0xa0>
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	681a      	ldr	r2, [r3, #0]
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	f042 0201 	orr.w	r2, r2, #1
 8003256:	601a      	str	r2, [r3, #0]
 8003258:	2300      	movs	r3, #0
 800325a:	4618      	mov	r0, r3
 800325c:	3714      	adds	r7, #20
 800325e:	46bd      	mov	sp, r7
 8003260:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003264:	4770      	bx	lr
 8003266:	bf00      	nop
 8003268:	40010000 	.word	0x40010000
 800326c:	40000400 	.word	0x40000400
 8003270:	40000800 	.word	0x40000800
 8003274:	40000c00 	.word	0x40000c00
 8003278:	40014000 	.word	0x40014000

0800327c <HAL_TIM_IRQHandler>:
 800327c:	b580      	push	{r7, lr}
 800327e:	b084      	sub	sp, #16
 8003280:	af00      	add	r7, sp, #0
 8003282:	6078      	str	r0, [r7, #4]
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	68db      	ldr	r3, [r3, #12]
 800328a:	60fb      	str	r3, [r7, #12]
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	691b      	ldr	r3, [r3, #16]
 8003292:	60bb      	str	r3, [r7, #8]
 8003294:	68bb      	ldr	r3, [r7, #8]
 8003296:	f003 0302 	and.w	r3, r3, #2
 800329a:	2b00      	cmp	r3, #0
 800329c:	d020      	beq.n	80032e0 <HAL_TIM_IRQHandler+0x64>
 800329e:	68fb      	ldr	r3, [r7, #12]
 80032a0:	f003 0302 	and.w	r3, r3, #2
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d01b      	beq.n	80032e0 <HAL_TIM_IRQHandler+0x64>
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	f06f 0202 	mvn.w	r2, #2
 80032b0:	611a      	str	r2, [r3, #16]
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	2201      	movs	r2, #1
 80032b6:	771a      	strb	r2, [r3, #28]
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	681b      	ldr	r3, [r3, #0]
 80032bc:	699b      	ldr	r3, [r3, #24]
 80032be:	f003 0303 	and.w	r3, r3, #3
 80032c2:	2b00      	cmp	r3, #0
 80032c4:	d003      	beq.n	80032ce <HAL_TIM_IRQHandler+0x52>
 80032c6:	6878      	ldr	r0, [r7, #4]
 80032c8:	f000 f9a3 	bl	8003612 <HAL_TIM_IC_CaptureCallback>
 80032cc:	e005      	b.n	80032da <HAL_TIM_IRQHandler+0x5e>
 80032ce:	6878      	ldr	r0, [r7, #4]
 80032d0:	f000 f995 	bl	80035fe <HAL_TIM_OC_DelayElapsedCallback>
 80032d4:	6878      	ldr	r0, [r7, #4]
 80032d6:	f000 f9a6 	bl	8003626 <HAL_TIM_PWM_PulseFinishedCallback>
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	2200      	movs	r2, #0
 80032de:	771a      	strb	r2, [r3, #28]
 80032e0:	68bb      	ldr	r3, [r7, #8]
 80032e2:	f003 0304 	and.w	r3, r3, #4
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d020      	beq.n	800332c <HAL_TIM_IRQHandler+0xb0>
 80032ea:	68fb      	ldr	r3, [r7, #12]
 80032ec:	f003 0304 	and.w	r3, r3, #4
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	d01b      	beq.n	800332c <HAL_TIM_IRQHandler+0xb0>
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	681b      	ldr	r3, [r3, #0]
 80032f8:	f06f 0204 	mvn.w	r2, #4
 80032fc:	611a      	str	r2, [r3, #16]
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	2202      	movs	r2, #2
 8003302:	771a      	strb	r2, [r3, #28]
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	699b      	ldr	r3, [r3, #24]
 800330a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800330e:	2b00      	cmp	r3, #0
 8003310:	d003      	beq.n	800331a <HAL_TIM_IRQHandler+0x9e>
 8003312:	6878      	ldr	r0, [r7, #4]
 8003314:	f000 f97d 	bl	8003612 <HAL_TIM_IC_CaptureCallback>
 8003318:	e005      	b.n	8003326 <HAL_TIM_IRQHandler+0xaa>
 800331a:	6878      	ldr	r0, [r7, #4]
 800331c:	f000 f96f 	bl	80035fe <HAL_TIM_OC_DelayElapsedCallback>
 8003320:	6878      	ldr	r0, [r7, #4]
 8003322:	f000 f980 	bl	8003626 <HAL_TIM_PWM_PulseFinishedCallback>
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	2200      	movs	r2, #0
 800332a:	771a      	strb	r2, [r3, #28]
 800332c:	68bb      	ldr	r3, [r7, #8]
 800332e:	f003 0308 	and.w	r3, r3, #8
 8003332:	2b00      	cmp	r3, #0
 8003334:	d020      	beq.n	8003378 <HAL_TIM_IRQHandler+0xfc>
 8003336:	68fb      	ldr	r3, [r7, #12]
 8003338:	f003 0308 	and.w	r3, r3, #8
 800333c:	2b00      	cmp	r3, #0
 800333e:	d01b      	beq.n	8003378 <HAL_TIM_IRQHandler+0xfc>
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	f06f 0208 	mvn.w	r2, #8
 8003348:	611a      	str	r2, [r3, #16]
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	2204      	movs	r2, #4
 800334e:	771a      	strb	r2, [r3, #28]
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	69db      	ldr	r3, [r3, #28]
 8003356:	f003 0303 	and.w	r3, r3, #3
 800335a:	2b00      	cmp	r3, #0
 800335c:	d003      	beq.n	8003366 <HAL_TIM_IRQHandler+0xea>
 800335e:	6878      	ldr	r0, [r7, #4]
 8003360:	f000 f957 	bl	8003612 <HAL_TIM_IC_CaptureCallback>
 8003364:	e005      	b.n	8003372 <HAL_TIM_IRQHandler+0xf6>
 8003366:	6878      	ldr	r0, [r7, #4]
 8003368:	f000 f949 	bl	80035fe <HAL_TIM_OC_DelayElapsedCallback>
 800336c:	6878      	ldr	r0, [r7, #4]
 800336e:	f000 f95a 	bl	8003626 <HAL_TIM_PWM_PulseFinishedCallback>
 8003372:	687b      	ldr	r3, [r7, #4]
 8003374:	2200      	movs	r2, #0
 8003376:	771a      	strb	r2, [r3, #28]
 8003378:	68bb      	ldr	r3, [r7, #8]
 800337a:	f003 0310 	and.w	r3, r3, #16
 800337e:	2b00      	cmp	r3, #0
 8003380:	d020      	beq.n	80033c4 <HAL_TIM_IRQHandler+0x148>
 8003382:	68fb      	ldr	r3, [r7, #12]
 8003384:	f003 0310 	and.w	r3, r3, #16
 8003388:	2b00      	cmp	r3, #0
 800338a:	d01b      	beq.n	80033c4 <HAL_TIM_IRQHandler+0x148>
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	f06f 0210 	mvn.w	r2, #16
 8003394:	611a      	str	r2, [r3, #16]
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	2208      	movs	r2, #8
 800339a:	771a      	strb	r2, [r3, #28]
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	69db      	ldr	r3, [r3, #28]
 80033a2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80033a6:	2b00      	cmp	r3, #0
 80033a8:	d003      	beq.n	80033b2 <HAL_TIM_IRQHandler+0x136>
 80033aa:	6878      	ldr	r0, [r7, #4]
 80033ac:	f000 f931 	bl	8003612 <HAL_TIM_IC_CaptureCallback>
 80033b0:	e005      	b.n	80033be <HAL_TIM_IRQHandler+0x142>
 80033b2:	6878      	ldr	r0, [r7, #4]
 80033b4:	f000 f923 	bl	80035fe <HAL_TIM_OC_DelayElapsedCallback>
 80033b8:	6878      	ldr	r0, [r7, #4]
 80033ba:	f000 f934 	bl	8003626 <HAL_TIM_PWM_PulseFinishedCallback>
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	2200      	movs	r2, #0
 80033c2:	771a      	strb	r2, [r3, #28]
 80033c4:	68bb      	ldr	r3, [r7, #8]
 80033c6:	f003 0301 	and.w	r3, r3, #1
 80033ca:	2b00      	cmp	r3, #0
 80033cc:	d00c      	beq.n	80033e8 <HAL_TIM_IRQHandler+0x16c>
 80033ce:	68fb      	ldr	r3, [r7, #12]
 80033d0:	f003 0301 	and.w	r3, r3, #1
 80033d4:	2b00      	cmp	r3, #0
 80033d6:	d007      	beq.n	80033e8 <HAL_TIM_IRQHandler+0x16c>
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	f06f 0201 	mvn.w	r2, #1
 80033e0:	611a      	str	r2, [r3, #16]
 80033e2:	6878      	ldr	r0, [r7, #4]
 80033e4:	f000 f901 	bl	80035ea <HAL_TIM_PeriodElapsedCallback>
 80033e8:	68bb      	ldr	r3, [r7, #8]
 80033ea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80033ee:	2b00      	cmp	r3, #0
 80033f0:	d00c      	beq.n	800340c <HAL_TIM_IRQHandler+0x190>
 80033f2:	68fb      	ldr	r3, [r7, #12]
 80033f4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80033f8:	2b00      	cmp	r3, #0
 80033fa:	d007      	beq.n	800340c <HAL_TIM_IRQHandler+0x190>
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8003404:	611a      	str	r2, [r3, #16]
 8003406:	6878      	ldr	r0, [r7, #4]
 8003408:	f000 fac0 	bl	800398c <HAL_TIMEx_BreakCallback>
 800340c:	68bb      	ldr	r3, [r7, #8]
 800340e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003412:	2b00      	cmp	r3, #0
 8003414:	d00c      	beq.n	8003430 <HAL_TIM_IRQHandler+0x1b4>
 8003416:	68fb      	ldr	r3, [r7, #12]
 8003418:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800341c:	2b00      	cmp	r3, #0
 800341e:	d007      	beq.n	8003430 <HAL_TIM_IRQHandler+0x1b4>
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8003428:	611a      	str	r2, [r3, #16]
 800342a:	6878      	ldr	r0, [r7, #4]
 800342c:	f000 f905 	bl	800363a <HAL_TIM_TriggerCallback>
 8003430:	68bb      	ldr	r3, [r7, #8]
 8003432:	f003 0320 	and.w	r3, r3, #32
 8003436:	2b00      	cmp	r3, #0
 8003438:	d00c      	beq.n	8003454 <HAL_TIM_IRQHandler+0x1d8>
 800343a:	68fb      	ldr	r3, [r7, #12]
 800343c:	f003 0320 	and.w	r3, r3, #32
 8003440:	2b00      	cmp	r3, #0
 8003442:	d007      	beq.n	8003454 <HAL_TIM_IRQHandler+0x1d8>
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	f06f 0220 	mvn.w	r2, #32
 800344c:	611a      	str	r2, [r3, #16]
 800344e:	6878      	ldr	r0, [r7, #4]
 8003450:	f000 fa92 	bl	8003978 <HAL_TIMEx_CommutCallback>
 8003454:	bf00      	nop
 8003456:	3710      	adds	r7, #16
 8003458:	46bd      	mov	sp, r7
 800345a:	bd80      	pop	{r7, pc}

0800345c <HAL_TIM_ConfigClockSource>:
 800345c:	b580      	push	{r7, lr}
 800345e:	b084      	sub	sp, #16
 8003460:	af00      	add	r7, sp, #0
 8003462:	6078      	str	r0, [r7, #4]
 8003464:	6039      	str	r1, [r7, #0]
 8003466:	2300      	movs	r3, #0
 8003468:	73fb      	strb	r3, [r7, #15]
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003470:	2b01      	cmp	r3, #1
 8003472:	d101      	bne.n	8003478 <HAL_TIM_ConfigClockSource+0x1c>
 8003474:	2302      	movs	r3, #2
 8003476:	e0b4      	b.n	80035e2 <HAL_TIM_ConfigClockSource+0x186>
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	2201      	movs	r2, #1
 800347c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	2202      	movs	r2, #2
 8003484:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	689b      	ldr	r3, [r3, #8]
 800348e:	60bb      	str	r3, [r7, #8]
 8003490:	68bb      	ldr	r3, [r7, #8]
 8003492:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8003496:	60bb      	str	r3, [r7, #8]
 8003498:	68bb      	ldr	r3, [r7, #8]
 800349a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800349e:	60bb      	str	r3, [r7, #8]
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	681b      	ldr	r3, [r3, #0]
 80034a4:	68ba      	ldr	r2, [r7, #8]
 80034a6:	609a      	str	r2, [r3, #8]
 80034a8:	683b      	ldr	r3, [r7, #0]
 80034aa:	681b      	ldr	r3, [r3, #0]
 80034ac:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80034b0:	d03e      	beq.n	8003530 <HAL_TIM_ConfigClockSource+0xd4>
 80034b2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80034b6:	f200 8087 	bhi.w	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 80034ba:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80034be:	f000 8086 	beq.w	80035ce <HAL_TIM_ConfigClockSource+0x172>
 80034c2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80034c6:	d87f      	bhi.n	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 80034c8:	2b70      	cmp	r3, #112	@ 0x70
 80034ca:	d01a      	beq.n	8003502 <HAL_TIM_ConfigClockSource+0xa6>
 80034cc:	2b70      	cmp	r3, #112	@ 0x70
 80034ce:	d87b      	bhi.n	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 80034d0:	2b60      	cmp	r3, #96	@ 0x60
 80034d2:	d050      	beq.n	8003576 <HAL_TIM_ConfigClockSource+0x11a>
 80034d4:	2b60      	cmp	r3, #96	@ 0x60
 80034d6:	d877      	bhi.n	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 80034d8:	2b50      	cmp	r3, #80	@ 0x50
 80034da:	d03c      	beq.n	8003556 <HAL_TIM_ConfigClockSource+0xfa>
 80034dc:	2b50      	cmp	r3, #80	@ 0x50
 80034de:	d873      	bhi.n	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 80034e0:	2b40      	cmp	r3, #64	@ 0x40
 80034e2:	d058      	beq.n	8003596 <HAL_TIM_ConfigClockSource+0x13a>
 80034e4:	2b40      	cmp	r3, #64	@ 0x40
 80034e6:	d86f      	bhi.n	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 80034e8:	2b30      	cmp	r3, #48	@ 0x30
 80034ea:	d064      	beq.n	80035b6 <HAL_TIM_ConfigClockSource+0x15a>
 80034ec:	2b30      	cmp	r3, #48	@ 0x30
 80034ee:	d86b      	bhi.n	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 80034f0:	2b20      	cmp	r3, #32
 80034f2:	d060      	beq.n	80035b6 <HAL_TIM_ConfigClockSource+0x15a>
 80034f4:	2b20      	cmp	r3, #32
 80034f6:	d867      	bhi.n	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 80034f8:	2b00      	cmp	r3, #0
 80034fa:	d05c      	beq.n	80035b6 <HAL_TIM_ConfigClockSource+0x15a>
 80034fc:	2b10      	cmp	r3, #16
 80034fe:	d05a      	beq.n	80035b6 <HAL_TIM_ConfigClockSource+0x15a>
 8003500:	e062      	b.n	80035c8 <HAL_TIM_ConfigClockSource+0x16c>
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	6818      	ldr	r0, [r3, #0]
 8003506:	683b      	ldr	r3, [r7, #0]
 8003508:	6899      	ldr	r1, [r3, #8]
 800350a:	683b      	ldr	r3, [r7, #0]
 800350c:	685a      	ldr	r2, [r3, #4]
 800350e:	683b      	ldr	r3, [r7, #0]
 8003510:	68db      	ldr	r3, [r3, #12]
 8003512:	f000 f9a3 	bl	800385c <TIM_ETR_SetConfig>
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	689b      	ldr	r3, [r3, #8]
 800351c:	60bb      	str	r3, [r7, #8]
 800351e:	68bb      	ldr	r3, [r7, #8]
 8003520:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8003524:	60bb      	str	r3, [r7, #8]
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	68ba      	ldr	r2, [r7, #8]
 800352c:	609a      	str	r2, [r3, #8]
 800352e:	e04f      	b.n	80035d0 <HAL_TIM_ConfigClockSource+0x174>
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	6818      	ldr	r0, [r3, #0]
 8003534:	683b      	ldr	r3, [r7, #0]
 8003536:	6899      	ldr	r1, [r3, #8]
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	685a      	ldr	r2, [r3, #4]
 800353c:	683b      	ldr	r3, [r7, #0]
 800353e:	68db      	ldr	r3, [r3, #12]
 8003540:	f000 f98c 	bl	800385c <TIM_ETR_SetConfig>
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	689a      	ldr	r2, [r3, #8]
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	681b      	ldr	r3, [r3, #0]
 800354e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8003552:	609a      	str	r2, [r3, #8]
 8003554:	e03c      	b.n	80035d0 <HAL_TIM_ConfigClockSource+0x174>
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	6818      	ldr	r0, [r3, #0]
 800355a:	683b      	ldr	r3, [r7, #0]
 800355c:	6859      	ldr	r1, [r3, #4]
 800355e:	683b      	ldr	r3, [r7, #0]
 8003560:	68db      	ldr	r3, [r3, #12]
 8003562:	461a      	mov	r2, r3
 8003564:	f000 f900 	bl	8003768 <TIM_TI1_ConfigInputStage>
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	2150      	movs	r1, #80	@ 0x50
 800356e:	4618      	mov	r0, r3
 8003570:	f000 f959 	bl	8003826 <TIM_ITRx_SetConfig>
 8003574:	e02c      	b.n	80035d0 <HAL_TIM_ConfigClockSource+0x174>
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	6818      	ldr	r0, [r3, #0]
 800357a:	683b      	ldr	r3, [r7, #0]
 800357c:	6859      	ldr	r1, [r3, #4]
 800357e:	683b      	ldr	r3, [r7, #0]
 8003580:	68db      	ldr	r3, [r3, #12]
 8003582:	461a      	mov	r2, r3
 8003584:	f000 f91f 	bl	80037c6 <TIM_TI2_ConfigInputStage>
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	2160      	movs	r1, #96	@ 0x60
 800358e:	4618      	mov	r0, r3
 8003590:	f000 f949 	bl	8003826 <TIM_ITRx_SetConfig>
 8003594:	e01c      	b.n	80035d0 <HAL_TIM_ConfigClockSource+0x174>
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	6818      	ldr	r0, [r3, #0]
 800359a:	683b      	ldr	r3, [r7, #0]
 800359c:	6859      	ldr	r1, [r3, #4]
 800359e:	683b      	ldr	r3, [r7, #0]
 80035a0:	68db      	ldr	r3, [r3, #12]
 80035a2:	461a      	mov	r2, r3
 80035a4:	f000 f8e0 	bl	8003768 <TIM_TI1_ConfigInputStage>
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	2140      	movs	r1, #64	@ 0x40
 80035ae:	4618      	mov	r0, r3
 80035b0:	f000 f939 	bl	8003826 <TIM_ITRx_SetConfig>
 80035b4:	e00c      	b.n	80035d0 <HAL_TIM_ConfigClockSource+0x174>
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	681a      	ldr	r2, [r3, #0]
 80035ba:	683b      	ldr	r3, [r7, #0]
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	4619      	mov	r1, r3
 80035c0:	4610      	mov	r0, r2
 80035c2:	f000 f930 	bl	8003826 <TIM_ITRx_SetConfig>
 80035c6:	e003      	b.n	80035d0 <HAL_TIM_ConfigClockSource+0x174>
 80035c8:	2301      	movs	r3, #1
 80035ca:	73fb      	strb	r3, [r7, #15]
 80035cc:	e000      	b.n	80035d0 <HAL_TIM_ConfigClockSource+0x174>
 80035ce:	bf00      	nop
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	2201      	movs	r2, #1
 80035d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	2200      	movs	r2, #0
 80035dc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80035e0:	7bfb      	ldrb	r3, [r7, #15]
 80035e2:	4618      	mov	r0, r3
 80035e4:	3710      	adds	r7, #16
 80035e6:	46bd      	mov	sp, r7
 80035e8:	bd80      	pop	{r7, pc}

080035ea <HAL_TIM_PeriodElapsedCallback>:
 80035ea:	b480      	push	{r7}
 80035ec:	b083      	sub	sp, #12
 80035ee:	af00      	add	r7, sp, #0
 80035f0:	6078      	str	r0, [r7, #4]
 80035f2:	bf00      	nop
 80035f4:	370c      	adds	r7, #12
 80035f6:	46bd      	mov	sp, r7
 80035f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035fc:	4770      	bx	lr

080035fe <HAL_TIM_OC_DelayElapsedCallback>:
 80035fe:	b480      	push	{r7}
 8003600:	b083      	sub	sp, #12
 8003602:	af00      	add	r7, sp, #0
 8003604:	6078      	str	r0, [r7, #4]
 8003606:	bf00      	nop
 8003608:	370c      	adds	r7, #12
 800360a:	46bd      	mov	sp, r7
 800360c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003610:	4770      	bx	lr

08003612 <HAL_TIM_IC_CaptureCallback>:
 8003612:	b480      	push	{r7}
 8003614:	b083      	sub	sp, #12
 8003616:	af00      	add	r7, sp, #0
 8003618:	6078      	str	r0, [r7, #4]
 800361a:	bf00      	nop
 800361c:	370c      	adds	r7, #12
 800361e:	46bd      	mov	sp, r7
 8003620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003624:	4770      	bx	lr

08003626 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003626:	b480      	push	{r7}
 8003628:	b083      	sub	sp, #12
 800362a:	af00      	add	r7, sp, #0
 800362c:	6078      	str	r0, [r7, #4]
 800362e:	bf00      	nop
 8003630:	370c      	adds	r7, #12
 8003632:	46bd      	mov	sp, r7
 8003634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003638:	4770      	bx	lr

0800363a <HAL_TIM_TriggerCallback>:
 800363a:	b480      	push	{r7}
 800363c:	b083      	sub	sp, #12
 800363e:	af00      	add	r7, sp, #0
 8003640:	6078      	str	r0, [r7, #4]
 8003642:	bf00      	nop
 8003644:	370c      	adds	r7, #12
 8003646:	46bd      	mov	sp, r7
 8003648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800364c:	4770      	bx	lr
	...

08003650 <TIM_Base_SetConfig>:
 8003650:	b480      	push	{r7}
 8003652:	b085      	sub	sp, #20
 8003654:	af00      	add	r7, sp, #0
 8003656:	6078      	str	r0, [r7, #4]
 8003658:	6039      	str	r1, [r7, #0]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	60fb      	str	r3, [r7, #12]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	4a3a      	ldr	r2, [pc, #232]	@ (800374c <TIM_Base_SetConfig+0xfc>)
 8003664:	4293      	cmp	r3, r2
 8003666:	d00f      	beq.n	8003688 <TIM_Base_SetConfig+0x38>
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800366e:	d00b      	beq.n	8003688 <TIM_Base_SetConfig+0x38>
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	4a37      	ldr	r2, [pc, #220]	@ (8003750 <TIM_Base_SetConfig+0x100>)
 8003674:	4293      	cmp	r3, r2
 8003676:	d007      	beq.n	8003688 <TIM_Base_SetConfig+0x38>
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	4a36      	ldr	r2, [pc, #216]	@ (8003754 <TIM_Base_SetConfig+0x104>)
 800367c:	4293      	cmp	r3, r2
 800367e:	d003      	beq.n	8003688 <TIM_Base_SetConfig+0x38>
 8003680:	687b      	ldr	r3, [r7, #4]
 8003682:	4a35      	ldr	r2, [pc, #212]	@ (8003758 <TIM_Base_SetConfig+0x108>)
 8003684:	4293      	cmp	r3, r2
 8003686:	d108      	bne.n	800369a <TIM_Base_SetConfig+0x4a>
 8003688:	68fb      	ldr	r3, [r7, #12]
 800368a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800368e:	60fb      	str	r3, [r7, #12]
 8003690:	683b      	ldr	r3, [r7, #0]
 8003692:	685b      	ldr	r3, [r3, #4]
 8003694:	68fa      	ldr	r2, [r7, #12]
 8003696:	4313      	orrs	r3, r2
 8003698:	60fb      	str	r3, [r7, #12]
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	4a2b      	ldr	r2, [pc, #172]	@ (800374c <TIM_Base_SetConfig+0xfc>)
 800369e:	4293      	cmp	r3, r2
 80036a0:	d01b      	beq.n	80036da <TIM_Base_SetConfig+0x8a>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80036a8:	d017      	beq.n	80036da <TIM_Base_SetConfig+0x8a>
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	4a28      	ldr	r2, [pc, #160]	@ (8003750 <TIM_Base_SetConfig+0x100>)
 80036ae:	4293      	cmp	r3, r2
 80036b0:	d013      	beq.n	80036da <TIM_Base_SetConfig+0x8a>
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	4a27      	ldr	r2, [pc, #156]	@ (8003754 <TIM_Base_SetConfig+0x104>)
 80036b6:	4293      	cmp	r3, r2
 80036b8:	d00f      	beq.n	80036da <TIM_Base_SetConfig+0x8a>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	4a26      	ldr	r2, [pc, #152]	@ (8003758 <TIM_Base_SetConfig+0x108>)
 80036be:	4293      	cmp	r3, r2
 80036c0:	d00b      	beq.n	80036da <TIM_Base_SetConfig+0x8a>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	4a25      	ldr	r2, [pc, #148]	@ (800375c <TIM_Base_SetConfig+0x10c>)
 80036c6:	4293      	cmp	r3, r2
 80036c8:	d007      	beq.n	80036da <TIM_Base_SetConfig+0x8a>
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	4a24      	ldr	r2, [pc, #144]	@ (8003760 <TIM_Base_SetConfig+0x110>)
 80036ce:	4293      	cmp	r3, r2
 80036d0:	d003      	beq.n	80036da <TIM_Base_SetConfig+0x8a>
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	4a23      	ldr	r2, [pc, #140]	@ (8003764 <TIM_Base_SetConfig+0x114>)
 80036d6:	4293      	cmp	r3, r2
 80036d8:	d108      	bne.n	80036ec <TIM_Base_SetConfig+0x9c>
 80036da:	68fb      	ldr	r3, [r7, #12]
 80036dc:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80036e0:	60fb      	str	r3, [r7, #12]
 80036e2:	683b      	ldr	r3, [r7, #0]
 80036e4:	68db      	ldr	r3, [r3, #12]
 80036e6:	68fa      	ldr	r2, [r7, #12]
 80036e8:	4313      	orrs	r3, r2
 80036ea:	60fb      	str	r3, [r7, #12]
 80036ec:	68fb      	ldr	r3, [r7, #12]
 80036ee:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80036f2:	683b      	ldr	r3, [r7, #0]
 80036f4:	695b      	ldr	r3, [r3, #20]
 80036f6:	4313      	orrs	r3, r2
 80036f8:	60fb      	str	r3, [r7, #12]
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	68fa      	ldr	r2, [r7, #12]
 80036fe:	601a      	str	r2, [r3, #0]
 8003700:	683b      	ldr	r3, [r7, #0]
 8003702:	689a      	ldr	r2, [r3, #8]
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003708:	683b      	ldr	r3, [r7, #0]
 800370a:	681a      	ldr	r2, [r3, #0]
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	629a      	str	r2, [r3, #40]	@ 0x28
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	4a0e      	ldr	r2, [pc, #56]	@ (800374c <TIM_Base_SetConfig+0xfc>)
 8003714:	4293      	cmp	r3, r2
 8003716:	d103      	bne.n	8003720 <TIM_Base_SetConfig+0xd0>
 8003718:	683b      	ldr	r3, [r7, #0]
 800371a:	691a      	ldr	r2, [r3, #16]
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	2201      	movs	r2, #1
 8003724:	615a      	str	r2, [r3, #20]
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	691b      	ldr	r3, [r3, #16]
 800372a:	f003 0301 	and.w	r3, r3, #1
 800372e:	2b01      	cmp	r3, #1
 8003730:	d105      	bne.n	800373e <TIM_Base_SetConfig+0xee>
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	691b      	ldr	r3, [r3, #16]
 8003736:	f023 0201 	bic.w	r2, r3, #1
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	611a      	str	r2, [r3, #16]
 800373e:	bf00      	nop
 8003740:	3714      	adds	r7, #20
 8003742:	46bd      	mov	sp, r7
 8003744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003748:	4770      	bx	lr
 800374a:	bf00      	nop
 800374c:	40010000 	.word	0x40010000
 8003750:	40000400 	.word	0x40000400
 8003754:	40000800 	.word	0x40000800
 8003758:	40000c00 	.word	0x40000c00
 800375c:	40014000 	.word	0x40014000
 8003760:	40014400 	.word	0x40014400
 8003764:	40014800 	.word	0x40014800

08003768 <TIM_TI1_ConfigInputStage>:
 8003768:	b480      	push	{r7}
 800376a:	b087      	sub	sp, #28
 800376c:	af00      	add	r7, sp, #0
 800376e:	60f8      	str	r0, [r7, #12]
 8003770:	60b9      	str	r1, [r7, #8]
 8003772:	607a      	str	r2, [r7, #4]
 8003774:	68fb      	ldr	r3, [r7, #12]
 8003776:	6a1b      	ldr	r3, [r3, #32]
 8003778:	617b      	str	r3, [r7, #20]
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	6a1b      	ldr	r3, [r3, #32]
 800377e:	f023 0201 	bic.w	r2, r3, #1
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	621a      	str	r2, [r3, #32]
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	699b      	ldr	r3, [r3, #24]
 800378a:	613b      	str	r3, [r7, #16]
 800378c:	693b      	ldr	r3, [r7, #16]
 800378e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8003792:	613b      	str	r3, [r7, #16]
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	011b      	lsls	r3, r3, #4
 8003798:	693a      	ldr	r2, [r7, #16]
 800379a:	4313      	orrs	r3, r2
 800379c:	613b      	str	r3, [r7, #16]
 800379e:	697b      	ldr	r3, [r7, #20]
 80037a0:	f023 030a 	bic.w	r3, r3, #10
 80037a4:	617b      	str	r3, [r7, #20]
 80037a6:	697a      	ldr	r2, [r7, #20]
 80037a8:	68bb      	ldr	r3, [r7, #8]
 80037aa:	4313      	orrs	r3, r2
 80037ac:	617b      	str	r3, [r7, #20]
 80037ae:	68fb      	ldr	r3, [r7, #12]
 80037b0:	693a      	ldr	r2, [r7, #16]
 80037b2:	619a      	str	r2, [r3, #24]
 80037b4:	68fb      	ldr	r3, [r7, #12]
 80037b6:	697a      	ldr	r2, [r7, #20]
 80037b8:	621a      	str	r2, [r3, #32]
 80037ba:	bf00      	nop
 80037bc:	371c      	adds	r7, #28
 80037be:	46bd      	mov	sp, r7
 80037c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c4:	4770      	bx	lr

080037c6 <TIM_TI2_ConfigInputStage>:
 80037c6:	b480      	push	{r7}
 80037c8:	b087      	sub	sp, #28
 80037ca:	af00      	add	r7, sp, #0
 80037cc:	60f8      	str	r0, [r7, #12]
 80037ce:	60b9      	str	r1, [r7, #8]
 80037d0:	607a      	str	r2, [r7, #4]
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	6a1b      	ldr	r3, [r3, #32]
 80037d6:	617b      	str	r3, [r7, #20]
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	6a1b      	ldr	r3, [r3, #32]
 80037dc:	f023 0210 	bic.w	r2, r3, #16
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	621a      	str	r2, [r3, #32]
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	699b      	ldr	r3, [r3, #24]
 80037e8:	613b      	str	r3, [r7, #16]
 80037ea:	693b      	ldr	r3, [r7, #16]
 80037ec:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80037f0:	613b      	str	r3, [r7, #16]
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	031b      	lsls	r3, r3, #12
 80037f6:	693a      	ldr	r2, [r7, #16]
 80037f8:	4313      	orrs	r3, r2
 80037fa:	613b      	str	r3, [r7, #16]
 80037fc:	697b      	ldr	r3, [r7, #20]
 80037fe:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8003802:	617b      	str	r3, [r7, #20]
 8003804:	68bb      	ldr	r3, [r7, #8]
 8003806:	011b      	lsls	r3, r3, #4
 8003808:	697a      	ldr	r2, [r7, #20]
 800380a:	4313      	orrs	r3, r2
 800380c:	617b      	str	r3, [r7, #20]
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	693a      	ldr	r2, [r7, #16]
 8003812:	619a      	str	r2, [r3, #24]
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	697a      	ldr	r2, [r7, #20]
 8003818:	621a      	str	r2, [r3, #32]
 800381a:	bf00      	nop
 800381c:	371c      	adds	r7, #28
 800381e:	46bd      	mov	sp, r7
 8003820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003824:	4770      	bx	lr

08003826 <TIM_ITRx_SetConfig>:
 8003826:	b480      	push	{r7}
 8003828:	b085      	sub	sp, #20
 800382a:	af00      	add	r7, sp, #0
 800382c:	6078      	str	r0, [r7, #4]
 800382e:	6039      	str	r1, [r7, #0]
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	689b      	ldr	r3, [r3, #8]
 8003834:	60fb      	str	r3, [r7, #12]
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800383c:	60fb      	str	r3, [r7, #12]
 800383e:	683a      	ldr	r2, [r7, #0]
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	4313      	orrs	r3, r2
 8003844:	f043 0307 	orr.w	r3, r3, #7
 8003848:	60fb      	str	r3, [r7, #12]
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	68fa      	ldr	r2, [r7, #12]
 800384e:	609a      	str	r2, [r3, #8]
 8003850:	bf00      	nop
 8003852:	3714      	adds	r7, #20
 8003854:	46bd      	mov	sp, r7
 8003856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800385a:	4770      	bx	lr

0800385c <TIM_ETR_SetConfig>:
 800385c:	b480      	push	{r7}
 800385e:	b087      	sub	sp, #28
 8003860:	af00      	add	r7, sp, #0
 8003862:	60f8      	str	r0, [r7, #12]
 8003864:	60b9      	str	r1, [r7, #8]
 8003866:	607a      	str	r2, [r7, #4]
 8003868:	603b      	str	r3, [r7, #0]
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	689b      	ldr	r3, [r3, #8]
 800386e:	617b      	str	r3, [r7, #20]
 8003870:	697b      	ldr	r3, [r7, #20]
 8003872:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003876:	617b      	str	r3, [r7, #20]
 8003878:	683b      	ldr	r3, [r7, #0]
 800387a:	021a      	lsls	r2, r3, #8
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	431a      	orrs	r2, r3
 8003880:	68bb      	ldr	r3, [r7, #8]
 8003882:	4313      	orrs	r3, r2
 8003884:	697a      	ldr	r2, [r7, #20]
 8003886:	4313      	orrs	r3, r2
 8003888:	617b      	str	r3, [r7, #20]
 800388a:	68fb      	ldr	r3, [r7, #12]
 800388c:	697a      	ldr	r2, [r7, #20]
 800388e:	609a      	str	r2, [r3, #8]
 8003890:	bf00      	nop
 8003892:	371c      	adds	r7, #28
 8003894:	46bd      	mov	sp, r7
 8003896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800389a:	4770      	bx	lr

0800389c <HAL_TIMEx_MasterConfigSynchronization>:
 800389c:	b480      	push	{r7}
 800389e:	b085      	sub	sp, #20
 80038a0:	af00      	add	r7, sp, #0
 80038a2:	6078      	str	r0, [r7, #4]
 80038a4:	6039      	str	r1, [r7, #0]
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80038ac:	2b01      	cmp	r3, #1
 80038ae:	d101      	bne.n	80038b4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80038b0:	2302      	movs	r3, #2
 80038b2:	e050      	b.n	8003956 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	2201      	movs	r2, #1
 80038b8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	2202      	movs	r2, #2
 80038c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	685b      	ldr	r3, [r3, #4]
 80038ca:	60fb      	str	r3, [r7, #12]
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	689b      	ldr	r3, [r3, #8]
 80038d2:	60bb      	str	r3, [r7, #8]
 80038d4:	68fb      	ldr	r3, [r7, #12]
 80038d6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80038da:	60fb      	str	r3, [r7, #12]
 80038dc:	683b      	ldr	r3, [r7, #0]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	68fa      	ldr	r2, [r7, #12]
 80038e2:	4313      	orrs	r3, r2
 80038e4:	60fb      	str	r3, [r7, #12]
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	68fa      	ldr	r2, [r7, #12]
 80038ec:	605a      	str	r2, [r3, #4]
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	681b      	ldr	r3, [r3, #0]
 80038f2:	4a1c      	ldr	r2, [pc, #112]	@ (8003964 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 80038f4:	4293      	cmp	r3, r2
 80038f6:	d018      	beq.n	800392a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003900:	d013      	beq.n	800392a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	681b      	ldr	r3, [r3, #0]
 8003906:	4a18      	ldr	r2, [pc, #96]	@ (8003968 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8003908:	4293      	cmp	r3, r2
 800390a:	d00e      	beq.n	800392a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	4a16      	ldr	r2, [pc, #88]	@ (800396c <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8003912:	4293      	cmp	r3, r2
 8003914:	d009      	beq.n	800392a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	4a15      	ldr	r2, [pc, #84]	@ (8003970 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800391c:	4293      	cmp	r3, r2
 800391e:	d004      	beq.n	800392a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	4a13      	ldr	r2, [pc, #76]	@ (8003974 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8003926:	4293      	cmp	r3, r2
 8003928:	d10c      	bne.n	8003944 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800392a:	68bb      	ldr	r3, [r7, #8]
 800392c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003930:	60bb      	str	r3, [r7, #8]
 8003932:	683b      	ldr	r3, [r7, #0]
 8003934:	685b      	ldr	r3, [r3, #4]
 8003936:	68ba      	ldr	r2, [r7, #8]
 8003938:	4313      	orrs	r3, r2
 800393a:	60bb      	str	r3, [r7, #8]
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	68ba      	ldr	r2, [r7, #8]
 8003942:	609a      	str	r2, [r3, #8]
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	2201      	movs	r2, #1
 8003948:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	2200      	movs	r2, #0
 8003950:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003954:	2300      	movs	r3, #0
 8003956:	4618      	mov	r0, r3
 8003958:	3714      	adds	r7, #20
 800395a:	46bd      	mov	sp, r7
 800395c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003960:	4770      	bx	lr
 8003962:	bf00      	nop
 8003964:	40010000 	.word	0x40010000
 8003968:	40000400 	.word	0x40000400
 800396c:	40000800 	.word	0x40000800
 8003970:	40000c00 	.word	0x40000c00
 8003974:	40014000 	.word	0x40014000

08003978 <HAL_TIMEx_CommutCallback>:
 8003978:	b480      	push	{r7}
 800397a:	b083      	sub	sp, #12
 800397c:	af00      	add	r7, sp, #0
 800397e:	6078      	str	r0, [r7, #4]
 8003980:	bf00      	nop
 8003982:	370c      	adds	r7, #12
 8003984:	46bd      	mov	sp, r7
 8003986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800398a:	4770      	bx	lr

0800398c <HAL_TIMEx_BreakCallback>:
 800398c:	b480      	push	{r7}
 800398e:	b083      	sub	sp, #12
 8003990:	af00      	add	r7, sp, #0
 8003992:	6078      	str	r0, [r7, #4]
 8003994:	bf00      	nop
 8003996:	370c      	adds	r7, #12
 8003998:	46bd      	mov	sp, r7
 800399a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800399e:	4770      	bx	lr

080039a0 <HAL_UART_Init>:
 80039a0:	b580      	push	{r7, lr}
 80039a2:	b082      	sub	sp, #8
 80039a4:	af00      	add	r7, sp, #0
 80039a6:	6078      	str	r0, [r7, #4]
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	2b00      	cmp	r3, #0
 80039ac:	d101      	bne.n	80039b2 <HAL_UART_Init+0x12>
 80039ae:	2301      	movs	r3, #1
 80039b0:	e042      	b.n	8003a38 <HAL_UART_Init+0x98>
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80039b8:	b2db      	uxtb	r3, r3
 80039ba:	2b00      	cmp	r3, #0
 80039bc:	d106      	bne.n	80039cc <HAL_UART_Init+0x2c>
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	2200      	movs	r2, #0
 80039c2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80039c6:	6878      	ldr	r0, [r7, #4]
 80039c8:	f7fd faa8 	bl	8000f1c <HAL_UART_MspInit>
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	2224      	movs	r2, #36	@ 0x24
 80039d0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	68da      	ldr	r2, [r3, #12]
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80039e2:	60da      	str	r2, [r3, #12]
 80039e4:	6878      	ldr	r0, [r7, #4]
 80039e6:	f000 f973 	bl	8003cd0 <UART_SetConfig>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	681b      	ldr	r3, [r3, #0]
 80039ee:	691a      	ldr	r2, [r3, #16]
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80039f8:	611a      	str	r2, [r3, #16]
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	681b      	ldr	r3, [r3, #0]
 80039fe:	695a      	ldr	r2, [r3, #20]
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003a08:	615a      	str	r2, [r3, #20]
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	681b      	ldr	r3, [r3, #0]
 8003a0e:	68da      	ldr	r2, [r3, #12]
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003a18:	60da      	str	r2, [r3, #12]
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	2200      	movs	r2, #0
 8003a1e:	645a      	str	r2, [r3, #68]	@ 0x44
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	2220      	movs	r2, #32
 8003a24:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	2220      	movs	r2, #32
 8003a2c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	2200      	movs	r2, #0
 8003a34:	635a      	str	r2, [r3, #52]	@ 0x34
 8003a36:	2300      	movs	r3, #0
 8003a38:	4618      	mov	r0, r3
 8003a3a:	3708      	adds	r7, #8
 8003a3c:	46bd      	mov	sp, r7
 8003a3e:	bd80      	pop	{r7, pc}

08003a40 <HAL_UART_Transmit>:
 8003a40:	b580      	push	{r7, lr}
 8003a42:	b08a      	sub	sp, #40	@ 0x28
 8003a44:	af02      	add	r7, sp, #8
 8003a46:	60f8      	str	r0, [r7, #12]
 8003a48:	60b9      	str	r1, [r7, #8]
 8003a4a:	603b      	str	r3, [r7, #0]
 8003a4c:	4613      	mov	r3, r2
 8003a4e:	80fb      	strh	r3, [r7, #6]
 8003a50:	2300      	movs	r3, #0
 8003a52:	617b      	str	r3, [r7, #20]
 8003a54:	68fb      	ldr	r3, [r7, #12]
 8003a56:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003a5a:	b2db      	uxtb	r3, r3
 8003a5c:	2b20      	cmp	r3, #32
 8003a5e:	d175      	bne.n	8003b4c <HAL_UART_Transmit+0x10c>
 8003a60:	68bb      	ldr	r3, [r7, #8]
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d002      	beq.n	8003a6c <HAL_UART_Transmit+0x2c>
 8003a66:	88fb      	ldrh	r3, [r7, #6]
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	d101      	bne.n	8003a70 <HAL_UART_Transmit+0x30>
 8003a6c:	2301      	movs	r3, #1
 8003a6e:	e06e      	b.n	8003b4e <HAL_UART_Transmit+0x10e>
 8003a70:	68fb      	ldr	r3, [r7, #12]
 8003a72:	2200      	movs	r2, #0
 8003a74:	645a      	str	r2, [r3, #68]	@ 0x44
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	2221      	movs	r2, #33	@ 0x21
 8003a7a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003a7e:	f7fd fbe1 	bl	8001244 <HAL_GetTick>
 8003a82:	6178      	str	r0, [r7, #20]
 8003a84:	68fb      	ldr	r3, [r7, #12]
 8003a86:	88fa      	ldrh	r2, [r7, #6]
 8003a88:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003a8a:	68fb      	ldr	r3, [r7, #12]
 8003a8c:	88fa      	ldrh	r2, [r7, #6]
 8003a8e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003a90:	68fb      	ldr	r3, [r7, #12]
 8003a92:	689b      	ldr	r3, [r3, #8]
 8003a94:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003a98:	d108      	bne.n	8003aac <HAL_UART_Transmit+0x6c>
 8003a9a:	68fb      	ldr	r3, [r7, #12]
 8003a9c:	691b      	ldr	r3, [r3, #16]
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d104      	bne.n	8003aac <HAL_UART_Transmit+0x6c>
 8003aa2:	2300      	movs	r3, #0
 8003aa4:	61fb      	str	r3, [r7, #28]
 8003aa6:	68bb      	ldr	r3, [r7, #8]
 8003aa8:	61bb      	str	r3, [r7, #24]
 8003aaa:	e003      	b.n	8003ab4 <HAL_UART_Transmit+0x74>
 8003aac:	68bb      	ldr	r3, [r7, #8]
 8003aae:	61fb      	str	r3, [r7, #28]
 8003ab0:	2300      	movs	r3, #0
 8003ab2:	61bb      	str	r3, [r7, #24]
 8003ab4:	e02e      	b.n	8003b14 <HAL_UART_Transmit+0xd4>
 8003ab6:	683b      	ldr	r3, [r7, #0]
 8003ab8:	9300      	str	r3, [sp, #0]
 8003aba:	697b      	ldr	r3, [r7, #20]
 8003abc:	2200      	movs	r2, #0
 8003abe:	2180      	movs	r1, #128	@ 0x80
 8003ac0:	68f8      	ldr	r0, [r7, #12]
 8003ac2:	f000 f848 	bl	8003b56 <UART_WaitOnFlagUntilTimeout>
 8003ac6:	4603      	mov	r3, r0
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d005      	beq.n	8003ad8 <HAL_UART_Transmit+0x98>
 8003acc:	68fb      	ldr	r3, [r7, #12]
 8003ace:	2220      	movs	r2, #32
 8003ad0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003ad4:	2303      	movs	r3, #3
 8003ad6:	e03a      	b.n	8003b4e <HAL_UART_Transmit+0x10e>
 8003ad8:	69fb      	ldr	r3, [r7, #28]
 8003ada:	2b00      	cmp	r3, #0
 8003adc:	d10b      	bne.n	8003af6 <HAL_UART_Transmit+0xb6>
 8003ade:	69bb      	ldr	r3, [r7, #24]
 8003ae0:	881b      	ldrh	r3, [r3, #0]
 8003ae2:	461a      	mov	r2, r3
 8003ae4:	68fb      	ldr	r3, [r7, #12]
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003aec:	605a      	str	r2, [r3, #4]
 8003aee:	69bb      	ldr	r3, [r7, #24]
 8003af0:	3302      	adds	r3, #2
 8003af2:	61bb      	str	r3, [r7, #24]
 8003af4:	e007      	b.n	8003b06 <HAL_UART_Transmit+0xc6>
 8003af6:	69fb      	ldr	r3, [r7, #28]
 8003af8:	781a      	ldrb	r2, [r3, #0]
 8003afa:	68fb      	ldr	r3, [r7, #12]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	605a      	str	r2, [r3, #4]
 8003b00:	69fb      	ldr	r3, [r7, #28]
 8003b02:	3301      	adds	r3, #1
 8003b04:	61fb      	str	r3, [r7, #28]
 8003b06:	68fb      	ldr	r3, [r7, #12]
 8003b08:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003b0a:	b29b      	uxth	r3, r3
 8003b0c:	3b01      	subs	r3, #1
 8003b0e:	b29a      	uxth	r2, r3
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003b18:	b29b      	uxth	r3, r3
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d1cb      	bne.n	8003ab6 <HAL_UART_Transmit+0x76>
 8003b1e:	683b      	ldr	r3, [r7, #0]
 8003b20:	9300      	str	r3, [sp, #0]
 8003b22:	697b      	ldr	r3, [r7, #20]
 8003b24:	2200      	movs	r2, #0
 8003b26:	2140      	movs	r1, #64	@ 0x40
 8003b28:	68f8      	ldr	r0, [r7, #12]
 8003b2a:	f000 f814 	bl	8003b56 <UART_WaitOnFlagUntilTimeout>
 8003b2e:	4603      	mov	r3, r0
 8003b30:	2b00      	cmp	r3, #0
 8003b32:	d005      	beq.n	8003b40 <HAL_UART_Transmit+0x100>
 8003b34:	68fb      	ldr	r3, [r7, #12]
 8003b36:	2220      	movs	r2, #32
 8003b38:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b3c:	2303      	movs	r3, #3
 8003b3e:	e006      	b.n	8003b4e <HAL_UART_Transmit+0x10e>
 8003b40:	68fb      	ldr	r3, [r7, #12]
 8003b42:	2220      	movs	r2, #32
 8003b44:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b48:	2300      	movs	r3, #0
 8003b4a:	e000      	b.n	8003b4e <HAL_UART_Transmit+0x10e>
 8003b4c:	2302      	movs	r3, #2
 8003b4e:	4618      	mov	r0, r3
 8003b50:	3720      	adds	r7, #32
 8003b52:	46bd      	mov	sp, r7
 8003b54:	bd80      	pop	{r7, pc}

08003b56 <UART_WaitOnFlagUntilTimeout>:
 8003b56:	b580      	push	{r7, lr}
 8003b58:	b086      	sub	sp, #24
 8003b5a:	af00      	add	r7, sp, #0
 8003b5c:	60f8      	str	r0, [r7, #12]
 8003b5e:	60b9      	str	r1, [r7, #8]
 8003b60:	603b      	str	r3, [r7, #0]
 8003b62:	4613      	mov	r3, r2
 8003b64:	71fb      	strb	r3, [r7, #7]
 8003b66:	e03b      	b.n	8003be0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003b68:	6a3b      	ldr	r3, [r7, #32]
 8003b6a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003b6e:	d037      	beq.n	8003be0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003b70:	f7fd fb68 	bl	8001244 <HAL_GetTick>
 8003b74:	4602      	mov	r2, r0
 8003b76:	683b      	ldr	r3, [r7, #0]
 8003b78:	1ad3      	subs	r3, r2, r3
 8003b7a:	6a3a      	ldr	r2, [r7, #32]
 8003b7c:	429a      	cmp	r2, r3
 8003b7e:	d302      	bcc.n	8003b86 <UART_WaitOnFlagUntilTimeout+0x30>
 8003b80:	6a3b      	ldr	r3, [r7, #32]
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d101      	bne.n	8003b8a <UART_WaitOnFlagUntilTimeout+0x34>
 8003b86:	2303      	movs	r3, #3
 8003b88:	e03a      	b.n	8003c00 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003b8a:	68fb      	ldr	r3, [r7, #12]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	68db      	ldr	r3, [r3, #12]
 8003b90:	f003 0304 	and.w	r3, r3, #4
 8003b94:	2b00      	cmp	r3, #0
 8003b96:	d023      	beq.n	8003be0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003b98:	68bb      	ldr	r3, [r7, #8]
 8003b9a:	2b80      	cmp	r3, #128	@ 0x80
 8003b9c:	d020      	beq.n	8003be0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003b9e:	68bb      	ldr	r3, [r7, #8]
 8003ba0:	2b40      	cmp	r3, #64	@ 0x40
 8003ba2:	d01d      	beq.n	8003be0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	f003 0308 	and.w	r3, r3, #8
 8003bae:	2b08      	cmp	r3, #8
 8003bb0:	d116      	bne.n	8003be0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003bb2:	2300      	movs	r3, #0
 8003bb4:	617b      	str	r3, [r7, #20]
 8003bb6:	68fb      	ldr	r3, [r7, #12]
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	617b      	str	r3, [r7, #20]
 8003bbe:	68fb      	ldr	r3, [r7, #12]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	685b      	ldr	r3, [r3, #4]
 8003bc4:	617b      	str	r3, [r7, #20]
 8003bc6:	697b      	ldr	r3, [r7, #20]
 8003bc8:	68f8      	ldr	r0, [r7, #12]
 8003bca:	f000 f81d 	bl	8003c08 <UART_EndRxTransfer>
 8003bce:	68fb      	ldr	r3, [r7, #12]
 8003bd0:	2208      	movs	r2, #8
 8003bd2:	645a      	str	r2, [r3, #68]	@ 0x44
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	2200      	movs	r2, #0
 8003bd8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003bdc:	2301      	movs	r3, #1
 8003bde:	e00f      	b.n	8003c00 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003be0:	68fb      	ldr	r3, [r7, #12]
 8003be2:	681b      	ldr	r3, [r3, #0]
 8003be4:	681a      	ldr	r2, [r3, #0]
 8003be6:	68bb      	ldr	r3, [r7, #8]
 8003be8:	4013      	ands	r3, r2
 8003bea:	68ba      	ldr	r2, [r7, #8]
 8003bec:	429a      	cmp	r2, r3
 8003bee:	bf0c      	ite	eq
 8003bf0:	2301      	moveq	r3, #1
 8003bf2:	2300      	movne	r3, #0
 8003bf4:	b2db      	uxtb	r3, r3
 8003bf6:	461a      	mov	r2, r3
 8003bf8:	79fb      	ldrb	r3, [r7, #7]
 8003bfa:	429a      	cmp	r2, r3
 8003bfc:	d0b4      	beq.n	8003b68 <UART_WaitOnFlagUntilTimeout+0x12>
 8003bfe:	2300      	movs	r3, #0
 8003c00:	4618      	mov	r0, r3
 8003c02:	3718      	adds	r7, #24
 8003c04:	46bd      	mov	sp, r7
 8003c06:	bd80      	pop	{r7, pc}

08003c08 <UART_EndRxTransfer>:
 8003c08:	b480      	push	{r7}
 8003c0a:	b095      	sub	sp, #84	@ 0x54
 8003c0c:	af00      	add	r7, sp, #0
 8003c0e:	6078      	str	r0, [r7, #4]
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	330c      	adds	r3, #12
 8003c16:	637b      	str	r3, [r7, #52]	@ 0x34
 8003c18:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003c1a:	e853 3f00 	ldrex	r3, [r3]
 8003c1e:	633b      	str	r3, [r7, #48]	@ 0x30
 8003c20:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003c22:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003c26:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	330c      	adds	r3, #12
 8003c2e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003c30:	643a      	str	r2, [r7, #64]	@ 0x40
 8003c32:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003c34:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003c36:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003c38:	e841 2300 	strex	r3, r2, [r1]
 8003c3c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003c3e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d1e5      	bne.n	8003c10 <UART_EndRxTransfer+0x8>
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	3314      	adds	r3, #20
 8003c4a:	623b      	str	r3, [r7, #32]
 8003c4c:	6a3b      	ldr	r3, [r7, #32]
 8003c4e:	e853 3f00 	ldrex	r3, [r3]
 8003c52:	61fb      	str	r3, [r7, #28]
 8003c54:	69fb      	ldr	r3, [r7, #28]
 8003c56:	f023 0301 	bic.w	r3, r3, #1
 8003c5a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	3314      	adds	r3, #20
 8003c62:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8003c64:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003c66:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003c68:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003c6a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003c6c:	e841 2300 	strex	r3, r2, [r1]
 8003c70:	627b      	str	r3, [r7, #36]	@ 0x24
 8003c72:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d1e5      	bne.n	8003c44 <UART_EndRxTransfer+0x3c>
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003c7c:	2b01      	cmp	r3, #1
 8003c7e:	d119      	bne.n	8003cb4 <UART_EndRxTransfer+0xac>
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	330c      	adds	r3, #12
 8003c86:	60fb      	str	r3, [r7, #12]
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	e853 3f00 	ldrex	r3, [r3]
 8003c8e:	60bb      	str	r3, [r7, #8]
 8003c90:	68bb      	ldr	r3, [r7, #8]
 8003c92:	f023 0310 	bic.w	r3, r3, #16
 8003c96:	647b      	str	r3, [r7, #68]	@ 0x44
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	330c      	adds	r3, #12
 8003c9e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003ca0:	61ba      	str	r2, [r7, #24]
 8003ca2:	617b      	str	r3, [r7, #20]
 8003ca4:	6979      	ldr	r1, [r7, #20]
 8003ca6:	69ba      	ldr	r2, [r7, #24]
 8003ca8:	e841 2300 	strex	r3, r2, [r1]
 8003cac:	613b      	str	r3, [r7, #16]
 8003cae:	693b      	ldr	r3, [r7, #16]
 8003cb0:	2b00      	cmp	r3, #0
 8003cb2:	d1e5      	bne.n	8003c80 <UART_EndRxTransfer+0x78>
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	2220      	movs	r2, #32
 8003cb8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	2200      	movs	r2, #0
 8003cc0:	631a      	str	r2, [r3, #48]	@ 0x30
 8003cc2:	bf00      	nop
 8003cc4:	3754      	adds	r7, #84	@ 0x54
 8003cc6:	46bd      	mov	sp, r7
 8003cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ccc:	4770      	bx	lr
	...

08003cd0 <UART_SetConfig>:
 8003cd0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003cd4:	b0c0      	sub	sp, #256	@ 0x100
 8003cd6:	af00      	add	r7, sp, #0
 8003cd8:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8003cdc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	691b      	ldr	r3, [r3, #16]
 8003ce4:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8003ce8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003cec:	68d9      	ldr	r1, [r3, #12]
 8003cee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003cf2:	681a      	ldr	r2, [r3, #0]
 8003cf4:	ea40 0301 	orr.w	r3, r0, r1
 8003cf8:	6113      	str	r3, [r2, #16]
 8003cfa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003cfe:	689a      	ldr	r2, [r3, #8]
 8003d00:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d04:	691b      	ldr	r3, [r3, #16]
 8003d06:	431a      	orrs	r2, r3
 8003d08:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d0c:	695b      	ldr	r3, [r3, #20]
 8003d0e:	431a      	orrs	r2, r3
 8003d10:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d14:	69db      	ldr	r3, [r3, #28]
 8003d16:	4313      	orrs	r3, r2
 8003d18:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8003d1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	68db      	ldr	r3, [r3, #12]
 8003d24:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8003d28:	f021 010c 	bic.w	r1, r1, #12
 8003d2c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d30:	681a      	ldr	r2, [r3, #0]
 8003d32:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8003d36:	430b      	orrs	r3, r1
 8003d38:	60d3      	str	r3, [r2, #12]
 8003d3a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	695b      	ldr	r3, [r3, #20]
 8003d42:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8003d46:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d4a:	6999      	ldr	r1, [r3, #24]
 8003d4c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d50:	681a      	ldr	r2, [r3, #0]
 8003d52:	ea40 0301 	orr.w	r3, r0, r1
 8003d56:	6153      	str	r3, [r2, #20]
 8003d58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d5c:	681a      	ldr	r2, [r3, #0]
 8003d5e:	4b8f      	ldr	r3, [pc, #572]	@ (8003f9c <UART_SetConfig+0x2cc>)
 8003d60:	429a      	cmp	r2, r3
 8003d62:	d005      	beq.n	8003d70 <UART_SetConfig+0xa0>
 8003d64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d68:	681a      	ldr	r2, [r3, #0]
 8003d6a:	4b8d      	ldr	r3, [pc, #564]	@ (8003fa0 <UART_SetConfig+0x2d0>)
 8003d6c:	429a      	cmp	r2, r3
 8003d6e:	d104      	bne.n	8003d7a <UART_SetConfig+0xaa>
 8003d70:	f7ff f9be 	bl	80030f0 <HAL_RCC_GetPCLK2Freq>
 8003d74:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8003d78:	e003      	b.n	8003d82 <UART_SetConfig+0xb2>
 8003d7a:	f7ff f9a5 	bl	80030c8 <HAL_RCC_GetPCLK1Freq>
 8003d7e:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8003d82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003d86:	69db      	ldr	r3, [r3, #28]
 8003d88:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003d8c:	f040 810c 	bne.w	8003fa8 <UART_SetConfig+0x2d8>
 8003d90:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003d94:	2200      	movs	r2, #0
 8003d96:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8003d9a:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8003d9e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8003da2:	4622      	mov	r2, r4
 8003da4:	462b      	mov	r3, r5
 8003da6:	1891      	adds	r1, r2, r2
 8003da8:	65b9      	str	r1, [r7, #88]	@ 0x58
 8003daa:	415b      	adcs	r3, r3
 8003dac:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003dae:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8003db2:	4621      	mov	r1, r4
 8003db4:	eb12 0801 	adds.w	r8, r2, r1
 8003db8:	4629      	mov	r1, r5
 8003dba:	eb43 0901 	adc.w	r9, r3, r1
 8003dbe:	f04f 0200 	mov.w	r2, #0
 8003dc2:	f04f 0300 	mov.w	r3, #0
 8003dc6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003dca:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003dce:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003dd2:	4690      	mov	r8, r2
 8003dd4:	4699      	mov	r9, r3
 8003dd6:	4623      	mov	r3, r4
 8003dd8:	eb18 0303 	adds.w	r3, r8, r3
 8003ddc:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003de0:	462b      	mov	r3, r5
 8003de2:	eb49 0303 	adc.w	r3, r9, r3
 8003de6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003dea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003dee:	685b      	ldr	r3, [r3, #4]
 8003df0:	2200      	movs	r2, #0
 8003df2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003df6:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8003dfa:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8003dfe:	460b      	mov	r3, r1
 8003e00:	18db      	adds	r3, r3, r3
 8003e02:	653b      	str	r3, [r7, #80]	@ 0x50
 8003e04:	4613      	mov	r3, r2
 8003e06:	eb42 0303 	adc.w	r3, r2, r3
 8003e0a:	657b      	str	r3, [r7, #84]	@ 0x54
 8003e0c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8003e10:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8003e14:	f7fc fa3c 	bl	8000290 <__aeabi_uldivmod>
 8003e18:	4602      	mov	r2, r0
 8003e1a:	460b      	mov	r3, r1
 8003e1c:	4b61      	ldr	r3, [pc, #388]	@ (8003fa4 <UART_SetConfig+0x2d4>)
 8003e1e:	fba3 2302 	umull	r2, r3, r3, r2
 8003e22:	095b      	lsrs	r3, r3, #5
 8003e24:	011c      	lsls	r4, r3, #4
 8003e26:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003e2a:	2200      	movs	r2, #0
 8003e2c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003e30:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8003e34:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8003e38:	4642      	mov	r2, r8
 8003e3a:	464b      	mov	r3, r9
 8003e3c:	1891      	adds	r1, r2, r2
 8003e3e:	64b9      	str	r1, [r7, #72]	@ 0x48
 8003e40:	415b      	adcs	r3, r3
 8003e42:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003e44:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8003e48:	4641      	mov	r1, r8
 8003e4a:	eb12 0a01 	adds.w	sl, r2, r1
 8003e4e:	4649      	mov	r1, r9
 8003e50:	eb43 0b01 	adc.w	fp, r3, r1
 8003e54:	f04f 0200 	mov.w	r2, #0
 8003e58:	f04f 0300 	mov.w	r3, #0
 8003e5c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8003e60:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8003e64:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003e68:	4692      	mov	sl, r2
 8003e6a:	469b      	mov	fp, r3
 8003e6c:	4643      	mov	r3, r8
 8003e6e:	eb1a 0303 	adds.w	r3, sl, r3
 8003e72:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003e76:	464b      	mov	r3, r9
 8003e78:	eb4b 0303 	adc.w	r3, fp, r3
 8003e7c:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8003e80:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003e84:	685b      	ldr	r3, [r3, #4]
 8003e86:	2200      	movs	r2, #0
 8003e88:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003e8c:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8003e90:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8003e94:	460b      	mov	r3, r1
 8003e96:	18db      	adds	r3, r3, r3
 8003e98:	643b      	str	r3, [r7, #64]	@ 0x40
 8003e9a:	4613      	mov	r3, r2
 8003e9c:	eb42 0303 	adc.w	r3, r2, r3
 8003ea0:	647b      	str	r3, [r7, #68]	@ 0x44
 8003ea2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8003ea6:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8003eaa:	f7fc f9f1 	bl	8000290 <__aeabi_uldivmod>
 8003eae:	4602      	mov	r2, r0
 8003eb0:	460b      	mov	r3, r1
 8003eb2:	4611      	mov	r1, r2
 8003eb4:	4b3b      	ldr	r3, [pc, #236]	@ (8003fa4 <UART_SetConfig+0x2d4>)
 8003eb6:	fba3 2301 	umull	r2, r3, r3, r1
 8003eba:	095b      	lsrs	r3, r3, #5
 8003ebc:	2264      	movs	r2, #100	@ 0x64
 8003ebe:	fb02 f303 	mul.w	r3, r2, r3
 8003ec2:	1acb      	subs	r3, r1, r3
 8003ec4:	00db      	lsls	r3, r3, #3
 8003ec6:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8003eca:	4b36      	ldr	r3, [pc, #216]	@ (8003fa4 <UART_SetConfig+0x2d4>)
 8003ecc:	fba3 2302 	umull	r2, r3, r3, r2
 8003ed0:	095b      	lsrs	r3, r3, #5
 8003ed2:	005b      	lsls	r3, r3, #1
 8003ed4:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8003ed8:	441c      	add	r4, r3
 8003eda:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003ede:	2200      	movs	r2, #0
 8003ee0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003ee4:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8003ee8:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8003eec:	4642      	mov	r2, r8
 8003eee:	464b      	mov	r3, r9
 8003ef0:	1891      	adds	r1, r2, r2
 8003ef2:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003ef4:	415b      	adcs	r3, r3
 8003ef6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003ef8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8003efc:	4641      	mov	r1, r8
 8003efe:	1851      	adds	r1, r2, r1
 8003f00:	6339      	str	r1, [r7, #48]	@ 0x30
 8003f02:	4649      	mov	r1, r9
 8003f04:	414b      	adcs	r3, r1
 8003f06:	637b      	str	r3, [r7, #52]	@ 0x34
 8003f08:	f04f 0200 	mov.w	r2, #0
 8003f0c:	f04f 0300 	mov.w	r3, #0
 8003f10:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8003f14:	4659      	mov	r1, fp
 8003f16:	00cb      	lsls	r3, r1, #3
 8003f18:	4651      	mov	r1, sl
 8003f1a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003f1e:	4651      	mov	r1, sl
 8003f20:	00ca      	lsls	r2, r1, #3
 8003f22:	4610      	mov	r0, r2
 8003f24:	4619      	mov	r1, r3
 8003f26:	4603      	mov	r3, r0
 8003f28:	4642      	mov	r2, r8
 8003f2a:	189b      	adds	r3, r3, r2
 8003f2c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003f30:	464b      	mov	r3, r9
 8003f32:	460a      	mov	r2, r1
 8003f34:	eb42 0303 	adc.w	r3, r2, r3
 8003f38:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003f3c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f40:	685b      	ldr	r3, [r3, #4]
 8003f42:	2200      	movs	r2, #0
 8003f44:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003f48:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8003f4c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8003f50:	460b      	mov	r3, r1
 8003f52:	18db      	adds	r3, r3, r3
 8003f54:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003f56:	4613      	mov	r3, r2
 8003f58:	eb42 0303 	adc.w	r3, r2, r3
 8003f5c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003f5e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8003f62:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8003f66:	f7fc f993 	bl	8000290 <__aeabi_uldivmod>
 8003f6a:	4602      	mov	r2, r0
 8003f6c:	460b      	mov	r3, r1
 8003f6e:	4b0d      	ldr	r3, [pc, #52]	@ (8003fa4 <UART_SetConfig+0x2d4>)
 8003f70:	fba3 1302 	umull	r1, r3, r3, r2
 8003f74:	095b      	lsrs	r3, r3, #5
 8003f76:	2164      	movs	r1, #100	@ 0x64
 8003f78:	fb01 f303 	mul.w	r3, r1, r3
 8003f7c:	1ad3      	subs	r3, r2, r3
 8003f7e:	00db      	lsls	r3, r3, #3
 8003f80:	3332      	adds	r3, #50	@ 0x32
 8003f82:	4a08      	ldr	r2, [pc, #32]	@ (8003fa4 <UART_SetConfig+0x2d4>)
 8003f84:	fba2 2303 	umull	r2, r3, r2, r3
 8003f88:	095b      	lsrs	r3, r3, #5
 8003f8a:	f003 0207 	and.w	r2, r3, #7
 8003f8e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	4422      	add	r2, r4
 8003f96:	609a      	str	r2, [r3, #8]
 8003f98:	e106      	b.n	80041a8 <UART_SetConfig+0x4d8>
 8003f9a:	bf00      	nop
 8003f9c:	40011000 	.word	0x40011000
 8003fa0:	40011400 	.word	0x40011400
 8003fa4:	51eb851f 	.word	0x51eb851f
 8003fa8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003fac:	2200      	movs	r2, #0
 8003fae:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003fb2:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8003fb6:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8003fba:	4642      	mov	r2, r8
 8003fbc:	464b      	mov	r3, r9
 8003fbe:	1891      	adds	r1, r2, r2
 8003fc0:	6239      	str	r1, [r7, #32]
 8003fc2:	415b      	adcs	r3, r3
 8003fc4:	627b      	str	r3, [r7, #36]	@ 0x24
 8003fc6:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8003fca:	4641      	mov	r1, r8
 8003fcc:	1854      	adds	r4, r2, r1
 8003fce:	4649      	mov	r1, r9
 8003fd0:	eb43 0501 	adc.w	r5, r3, r1
 8003fd4:	f04f 0200 	mov.w	r2, #0
 8003fd8:	f04f 0300 	mov.w	r3, #0
 8003fdc:	00eb      	lsls	r3, r5, #3
 8003fde:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003fe2:	00e2      	lsls	r2, r4, #3
 8003fe4:	4614      	mov	r4, r2
 8003fe6:	461d      	mov	r5, r3
 8003fe8:	4643      	mov	r3, r8
 8003fea:	18e3      	adds	r3, r4, r3
 8003fec:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003ff0:	464b      	mov	r3, r9
 8003ff2:	eb45 0303 	adc.w	r3, r5, r3
 8003ff6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003ffa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ffe:	685b      	ldr	r3, [r3, #4]
 8004000:	2200      	movs	r2, #0
 8004002:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004006:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800400a:	f04f 0200 	mov.w	r2, #0
 800400e:	f04f 0300 	mov.w	r3, #0
 8004012:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8004016:	4629      	mov	r1, r5
 8004018:	008b      	lsls	r3, r1, #2
 800401a:	4621      	mov	r1, r4
 800401c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004020:	4621      	mov	r1, r4
 8004022:	008a      	lsls	r2, r1, #2
 8004024:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8004028:	f7fc f932 	bl	8000290 <__aeabi_uldivmod>
 800402c:	4602      	mov	r2, r0
 800402e:	460b      	mov	r3, r1
 8004030:	4b60      	ldr	r3, [pc, #384]	@ (80041b4 <UART_SetConfig+0x4e4>)
 8004032:	fba3 2302 	umull	r2, r3, r3, r2
 8004036:	095b      	lsrs	r3, r3, #5
 8004038:	011c      	lsls	r4, r3, #4
 800403a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800403e:	2200      	movs	r2, #0
 8004040:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004044:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8004048:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 800404c:	4642      	mov	r2, r8
 800404e:	464b      	mov	r3, r9
 8004050:	1891      	adds	r1, r2, r2
 8004052:	61b9      	str	r1, [r7, #24]
 8004054:	415b      	adcs	r3, r3
 8004056:	61fb      	str	r3, [r7, #28]
 8004058:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800405c:	4641      	mov	r1, r8
 800405e:	1851      	adds	r1, r2, r1
 8004060:	6139      	str	r1, [r7, #16]
 8004062:	4649      	mov	r1, r9
 8004064:	414b      	adcs	r3, r1
 8004066:	617b      	str	r3, [r7, #20]
 8004068:	f04f 0200 	mov.w	r2, #0
 800406c:	f04f 0300 	mov.w	r3, #0
 8004070:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004074:	4659      	mov	r1, fp
 8004076:	00cb      	lsls	r3, r1, #3
 8004078:	4651      	mov	r1, sl
 800407a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800407e:	4651      	mov	r1, sl
 8004080:	00ca      	lsls	r2, r1, #3
 8004082:	4610      	mov	r0, r2
 8004084:	4619      	mov	r1, r3
 8004086:	4603      	mov	r3, r0
 8004088:	4642      	mov	r2, r8
 800408a:	189b      	adds	r3, r3, r2
 800408c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004090:	464b      	mov	r3, r9
 8004092:	460a      	mov	r2, r1
 8004094:	eb42 0303 	adc.w	r3, r2, r3
 8004098:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800409c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040a0:	685b      	ldr	r3, [r3, #4]
 80040a2:	2200      	movs	r2, #0
 80040a4:	67bb      	str	r3, [r7, #120]	@ 0x78
 80040a6:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80040a8:	f04f 0200 	mov.w	r2, #0
 80040ac:	f04f 0300 	mov.w	r3, #0
 80040b0:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80040b4:	4649      	mov	r1, r9
 80040b6:	008b      	lsls	r3, r1, #2
 80040b8:	4641      	mov	r1, r8
 80040ba:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80040be:	4641      	mov	r1, r8
 80040c0:	008a      	lsls	r2, r1, #2
 80040c2:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80040c6:	f7fc f8e3 	bl	8000290 <__aeabi_uldivmod>
 80040ca:	4602      	mov	r2, r0
 80040cc:	460b      	mov	r3, r1
 80040ce:	4611      	mov	r1, r2
 80040d0:	4b38      	ldr	r3, [pc, #224]	@ (80041b4 <UART_SetConfig+0x4e4>)
 80040d2:	fba3 2301 	umull	r2, r3, r3, r1
 80040d6:	095b      	lsrs	r3, r3, #5
 80040d8:	2264      	movs	r2, #100	@ 0x64
 80040da:	fb02 f303 	mul.w	r3, r2, r3
 80040de:	1acb      	subs	r3, r1, r3
 80040e0:	011b      	lsls	r3, r3, #4
 80040e2:	3332      	adds	r3, #50	@ 0x32
 80040e4:	4a33      	ldr	r2, [pc, #204]	@ (80041b4 <UART_SetConfig+0x4e4>)
 80040e6:	fba2 2303 	umull	r2, r3, r2, r3
 80040ea:	095b      	lsrs	r3, r3, #5
 80040ec:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80040f0:	441c      	add	r4, r3
 80040f2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80040f6:	2200      	movs	r2, #0
 80040f8:	673b      	str	r3, [r7, #112]	@ 0x70
 80040fa:	677a      	str	r2, [r7, #116]	@ 0x74
 80040fc:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8004100:	4642      	mov	r2, r8
 8004102:	464b      	mov	r3, r9
 8004104:	1891      	adds	r1, r2, r2
 8004106:	60b9      	str	r1, [r7, #8]
 8004108:	415b      	adcs	r3, r3
 800410a:	60fb      	str	r3, [r7, #12]
 800410c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004110:	4641      	mov	r1, r8
 8004112:	1851      	adds	r1, r2, r1
 8004114:	6039      	str	r1, [r7, #0]
 8004116:	4649      	mov	r1, r9
 8004118:	414b      	adcs	r3, r1
 800411a:	607b      	str	r3, [r7, #4]
 800411c:	f04f 0200 	mov.w	r2, #0
 8004120:	f04f 0300 	mov.w	r3, #0
 8004124:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8004128:	4659      	mov	r1, fp
 800412a:	00cb      	lsls	r3, r1, #3
 800412c:	4651      	mov	r1, sl
 800412e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004132:	4651      	mov	r1, sl
 8004134:	00ca      	lsls	r2, r1, #3
 8004136:	4610      	mov	r0, r2
 8004138:	4619      	mov	r1, r3
 800413a:	4603      	mov	r3, r0
 800413c:	4642      	mov	r2, r8
 800413e:	189b      	adds	r3, r3, r2
 8004140:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004142:	464b      	mov	r3, r9
 8004144:	460a      	mov	r2, r1
 8004146:	eb42 0303 	adc.w	r3, r2, r3
 800414a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800414c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004150:	685b      	ldr	r3, [r3, #4]
 8004152:	2200      	movs	r2, #0
 8004154:	663b      	str	r3, [r7, #96]	@ 0x60
 8004156:	667a      	str	r2, [r7, #100]	@ 0x64
 8004158:	f04f 0200 	mov.w	r2, #0
 800415c:	f04f 0300 	mov.w	r3, #0
 8004160:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8004164:	4649      	mov	r1, r9
 8004166:	008b      	lsls	r3, r1, #2
 8004168:	4641      	mov	r1, r8
 800416a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800416e:	4641      	mov	r1, r8
 8004170:	008a      	lsls	r2, r1, #2
 8004172:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8004176:	f7fc f88b 	bl	8000290 <__aeabi_uldivmod>
 800417a:	4602      	mov	r2, r0
 800417c:	460b      	mov	r3, r1
 800417e:	4b0d      	ldr	r3, [pc, #52]	@ (80041b4 <UART_SetConfig+0x4e4>)
 8004180:	fba3 1302 	umull	r1, r3, r3, r2
 8004184:	095b      	lsrs	r3, r3, #5
 8004186:	2164      	movs	r1, #100	@ 0x64
 8004188:	fb01 f303 	mul.w	r3, r1, r3
 800418c:	1ad3      	subs	r3, r2, r3
 800418e:	011b      	lsls	r3, r3, #4
 8004190:	3332      	adds	r3, #50	@ 0x32
 8004192:	4a08      	ldr	r2, [pc, #32]	@ (80041b4 <UART_SetConfig+0x4e4>)
 8004194:	fba2 2303 	umull	r2, r3, r2, r3
 8004198:	095b      	lsrs	r3, r3, #5
 800419a:	f003 020f 	and.w	r2, r3, #15
 800419e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	4422      	add	r2, r4
 80041a6:	609a      	str	r2, [r3, #8]
 80041a8:	bf00      	nop
 80041aa:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80041ae:	46bd      	mov	sp, r7
 80041b0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80041b4:	51eb851f 	.word	0x51eb851f

080041b8 <siprintf>:
 80041b8:	b40e      	push	{r1, r2, r3}
 80041ba:	b500      	push	{lr}
 80041bc:	b09c      	sub	sp, #112	@ 0x70
 80041be:	ab1d      	add	r3, sp, #116	@ 0x74
 80041c0:	9002      	str	r0, [sp, #8]
 80041c2:	9006      	str	r0, [sp, #24]
 80041c4:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80041c8:	4809      	ldr	r0, [pc, #36]	@ (80041f0 <siprintf+0x38>)
 80041ca:	9107      	str	r1, [sp, #28]
 80041cc:	9104      	str	r1, [sp, #16]
 80041ce:	4909      	ldr	r1, [pc, #36]	@ (80041f4 <siprintf+0x3c>)
 80041d0:	f853 2b04 	ldr.w	r2, [r3], #4
 80041d4:	9105      	str	r1, [sp, #20]
 80041d6:	6800      	ldr	r0, [r0, #0]
 80041d8:	9301      	str	r3, [sp, #4]
 80041da:	a902      	add	r1, sp, #8
 80041dc:	f000 f994 	bl	8004508 <_svfiprintf_r>
 80041e0:	9b02      	ldr	r3, [sp, #8]
 80041e2:	2200      	movs	r2, #0
 80041e4:	701a      	strb	r2, [r3, #0]
 80041e6:	b01c      	add	sp, #112	@ 0x70
 80041e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80041ec:	b003      	add	sp, #12
 80041ee:	4770      	bx	lr
 80041f0:	2000000c 	.word	0x2000000c
 80041f4:	ffff0208 	.word	0xffff0208

080041f8 <memset>:
 80041f8:	4402      	add	r2, r0
 80041fa:	4603      	mov	r3, r0
 80041fc:	4293      	cmp	r3, r2
 80041fe:	d100      	bne.n	8004202 <memset+0xa>
 8004200:	4770      	bx	lr
 8004202:	f803 1b01 	strb.w	r1, [r3], #1
 8004206:	e7f9      	b.n	80041fc <memset+0x4>

08004208 <__errno>:
 8004208:	4b01      	ldr	r3, [pc, #4]	@ (8004210 <__errno+0x8>)
 800420a:	6818      	ldr	r0, [r3, #0]
 800420c:	4770      	bx	lr
 800420e:	bf00      	nop
 8004210:	2000000c 	.word	0x2000000c

08004214 <__libc_init_array>:
 8004214:	b570      	push	{r4, r5, r6, lr}
 8004216:	4d0d      	ldr	r5, [pc, #52]	@ (800424c <__libc_init_array+0x38>)
 8004218:	4c0d      	ldr	r4, [pc, #52]	@ (8004250 <__libc_init_array+0x3c>)
 800421a:	1b64      	subs	r4, r4, r5
 800421c:	10a4      	asrs	r4, r4, #2
 800421e:	2600      	movs	r6, #0
 8004220:	42a6      	cmp	r6, r4
 8004222:	d109      	bne.n	8004238 <__libc_init_array+0x24>
 8004224:	4d0b      	ldr	r5, [pc, #44]	@ (8004254 <__libc_init_array+0x40>)
 8004226:	4c0c      	ldr	r4, [pc, #48]	@ (8004258 <__libc_init_array+0x44>)
 8004228:	f000 fc66 	bl	8004af8 <_init>
 800422c:	1b64      	subs	r4, r4, r5
 800422e:	10a4      	asrs	r4, r4, #2
 8004230:	2600      	movs	r6, #0
 8004232:	42a6      	cmp	r6, r4
 8004234:	d105      	bne.n	8004242 <__libc_init_array+0x2e>
 8004236:	bd70      	pop	{r4, r5, r6, pc}
 8004238:	f855 3b04 	ldr.w	r3, [r5], #4
 800423c:	4798      	blx	r3
 800423e:	3601      	adds	r6, #1
 8004240:	e7ee      	b.n	8004220 <__libc_init_array+0xc>
 8004242:	f855 3b04 	ldr.w	r3, [r5], #4
 8004246:	4798      	blx	r3
 8004248:	3601      	adds	r6, #1
 800424a:	e7f2      	b.n	8004232 <__libc_init_array+0x1e>
 800424c:	08004b8c 	.word	0x08004b8c
 8004250:	08004b8c 	.word	0x08004b8c
 8004254:	08004b8c 	.word	0x08004b8c
 8004258:	08004b90 	.word	0x08004b90

0800425c <__retarget_lock_acquire_recursive>:
 800425c:	4770      	bx	lr

0800425e <__retarget_lock_release_recursive>:
 800425e:	4770      	bx	lr

08004260 <_free_r>:
 8004260:	b538      	push	{r3, r4, r5, lr}
 8004262:	4605      	mov	r5, r0
 8004264:	2900      	cmp	r1, #0
 8004266:	d041      	beq.n	80042ec <_free_r+0x8c>
 8004268:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800426c:	1f0c      	subs	r4, r1, #4
 800426e:	2b00      	cmp	r3, #0
 8004270:	bfb8      	it	lt
 8004272:	18e4      	addlt	r4, r4, r3
 8004274:	f000 f8e0 	bl	8004438 <__malloc_lock>
 8004278:	4a1d      	ldr	r2, [pc, #116]	@ (80042f0 <_free_r+0x90>)
 800427a:	6813      	ldr	r3, [r2, #0]
 800427c:	b933      	cbnz	r3, 800428c <_free_r+0x2c>
 800427e:	6063      	str	r3, [r4, #4]
 8004280:	6014      	str	r4, [r2, #0]
 8004282:	4628      	mov	r0, r5
 8004284:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004288:	f000 b8dc 	b.w	8004444 <__malloc_unlock>
 800428c:	42a3      	cmp	r3, r4
 800428e:	d908      	bls.n	80042a2 <_free_r+0x42>
 8004290:	6820      	ldr	r0, [r4, #0]
 8004292:	1821      	adds	r1, r4, r0
 8004294:	428b      	cmp	r3, r1
 8004296:	bf01      	itttt	eq
 8004298:	6819      	ldreq	r1, [r3, #0]
 800429a:	685b      	ldreq	r3, [r3, #4]
 800429c:	1809      	addeq	r1, r1, r0
 800429e:	6021      	streq	r1, [r4, #0]
 80042a0:	e7ed      	b.n	800427e <_free_r+0x1e>
 80042a2:	461a      	mov	r2, r3
 80042a4:	685b      	ldr	r3, [r3, #4]
 80042a6:	b10b      	cbz	r3, 80042ac <_free_r+0x4c>
 80042a8:	42a3      	cmp	r3, r4
 80042aa:	d9fa      	bls.n	80042a2 <_free_r+0x42>
 80042ac:	6811      	ldr	r1, [r2, #0]
 80042ae:	1850      	adds	r0, r2, r1
 80042b0:	42a0      	cmp	r0, r4
 80042b2:	d10b      	bne.n	80042cc <_free_r+0x6c>
 80042b4:	6820      	ldr	r0, [r4, #0]
 80042b6:	4401      	add	r1, r0
 80042b8:	1850      	adds	r0, r2, r1
 80042ba:	4283      	cmp	r3, r0
 80042bc:	6011      	str	r1, [r2, #0]
 80042be:	d1e0      	bne.n	8004282 <_free_r+0x22>
 80042c0:	6818      	ldr	r0, [r3, #0]
 80042c2:	685b      	ldr	r3, [r3, #4]
 80042c4:	6053      	str	r3, [r2, #4]
 80042c6:	4408      	add	r0, r1
 80042c8:	6010      	str	r0, [r2, #0]
 80042ca:	e7da      	b.n	8004282 <_free_r+0x22>
 80042cc:	d902      	bls.n	80042d4 <_free_r+0x74>
 80042ce:	230c      	movs	r3, #12
 80042d0:	602b      	str	r3, [r5, #0]
 80042d2:	e7d6      	b.n	8004282 <_free_r+0x22>
 80042d4:	6820      	ldr	r0, [r4, #0]
 80042d6:	1821      	adds	r1, r4, r0
 80042d8:	428b      	cmp	r3, r1
 80042da:	bf04      	itt	eq
 80042dc:	6819      	ldreq	r1, [r3, #0]
 80042de:	685b      	ldreq	r3, [r3, #4]
 80042e0:	6063      	str	r3, [r4, #4]
 80042e2:	bf04      	itt	eq
 80042e4:	1809      	addeq	r1, r1, r0
 80042e6:	6021      	streq	r1, [r4, #0]
 80042e8:	6054      	str	r4, [r2, #4]
 80042ea:	e7ca      	b.n	8004282 <_free_r+0x22>
 80042ec:	bd38      	pop	{r3, r4, r5, pc}
 80042ee:	bf00      	nop
 80042f0:	20000680 	.word	0x20000680

080042f4 <sbrk_aligned>:
 80042f4:	b570      	push	{r4, r5, r6, lr}
 80042f6:	4e0f      	ldr	r6, [pc, #60]	@ (8004334 <sbrk_aligned+0x40>)
 80042f8:	460c      	mov	r4, r1
 80042fa:	6831      	ldr	r1, [r6, #0]
 80042fc:	4605      	mov	r5, r0
 80042fe:	b911      	cbnz	r1, 8004306 <sbrk_aligned+0x12>
 8004300:	f000 fba6 	bl	8004a50 <_sbrk_r>
 8004304:	6030      	str	r0, [r6, #0]
 8004306:	4621      	mov	r1, r4
 8004308:	4628      	mov	r0, r5
 800430a:	f000 fba1 	bl	8004a50 <_sbrk_r>
 800430e:	1c43      	adds	r3, r0, #1
 8004310:	d103      	bne.n	800431a <sbrk_aligned+0x26>
 8004312:	f04f 34ff 	mov.w	r4, #4294967295
 8004316:	4620      	mov	r0, r4
 8004318:	bd70      	pop	{r4, r5, r6, pc}
 800431a:	1cc4      	adds	r4, r0, #3
 800431c:	f024 0403 	bic.w	r4, r4, #3
 8004320:	42a0      	cmp	r0, r4
 8004322:	d0f8      	beq.n	8004316 <sbrk_aligned+0x22>
 8004324:	1a21      	subs	r1, r4, r0
 8004326:	4628      	mov	r0, r5
 8004328:	f000 fb92 	bl	8004a50 <_sbrk_r>
 800432c:	3001      	adds	r0, #1
 800432e:	d1f2      	bne.n	8004316 <sbrk_aligned+0x22>
 8004330:	e7ef      	b.n	8004312 <sbrk_aligned+0x1e>
 8004332:	bf00      	nop
 8004334:	2000067c 	.word	0x2000067c

08004338 <_malloc_r>:
 8004338:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800433c:	1ccd      	adds	r5, r1, #3
 800433e:	f025 0503 	bic.w	r5, r5, #3
 8004342:	3508      	adds	r5, #8
 8004344:	2d0c      	cmp	r5, #12
 8004346:	bf38      	it	cc
 8004348:	250c      	movcc	r5, #12
 800434a:	2d00      	cmp	r5, #0
 800434c:	4606      	mov	r6, r0
 800434e:	db01      	blt.n	8004354 <_malloc_r+0x1c>
 8004350:	42a9      	cmp	r1, r5
 8004352:	d904      	bls.n	800435e <_malloc_r+0x26>
 8004354:	230c      	movs	r3, #12
 8004356:	6033      	str	r3, [r6, #0]
 8004358:	2000      	movs	r0, #0
 800435a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800435e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004434 <_malloc_r+0xfc>
 8004362:	f000 f869 	bl	8004438 <__malloc_lock>
 8004366:	f8d8 3000 	ldr.w	r3, [r8]
 800436a:	461c      	mov	r4, r3
 800436c:	bb44      	cbnz	r4, 80043c0 <_malloc_r+0x88>
 800436e:	4629      	mov	r1, r5
 8004370:	4630      	mov	r0, r6
 8004372:	f7ff ffbf 	bl	80042f4 <sbrk_aligned>
 8004376:	1c43      	adds	r3, r0, #1
 8004378:	4604      	mov	r4, r0
 800437a:	d158      	bne.n	800442e <_malloc_r+0xf6>
 800437c:	f8d8 4000 	ldr.w	r4, [r8]
 8004380:	4627      	mov	r7, r4
 8004382:	2f00      	cmp	r7, #0
 8004384:	d143      	bne.n	800440e <_malloc_r+0xd6>
 8004386:	2c00      	cmp	r4, #0
 8004388:	d04b      	beq.n	8004422 <_malloc_r+0xea>
 800438a:	6823      	ldr	r3, [r4, #0]
 800438c:	4639      	mov	r1, r7
 800438e:	4630      	mov	r0, r6
 8004390:	eb04 0903 	add.w	r9, r4, r3
 8004394:	f000 fb5c 	bl	8004a50 <_sbrk_r>
 8004398:	4581      	cmp	r9, r0
 800439a:	d142      	bne.n	8004422 <_malloc_r+0xea>
 800439c:	6821      	ldr	r1, [r4, #0]
 800439e:	1a6d      	subs	r5, r5, r1
 80043a0:	4629      	mov	r1, r5
 80043a2:	4630      	mov	r0, r6
 80043a4:	f7ff ffa6 	bl	80042f4 <sbrk_aligned>
 80043a8:	3001      	adds	r0, #1
 80043aa:	d03a      	beq.n	8004422 <_malloc_r+0xea>
 80043ac:	6823      	ldr	r3, [r4, #0]
 80043ae:	442b      	add	r3, r5
 80043b0:	6023      	str	r3, [r4, #0]
 80043b2:	f8d8 3000 	ldr.w	r3, [r8]
 80043b6:	685a      	ldr	r2, [r3, #4]
 80043b8:	bb62      	cbnz	r2, 8004414 <_malloc_r+0xdc>
 80043ba:	f8c8 7000 	str.w	r7, [r8]
 80043be:	e00f      	b.n	80043e0 <_malloc_r+0xa8>
 80043c0:	6822      	ldr	r2, [r4, #0]
 80043c2:	1b52      	subs	r2, r2, r5
 80043c4:	d420      	bmi.n	8004408 <_malloc_r+0xd0>
 80043c6:	2a0b      	cmp	r2, #11
 80043c8:	d917      	bls.n	80043fa <_malloc_r+0xc2>
 80043ca:	1961      	adds	r1, r4, r5
 80043cc:	42a3      	cmp	r3, r4
 80043ce:	6025      	str	r5, [r4, #0]
 80043d0:	bf18      	it	ne
 80043d2:	6059      	strne	r1, [r3, #4]
 80043d4:	6863      	ldr	r3, [r4, #4]
 80043d6:	bf08      	it	eq
 80043d8:	f8c8 1000 	streq.w	r1, [r8]
 80043dc:	5162      	str	r2, [r4, r5]
 80043de:	604b      	str	r3, [r1, #4]
 80043e0:	4630      	mov	r0, r6
 80043e2:	f000 f82f 	bl	8004444 <__malloc_unlock>
 80043e6:	f104 000b 	add.w	r0, r4, #11
 80043ea:	1d23      	adds	r3, r4, #4
 80043ec:	f020 0007 	bic.w	r0, r0, #7
 80043f0:	1ac2      	subs	r2, r0, r3
 80043f2:	bf1c      	itt	ne
 80043f4:	1a1b      	subne	r3, r3, r0
 80043f6:	50a3      	strne	r3, [r4, r2]
 80043f8:	e7af      	b.n	800435a <_malloc_r+0x22>
 80043fa:	6862      	ldr	r2, [r4, #4]
 80043fc:	42a3      	cmp	r3, r4
 80043fe:	bf0c      	ite	eq
 8004400:	f8c8 2000 	streq.w	r2, [r8]
 8004404:	605a      	strne	r2, [r3, #4]
 8004406:	e7eb      	b.n	80043e0 <_malloc_r+0xa8>
 8004408:	4623      	mov	r3, r4
 800440a:	6864      	ldr	r4, [r4, #4]
 800440c:	e7ae      	b.n	800436c <_malloc_r+0x34>
 800440e:	463c      	mov	r4, r7
 8004410:	687f      	ldr	r7, [r7, #4]
 8004412:	e7b6      	b.n	8004382 <_malloc_r+0x4a>
 8004414:	461a      	mov	r2, r3
 8004416:	685b      	ldr	r3, [r3, #4]
 8004418:	42a3      	cmp	r3, r4
 800441a:	d1fb      	bne.n	8004414 <_malloc_r+0xdc>
 800441c:	2300      	movs	r3, #0
 800441e:	6053      	str	r3, [r2, #4]
 8004420:	e7de      	b.n	80043e0 <_malloc_r+0xa8>
 8004422:	230c      	movs	r3, #12
 8004424:	6033      	str	r3, [r6, #0]
 8004426:	4630      	mov	r0, r6
 8004428:	f000 f80c 	bl	8004444 <__malloc_unlock>
 800442c:	e794      	b.n	8004358 <_malloc_r+0x20>
 800442e:	6005      	str	r5, [r0, #0]
 8004430:	e7d6      	b.n	80043e0 <_malloc_r+0xa8>
 8004432:	bf00      	nop
 8004434:	20000680 	.word	0x20000680

08004438 <__malloc_lock>:
 8004438:	4801      	ldr	r0, [pc, #4]	@ (8004440 <__malloc_lock+0x8>)
 800443a:	f7ff bf0f 	b.w	800425c <__retarget_lock_acquire_recursive>
 800443e:	bf00      	nop
 8004440:	20000678 	.word	0x20000678

08004444 <__malloc_unlock>:
 8004444:	4801      	ldr	r0, [pc, #4]	@ (800444c <__malloc_unlock+0x8>)
 8004446:	f7ff bf0a 	b.w	800425e <__retarget_lock_release_recursive>
 800444a:	bf00      	nop
 800444c:	20000678 	.word	0x20000678

08004450 <__ssputs_r>:
 8004450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004454:	688e      	ldr	r6, [r1, #8]
 8004456:	461f      	mov	r7, r3
 8004458:	42be      	cmp	r6, r7
 800445a:	680b      	ldr	r3, [r1, #0]
 800445c:	4682      	mov	sl, r0
 800445e:	460c      	mov	r4, r1
 8004460:	4690      	mov	r8, r2
 8004462:	d82d      	bhi.n	80044c0 <__ssputs_r+0x70>
 8004464:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004468:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800446c:	d026      	beq.n	80044bc <__ssputs_r+0x6c>
 800446e:	6965      	ldr	r5, [r4, #20]
 8004470:	6909      	ldr	r1, [r1, #16]
 8004472:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004476:	eba3 0901 	sub.w	r9, r3, r1
 800447a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800447e:	1c7b      	adds	r3, r7, #1
 8004480:	444b      	add	r3, r9
 8004482:	106d      	asrs	r5, r5, #1
 8004484:	429d      	cmp	r5, r3
 8004486:	bf38      	it	cc
 8004488:	461d      	movcc	r5, r3
 800448a:	0553      	lsls	r3, r2, #21
 800448c:	d527      	bpl.n	80044de <__ssputs_r+0x8e>
 800448e:	4629      	mov	r1, r5
 8004490:	f7ff ff52 	bl	8004338 <_malloc_r>
 8004494:	4606      	mov	r6, r0
 8004496:	b360      	cbz	r0, 80044f2 <__ssputs_r+0xa2>
 8004498:	6921      	ldr	r1, [r4, #16]
 800449a:	464a      	mov	r2, r9
 800449c:	f000 fae8 	bl	8004a70 <memcpy>
 80044a0:	89a3      	ldrh	r3, [r4, #12]
 80044a2:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80044a6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80044aa:	81a3      	strh	r3, [r4, #12]
 80044ac:	6126      	str	r6, [r4, #16]
 80044ae:	6165      	str	r5, [r4, #20]
 80044b0:	444e      	add	r6, r9
 80044b2:	eba5 0509 	sub.w	r5, r5, r9
 80044b6:	6026      	str	r6, [r4, #0]
 80044b8:	60a5      	str	r5, [r4, #8]
 80044ba:	463e      	mov	r6, r7
 80044bc:	42be      	cmp	r6, r7
 80044be:	d900      	bls.n	80044c2 <__ssputs_r+0x72>
 80044c0:	463e      	mov	r6, r7
 80044c2:	6820      	ldr	r0, [r4, #0]
 80044c4:	4632      	mov	r2, r6
 80044c6:	4641      	mov	r1, r8
 80044c8:	f000 faa8 	bl	8004a1c <memmove>
 80044cc:	68a3      	ldr	r3, [r4, #8]
 80044ce:	1b9b      	subs	r3, r3, r6
 80044d0:	60a3      	str	r3, [r4, #8]
 80044d2:	6823      	ldr	r3, [r4, #0]
 80044d4:	4433      	add	r3, r6
 80044d6:	6023      	str	r3, [r4, #0]
 80044d8:	2000      	movs	r0, #0
 80044da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80044de:	462a      	mov	r2, r5
 80044e0:	f000 fad4 	bl	8004a8c <_realloc_r>
 80044e4:	4606      	mov	r6, r0
 80044e6:	2800      	cmp	r0, #0
 80044e8:	d1e0      	bne.n	80044ac <__ssputs_r+0x5c>
 80044ea:	6921      	ldr	r1, [r4, #16]
 80044ec:	4650      	mov	r0, sl
 80044ee:	f7ff feb7 	bl	8004260 <_free_r>
 80044f2:	230c      	movs	r3, #12
 80044f4:	f8ca 3000 	str.w	r3, [sl]
 80044f8:	89a3      	ldrh	r3, [r4, #12]
 80044fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80044fe:	81a3      	strh	r3, [r4, #12]
 8004500:	f04f 30ff 	mov.w	r0, #4294967295
 8004504:	e7e9      	b.n	80044da <__ssputs_r+0x8a>
	...

08004508 <_svfiprintf_r>:
 8004508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800450c:	4698      	mov	r8, r3
 800450e:	898b      	ldrh	r3, [r1, #12]
 8004510:	061b      	lsls	r3, r3, #24
 8004512:	b09d      	sub	sp, #116	@ 0x74
 8004514:	4607      	mov	r7, r0
 8004516:	460d      	mov	r5, r1
 8004518:	4614      	mov	r4, r2
 800451a:	d510      	bpl.n	800453e <_svfiprintf_r+0x36>
 800451c:	690b      	ldr	r3, [r1, #16]
 800451e:	b973      	cbnz	r3, 800453e <_svfiprintf_r+0x36>
 8004520:	2140      	movs	r1, #64	@ 0x40
 8004522:	f7ff ff09 	bl	8004338 <_malloc_r>
 8004526:	6028      	str	r0, [r5, #0]
 8004528:	6128      	str	r0, [r5, #16]
 800452a:	b930      	cbnz	r0, 800453a <_svfiprintf_r+0x32>
 800452c:	230c      	movs	r3, #12
 800452e:	603b      	str	r3, [r7, #0]
 8004530:	f04f 30ff 	mov.w	r0, #4294967295
 8004534:	b01d      	add	sp, #116	@ 0x74
 8004536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800453a:	2340      	movs	r3, #64	@ 0x40
 800453c:	616b      	str	r3, [r5, #20]
 800453e:	2300      	movs	r3, #0
 8004540:	9309      	str	r3, [sp, #36]	@ 0x24
 8004542:	2320      	movs	r3, #32
 8004544:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004548:	f8cd 800c 	str.w	r8, [sp, #12]
 800454c:	2330      	movs	r3, #48	@ 0x30
 800454e:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80046ec <_svfiprintf_r+0x1e4>
 8004552:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004556:	f04f 0901 	mov.w	r9, #1
 800455a:	4623      	mov	r3, r4
 800455c:	469a      	mov	sl, r3
 800455e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004562:	b10a      	cbz	r2, 8004568 <_svfiprintf_r+0x60>
 8004564:	2a25      	cmp	r2, #37	@ 0x25
 8004566:	d1f9      	bne.n	800455c <_svfiprintf_r+0x54>
 8004568:	ebba 0b04 	subs.w	fp, sl, r4
 800456c:	d00b      	beq.n	8004586 <_svfiprintf_r+0x7e>
 800456e:	465b      	mov	r3, fp
 8004570:	4622      	mov	r2, r4
 8004572:	4629      	mov	r1, r5
 8004574:	4638      	mov	r0, r7
 8004576:	f7ff ff6b 	bl	8004450 <__ssputs_r>
 800457a:	3001      	adds	r0, #1
 800457c:	f000 80a7 	beq.w	80046ce <_svfiprintf_r+0x1c6>
 8004580:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004582:	445a      	add	r2, fp
 8004584:	9209      	str	r2, [sp, #36]	@ 0x24
 8004586:	f89a 3000 	ldrb.w	r3, [sl]
 800458a:	2b00      	cmp	r3, #0
 800458c:	f000 809f 	beq.w	80046ce <_svfiprintf_r+0x1c6>
 8004590:	2300      	movs	r3, #0
 8004592:	f04f 32ff 	mov.w	r2, #4294967295
 8004596:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800459a:	f10a 0a01 	add.w	sl, sl, #1
 800459e:	9304      	str	r3, [sp, #16]
 80045a0:	9307      	str	r3, [sp, #28]
 80045a2:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80045a6:	931a      	str	r3, [sp, #104]	@ 0x68
 80045a8:	4654      	mov	r4, sl
 80045aa:	2205      	movs	r2, #5
 80045ac:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045b0:	484e      	ldr	r0, [pc, #312]	@ (80046ec <_svfiprintf_r+0x1e4>)
 80045b2:	f7fb fe1d 	bl	80001f0 <memchr>
 80045b6:	9a04      	ldr	r2, [sp, #16]
 80045b8:	b9d8      	cbnz	r0, 80045f2 <_svfiprintf_r+0xea>
 80045ba:	06d0      	lsls	r0, r2, #27
 80045bc:	bf44      	itt	mi
 80045be:	2320      	movmi	r3, #32
 80045c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80045c4:	0711      	lsls	r1, r2, #28
 80045c6:	bf44      	itt	mi
 80045c8:	232b      	movmi	r3, #43	@ 0x2b
 80045ca:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80045ce:	f89a 3000 	ldrb.w	r3, [sl]
 80045d2:	2b2a      	cmp	r3, #42	@ 0x2a
 80045d4:	d015      	beq.n	8004602 <_svfiprintf_r+0xfa>
 80045d6:	9a07      	ldr	r2, [sp, #28]
 80045d8:	4654      	mov	r4, sl
 80045da:	2000      	movs	r0, #0
 80045dc:	f04f 0c0a 	mov.w	ip, #10
 80045e0:	4621      	mov	r1, r4
 80045e2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80045e6:	3b30      	subs	r3, #48	@ 0x30
 80045e8:	2b09      	cmp	r3, #9
 80045ea:	d94b      	bls.n	8004684 <_svfiprintf_r+0x17c>
 80045ec:	b1b0      	cbz	r0, 800461c <_svfiprintf_r+0x114>
 80045ee:	9207      	str	r2, [sp, #28]
 80045f0:	e014      	b.n	800461c <_svfiprintf_r+0x114>
 80045f2:	eba0 0308 	sub.w	r3, r0, r8
 80045f6:	fa09 f303 	lsl.w	r3, r9, r3
 80045fa:	4313      	orrs	r3, r2
 80045fc:	9304      	str	r3, [sp, #16]
 80045fe:	46a2      	mov	sl, r4
 8004600:	e7d2      	b.n	80045a8 <_svfiprintf_r+0xa0>
 8004602:	9b03      	ldr	r3, [sp, #12]
 8004604:	1d19      	adds	r1, r3, #4
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	9103      	str	r1, [sp, #12]
 800460a:	2b00      	cmp	r3, #0
 800460c:	bfbb      	ittet	lt
 800460e:	425b      	neglt	r3, r3
 8004610:	f042 0202 	orrlt.w	r2, r2, #2
 8004614:	9307      	strge	r3, [sp, #28]
 8004616:	9307      	strlt	r3, [sp, #28]
 8004618:	bfb8      	it	lt
 800461a:	9204      	strlt	r2, [sp, #16]
 800461c:	7823      	ldrb	r3, [r4, #0]
 800461e:	2b2e      	cmp	r3, #46	@ 0x2e
 8004620:	d10a      	bne.n	8004638 <_svfiprintf_r+0x130>
 8004622:	7863      	ldrb	r3, [r4, #1]
 8004624:	2b2a      	cmp	r3, #42	@ 0x2a
 8004626:	d132      	bne.n	800468e <_svfiprintf_r+0x186>
 8004628:	9b03      	ldr	r3, [sp, #12]
 800462a:	1d1a      	adds	r2, r3, #4
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	9203      	str	r2, [sp, #12]
 8004630:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004634:	3402      	adds	r4, #2
 8004636:	9305      	str	r3, [sp, #20]
 8004638:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80046fc <_svfiprintf_r+0x1f4>
 800463c:	7821      	ldrb	r1, [r4, #0]
 800463e:	2203      	movs	r2, #3
 8004640:	4650      	mov	r0, sl
 8004642:	f7fb fdd5 	bl	80001f0 <memchr>
 8004646:	b138      	cbz	r0, 8004658 <_svfiprintf_r+0x150>
 8004648:	9b04      	ldr	r3, [sp, #16]
 800464a:	eba0 000a 	sub.w	r0, r0, sl
 800464e:	2240      	movs	r2, #64	@ 0x40
 8004650:	4082      	lsls	r2, r0
 8004652:	4313      	orrs	r3, r2
 8004654:	3401      	adds	r4, #1
 8004656:	9304      	str	r3, [sp, #16]
 8004658:	f814 1b01 	ldrb.w	r1, [r4], #1
 800465c:	4824      	ldr	r0, [pc, #144]	@ (80046f0 <_svfiprintf_r+0x1e8>)
 800465e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004662:	2206      	movs	r2, #6
 8004664:	f7fb fdc4 	bl	80001f0 <memchr>
 8004668:	2800      	cmp	r0, #0
 800466a:	d036      	beq.n	80046da <_svfiprintf_r+0x1d2>
 800466c:	4b21      	ldr	r3, [pc, #132]	@ (80046f4 <_svfiprintf_r+0x1ec>)
 800466e:	bb1b      	cbnz	r3, 80046b8 <_svfiprintf_r+0x1b0>
 8004670:	9b03      	ldr	r3, [sp, #12]
 8004672:	3307      	adds	r3, #7
 8004674:	f023 0307 	bic.w	r3, r3, #7
 8004678:	3308      	adds	r3, #8
 800467a:	9303      	str	r3, [sp, #12]
 800467c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800467e:	4433      	add	r3, r6
 8004680:	9309      	str	r3, [sp, #36]	@ 0x24
 8004682:	e76a      	b.n	800455a <_svfiprintf_r+0x52>
 8004684:	fb0c 3202 	mla	r2, ip, r2, r3
 8004688:	460c      	mov	r4, r1
 800468a:	2001      	movs	r0, #1
 800468c:	e7a8      	b.n	80045e0 <_svfiprintf_r+0xd8>
 800468e:	2300      	movs	r3, #0
 8004690:	3401      	adds	r4, #1
 8004692:	9305      	str	r3, [sp, #20]
 8004694:	4619      	mov	r1, r3
 8004696:	f04f 0c0a 	mov.w	ip, #10
 800469a:	4620      	mov	r0, r4
 800469c:	f810 2b01 	ldrb.w	r2, [r0], #1
 80046a0:	3a30      	subs	r2, #48	@ 0x30
 80046a2:	2a09      	cmp	r2, #9
 80046a4:	d903      	bls.n	80046ae <_svfiprintf_r+0x1a6>
 80046a6:	2b00      	cmp	r3, #0
 80046a8:	d0c6      	beq.n	8004638 <_svfiprintf_r+0x130>
 80046aa:	9105      	str	r1, [sp, #20]
 80046ac:	e7c4      	b.n	8004638 <_svfiprintf_r+0x130>
 80046ae:	fb0c 2101 	mla	r1, ip, r1, r2
 80046b2:	4604      	mov	r4, r0
 80046b4:	2301      	movs	r3, #1
 80046b6:	e7f0      	b.n	800469a <_svfiprintf_r+0x192>
 80046b8:	ab03      	add	r3, sp, #12
 80046ba:	9300      	str	r3, [sp, #0]
 80046bc:	462a      	mov	r2, r5
 80046be:	4b0e      	ldr	r3, [pc, #56]	@ (80046f8 <_svfiprintf_r+0x1f0>)
 80046c0:	a904      	add	r1, sp, #16
 80046c2:	4638      	mov	r0, r7
 80046c4:	f3af 8000 	nop.w
 80046c8:	1c42      	adds	r2, r0, #1
 80046ca:	4606      	mov	r6, r0
 80046cc:	d1d6      	bne.n	800467c <_svfiprintf_r+0x174>
 80046ce:	89ab      	ldrh	r3, [r5, #12]
 80046d0:	065b      	lsls	r3, r3, #25
 80046d2:	f53f af2d 	bmi.w	8004530 <_svfiprintf_r+0x28>
 80046d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80046d8:	e72c      	b.n	8004534 <_svfiprintf_r+0x2c>
 80046da:	ab03      	add	r3, sp, #12
 80046dc:	9300      	str	r3, [sp, #0]
 80046de:	462a      	mov	r2, r5
 80046e0:	4b05      	ldr	r3, [pc, #20]	@ (80046f8 <_svfiprintf_r+0x1f0>)
 80046e2:	a904      	add	r1, sp, #16
 80046e4:	4638      	mov	r0, r7
 80046e6:	f000 f879 	bl	80047dc <_printf_i>
 80046ea:	e7ed      	b.n	80046c8 <_svfiprintf_r+0x1c0>
 80046ec:	08004b50 	.word	0x08004b50
 80046f0:	08004b5a 	.word	0x08004b5a
 80046f4:	00000000 	.word	0x00000000
 80046f8:	08004451 	.word	0x08004451
 80046fc:	08004b56 	.word	0x08004b56

08004700 <_printf_common>:
 8004700:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004704:	4616      	mov	r6, r2
 8004706:	4698      	mov	r8, r3
 8004708:	688a      	ldr	r2, [r1, #8]
 800470a:	690b      	ldr	r3, [r1, #16]
 800470c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004710:	4293      	cmp	r3, r2
 8004712:	bfb8      	it	lt
 8004714:	4613      	movlt	r3, r2
 8004716:	6033      	str	r3, [r6, #0]
 8004718:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800471c:	4607      	mov	r7, r0
 800471e:	460c      	mov	r4, r1
 8004720:	b10a      	cbz	r2, 8004726 <_printf_common+0x26>
 8004722:	3301      	adds	r3, #1
 8004724:	6033      	str	r3, [r6, #0]
 8004726:	6823      	ldr	r3, [r4, #0]
 8004728:	0699      	lsls	r1, r3, #26
 800472a:	bf42      	ittt	mi
 800472c:	6833      	ldrmi	r3, [r6, #0]
 800472e:	3302      	addmi	r3, #2
 8004730:	6033      	strmi	r3, [r6, #0]
 8004732:	6825      	ldr	r5, [r4, #0]
 8004734:	f015 0506 	ands.w	r5, r5, #6
 8004738:	d106      	bne.n	8004748 <_printf_common+0x48>
 800473a:	f104 0a19 	add.w	sl, r4, #25
 800473e:	68e3      	ldr	r3, [r4, #12]
 8004740:	6832      	ldr	r2, [r6, #0]
 8004742:	1a9b      	subs	r3, r3, r2
 8004744:	42ab      	cmp	r3, r5
 8004746:	dc26      	bgt.n	8004796 <_printf_common+0x96>
 8004748:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800474c:	6822      	ldr	r2, [r4, #0]
 800474e:	3b00      	subs	r3, #0
 8004750:	bf18      	it	ne
 8004752:	2301      	movne	r3, #1
 8004754:	0692      	lsls	r2, r2, #26
 8004756:	d42b      	bmi.n	80047b0 <_printf_common+0xb0>
 8004758:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800475c:	4641      	mov	r1, r8
 800475e:	4638      	mov	r0, r7
 8004760:	47c8      	blx	r9
 8004762:	3001      	adds	r0, #1
 8004764:	d01e      	beq.n	80047a4 <_printf_common+0xa4>
 8004766:	6823      	ldr	r3, [r4, #0]
 8004768:	6922      	ldr	r2, [r4, #16]
 800476a:	f003 0306 	and.w	r3, r3, #6
 800476e:	2b04      	cmp	r3, #4
 8004770:	bf02      	ittt	eq
 8004772:	68e5      	ldreq	r5, [r4, #12]
 8004774:	6833      	ldreq	r3, [r6, #0]
 8004776:	1aed      	subeq	r5, r5, r3
 8004778:	68a3      	ldr	r3, [r4, #8]
 800477a:	bf0c      	ite	eq
 800477c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004780:	2500      	movne	r5, #0
 8004782:	4293      	cmp	r3, r2
 8004784:	bfc4      	itt	gt
 8004786:	1a9b      	subgt	r3, r3, r2
 8004788:	18ed      	addgt	r5, r5, r3
 800478a:	2600      	movs	r6, #0
 800478c:	341a      	adds	r4, #26
 800478e:	42b5      	cmp	r5, r6
 8004790:	d11a      	bne.n	80047c8 <_printf_common+0xc8>
 8004792:	2000      	movs	r0, #0
 8004794:	e008      	b.n	80047a8 <_printf_common+0xa8>
 8004796:	2301      	movs	r3, #1
 8004798:	4652      	mov	r2, sl
 800479a:	4641      	mov	r1, r8
 800479c:	4638      	mov	r0, r7
 800479e:	47c8      	blx	r9
 80047a0:	3001      	adds	r0, #1
 80047a2:	d103      	bne.n	80047ac <_printf_common+0xac>
 80047a4:	f04f 30ff 	mov.w	r0, #4294967295
 80047a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80047ac:	3501      	adds	r5, #1
 80047ae:	e7c6      	b.n	800473e <_printf_common+0x3e>
 80047b0:	18e1      	adds	r1, r4, r3
 80047b2:	1c5a      	adds	r2, r3, #1
 80047b4:	2030      	movs	r0, #48	@ 0x30
 80047b6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80047ba:	4422      	add	r2, r4
 80047bc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80047c0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80047c4:	3302      	adds	r3, #2
 80047c6:	e7c7      	b.n	8004758 <_printf_common+0x58>
 80047c8:	2301      	movs	r3, #1
 80047ca:	4622      	mov	r2, r4
 80047cc:	4641      	mov	r1, r8
 80047ce:	4638      	mov	r0, r7
 80047d0:	47c8      	blx	r9
 80047d2:	3001      	adds	r0, #1
 80047d4:	d0e6      	beq.n	80047a4 <_printf_common+0xa4>
 80047d6:	3601      	adds	r6, #1
 80047d8:	e7d9      	b.n	800478e <_printf_common+0x8e>
	...

080047dc <_printf_i>:
 80047dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80047e0:	7e0f      	ldrb	r7, [r1, #24]
 80047e2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80047e4:	2f78      	cmp	r7, #120	@ 0x78
 80047e6:	4691      	mov	r9, r2
 80047e8:	4680      	mov	r8, r0
 80047ea:	460c      	mov	r4, r1
 80047ec:	469a      	mov	sl, r3
 80047ee:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80047f2:	d807      	bhi.n	8004804 <_printf_i+0x28>
 80047f4:	2f62      	cmp	r7, #98	@ 0x62
 80047f6:	d80a      	bhi.n	800480e <_printf_i+0x32>
 80047f8:	2f00      	cmp	r7, #0
 80047fa:	f000 80d2 	beq.w	80049a2 <_printf_i+0x1c6>
 80047fe:	2f58      	cmp	r7, #88	@ 0x58
 8004800:	f000 80b9 	beq.w	8004976 <_printf_i+0x19a>
 8004804:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004808:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800480c:	e03a      	b.n	8004884 <_printf_i+0xa8>
 800480e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8004812:	2b15      	cmp	r3, #21
 8004814:	d8f6      	bhi.n	8004804 <_printf_i+0x28>
 8004816:	a101      	add	r1, pc, #4	@ (adr r1, 800481c <_printf_i+0x40>)
 8004818:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800481c:	08004875 	.word	0x08004875
 8004820:	08004889 	.word	0x08004889
 8004824:	08004805 	.word	0x08004805
 8004828:	08004805 	.word	0x08004805
 800482c:	08004805 	.word	0x08004805
 8004830:	08004805 	.word	0x08004805
 8004834:	08004889 	.word	0x08004889
 8004838:	08004805 	.word	0x08004805
 800483c:	08004805 	.word	0x08004805
 8004840:	08004805 	.word	0x08004805
 8004844:	08004805 	.word	0x08004805
 8004848:	08004989 	.word	0x08004989
 800484c:	080048b3 	.word	0x080048b3
 8004850:	08004943 	.word	0x08004943
 8004854:	08004805 	.word	0x08004805
 8004858:	08004805 	.word	0x08004805
 800485c:	080049ab 	.word	0x080049ab
 8004860:	08004805 	.word	0x08004805
 8004864:	080048b3 	.word	0x080048b3
 8004868:	08004805 	.word	0x08004805
 800486c:	08004805 	.word	0x08004805
 8004870:	0800494b 	.word	0x0800494b
 8004874:	6833      	ldr	r3, [r6, #0]
 8004876:	1d1a      	adds	r2, r3, #4
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	6032      	str	r2, [r6, #0]
 800487c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004880:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004884:	2301      	movs	r3, #1
 8004886:	e09d      	b.n	80049c4 <_printf_i+0x1e8>
 8004888:	6833      	ldr	r3, [r6, #0]
 800488a:	6820      	ldr	r0, [r4, #0]
 800488c:	1d19      	adds	r1, r3, #4
 800488e:	6031      	str	r1, [r6, #0]
 8004890:	0606      	lsls	r6, r0, #24
 8004892:	d501      	bpl.n	8004898 <_printf_i+0xbc>
 8004894:	681d      	ldr	r5, [r3, #0]
 8004896:	e003      	b.n	80048a0 <_printf_i+0xc4>
 8004898:	0645      	lsls	r5, r0, #25
 800489a:	d5fb      	bpl.n	8004894 <_printf_i+0xb8>
 800489c:	f9b3 5000 	ldrsh.w	r5, [r3]
 80048a0:	2d00      	cmp	r5, #0
 80048a2:	da03      	bge.n	80048ac <_printf_i+0xd0>
 80048a4:	232d      	movs	r3, #45	@ 0x2d
 80048a6:	426d      	negs	r5, r5
 80048a8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80048ac:	4859      	ldr	r0, [pc, #356]	@ (8004a14 <_printf_i+0x238>)
 80048ae:	230a      	movs	r3, #10
 80048b0:	e011      	b.n	80048d6 <_printf_i+0xfa>
 80048b2:	6821      	ldr	r1, [r4, #0]
 80048b4:	6833      	ldr	r3, [r6, #0]
 80048b6:	0608      	lsls	r0, r1, #24
 80048b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80048bc:	d402      	bmi.n	80048c4 <_printf_i+0xe8>
 80048be:	0649      	lsls	r1, r1, #25
 80048c0:	bf48      	it	mi
 80048c2:	b2ad      	uxthmi	r5, r5
 80048c4:	2f6f      	cmp	r7, #111	@ 0x6f
 80048c6:	4853      	ldr	r0, [pc, #332]	@ (8004a14 <_printf_i+0x238>)
 80048c8:	6033      	str	r3, [r6, #0]
 80048ca:	bf14      	ite	ne
 80048cc:	230a      	movne	r3, #10
 80048ce:	2308      	moveq	r3, #8
 80048d0:	2100      	movs	r1, #0
 80048d2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80048d6:	6866      	ldr	r6, [r4, #4]
 80048d8:	60a6      	str	r6, [r4, #8]
 80048da:	2e00      	cmp	r6, #0
 80048dc:	bfa2      	ittt	ge
 80048de:	6821      	ldrge	r1, [r4, #0]
 80048e0:	f021 0104 	bicge.w	r1, r1, #4
 80048e4:	6021      	strge	r1, [r4, #0]
 80048e6:	b90d      	cbnz	r5, 80048ec <_printf_i+0x110>
 80048e8:	2e00      	cmp	r6, #0
 80048ea:	d04b      	beq.n	8004984 <_printf_i+0x1a8>
 80048ec:	4616      	mov	r6, r2
 80048ee:	fbb5 f1f3 	udiv	r1, r5, r3
 80048f2:	fb03 5711 	mls	r7, r3, r1, r5
 80048f6:	5dc7      	ldrb	r7, [r0, r7]
 80048f8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80048fc:	462f      	mov	r7, r5
 80048fe:	42bb      	cmp	r3, r7
 8004900:	460d      	mov	r5, r1
 8004902:	d9f4      	bls.n	80048ee <_printf_i+0x112>
 8004904:	2b08      	cmp	r3, #8
 8004906:	d10b      	bne.n	8004920 <_printf_i+0x144>
 8004908:	6823      	ldr	r3, [r4, #0]
 800490a:	07df      	lsls	r7, r3, #31
 800490c:	d508      	bpl.n	8004920 <_printf_i+0x144>
 800490e:	6923      	ldr	r3, [r4, #16]
 8004910:	6861      	ldr	r1, [r4, #4]
 8004912:	4299      	cmp	r1, r3
 8004914:	bfde      	ittt	le
 8004916:	2330      	movle	r3, #48	@ 0x30
 8004918:	f806 3c01 	strble.w	r3, [r6, #-1]
 800491c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004920:	1b92      	subs	r2, r2, r6
 8004922:	6122      	str	r2, [r4, #16]
 8004924:	f8cd a000 	str.w	sl, [sp]
 8004928:	464b      	mov	r3, r9
 800492a:	aa03      	add	r2, sp, #12
 800492c:	4621      	mov	r1, r4
 800492e:	4640      	mov	r0, r8
 8004930:	f7ff fee6 	bl	8004700 <_printf_common>
 8004934:	3001      	adds	r0, #1
 8004936:	d14a      	bne.n	80049ce <_printf_i+0x1f2>
 8004938:	f04f 30ff 	mov.w	r0, #4294967295
 800493c:	b004      	add	sp, #16
 800493e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004942:	6823      	ldr	r3, [r4, #0]
 8004944:	f043 0320 	orr.w	r3, r3, #32
 8004948:	6023      	str	r3, [r4, #0]
 800494a:	4833      	ldr	r0, [pc, #204]	@ (8004a18 <_printf_i+0x23c>)
 800494c:	2778      	movs	r7, #120	@ 0x78
 800494e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8004952:	6823      	ldr	r3, [r4, #0]
 8004954:	6831      	ldr	r1, [r6, #0]
 8004956:	061f      	lsls	r7, r3, #24
 8004958:	f851 5b04 	ldr.w	r5, [r1], #4
 800495c:	d402      	bmi.n	8004964 <_printf_i+0x188>
 800495e:	065f      	lsls	r7, r3, #25
 8004960:	bf48      	it	mi
 8004962:	b2ad      	uxthmi	r5, r5
 8004964:	6031      	str	r1, [r6, #0]
 8004966:	07d9      	lsls	r1, r3, #31
 8004968:	bf44      	itt	mi
 800496a:	f043 0320 	orrmi.w	r3, r3, #32
 800496e:	6023      	strmi	r3, [r4, #0]
 8004970:	b11d      	cbz	r5, 800497a <_printf_i+0x19e>
 8004972:	2310      	movs	r3, #16
 8004974:	e7ac      	b.n	80048d0 <_printf_i+0xf4>
 8004976:	4827      	ldr	r0, [pc, #156]	@ (8004a14 <_printf_i+0x238>)
 8004978:	e7e9      	b.n	800494e <_printf_i+0x172>
 800497a:	6823      	ldr	r3, [r4, #0]
 800497c:	f023 0320 	bic.w	r3, r3, #32
 8004980:	6023      	str	r3, [r4, #0]
 8004982:	e7f6      	b.n	8004972 <_printf_i+0x196>
 8004984:	4616      	mov	r6, r2
 8004986:	e7bd      	b.n	8004904 <_printf_i+0x128>
 8004988:	6833      	ldr	r3, [r6, #0]
 800498a:	6825      	ldr	r5, [r4, #0]
 800498c:	6961      	ldr	r1, [r4, #20]
 800498e:	1d18      	adds	r0, r3, #4
 8004990:	6030      	str	r0, [r6, #0]
 8004992:	062e      	lsls	r6, r5, #24
 8004994:	681b      	ldr	r3, [r3, #0]
 8004996:	d501      	bpl.n	800499c <_printf_i+0x1c0>
 8004998:	6019      	str	r1, [r3, #0]
 800499a:	e002      	b.n	80049a2 <_printf_i+0x1c6>
 800499c:	0668      	lsls	r0, r5, #25
 800499e:	d5fb      	bpl.n	8004998 <_printf_i+0x1bc>
 80049a0:	8019      	strh	r1, [r3, #0]
 80049a2:	2300      	movs	r3, #0
 80049a4:	6123      	str	r3, [r4, #16]
 80049a6:	4616      	mov	r6, r2
 80049a8:	e7bc      	b.n	8004924 <_printf_i+0x148>
 80049aa:	6833      	ldr	r3, [r6, #0]
 80049ac:	1d1a      	adds	r2, r3, #4
 80049ae:	6032      	str	r2, [r6, #0]
 80049b0:	681e      	ldr	r6, [r3, #0]
 80049b2:	6862      	ldr	r2, [r4, #4]
 80049b4:	2100      	movs	r1, #0
 80049b6:	4630      	mov	r0, r6
 80049b8:	f7fb fc1a 	bl	80001f0 <memchr>
 80049bc:	b108      	cbz	r0, 80049c2 <_printf_i+0x1e6>
 80049be:	1b80      	subs	r0, r0, r6
 80049c0:	6060      	str	r0, [r4, #4]
 80049c2:	6863      	ldr	r3, [r4, #4]
 80049c4:	6123      	str	r3, [r4, #16]
 80049c6:	2300      	movs	r3, #0
 80049c8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80049cc:	e7aa      	b.n	8004924 <_printf_i+0x148>
 80049ce:	6923      	ldr	r3, [r4, #16]
 80049d0:	4632      	mov	r2, r6
 80049d2:	4649      	mov	r1, r9
 80049d4:	4640      	mov	r0, r8
 80049d6:	47d0      	blx	sl
 80049d8:	3001      	adds	r0, #1
 80049da:	d0ad      	beq.n	8004938 <_printf_i+0x15c>
 80049dc:	6823      	ldr	r3, [r4, #0]
 80049de:	079b      	lsls	r3, r3, #30
 80049e0:	d413      	bmi.n	8004a0a <_printf_i+0x22e>
 80049e2:	68e0      	ldr	r0, [r4, #12]
 80049e4:	9b03      	ldr	r3, [sp, #12]
 80049e6:	4298      	cmp	r0, r3
 80049e8:	bfb8      	it	lt
 80049ea:	4618      	movlt	r0, r3
 80049ec:	e7a6      	b.n	800493c <_printf_i+0x160>
 80049ee:	2301      	movs	r3, #1
 80049f0:	4632      	mov	r2, r6
 80049f2:	4649      	mov	r1, r9
 80049f4:	4640      	mov	r0, r8
 80049f6:	47d0      	blx	sl
 80049f8:	3001      	adds	r0, #1
 80049fa:	d09d      	beq.n	8004938 <_printf_i+0x15c>
 80049fc:	3501      	adds	r5, #1
 80049fe:	68e3      	ldr	r3, [r4, #12]
 8004a00:	9903      	ldr	r1, [sp, #12]
 8004a02:	1a5b      	subs	r3, r3, r1
 8004a04:	42ab      	cmp	r3, r5
 8004a06:	dcf2      	bgt.n	80049ee <_printf_i+0x212>
 8004a08:	e7eb      	b.n	80049e2 <_printf_i+0x206>
 8004a0a:	2500      	movs	r5, #0
 8004a0c:	f104 0619 	add.w	r6, r4, #25
 8004a10:	e7f5      	b.n	80049fe <_printf_i+0x222>
 8004a12:	bf00      	nop
 8004a14:	08004b61 	.word	0x08004b61
 8004a18:	08004b72 	.word	0x08004b72

08004a1c <memmove>:
 8004a1c:	4288      	cmp	r0, r1
 8004a1e:	b510      	push	{r4, lr}
 8004a20:	eb01 0402 	add.w	r4, r1, r2
 8004a24:	d902      	bls.n	8004a2c <memmove+0x10>
 8004a26:	4284      	cmp	r4, r0
 8004a28:	4623      	mov	r3, r4
 8004a2a:	d807      	bhi.n	8004a3c <memmove+0x20>
 8004a2c:	1e43      	subs	r3, r0, #1
 8004a2e:	42a1      	cmp	r1, r4
 8004a30:	d008      	beq.n	8004a44 <memmove+0x28>
 8004a32:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004a36:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004a3a:	e7f8      	b.n	8004a2e <memmove+0x12>
 8004a3c:	4402      	add	r2, r0
 8004a3e:	4601      	mov	r1, r0
 8004a40:	428a      	cmp	r2, r1
 8004a42:	d100      	bne.n	8004a46 <memmove+0x2a>
 8004a44:	bd10      	pop	{r4, pc}
 8004a46:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004a4a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004a4e:	e7f7      	b.n	8004a40 <memmove+0x24>

08004a50 <_sbrk_r>:
 8004a50:	b538      	push	{r3, r4, r5, lr}
 8004a52:	4d06      	ldr	r5, [pc, #24]	@ (8004a6c <_sbrk_r+0x1c>)
 8004a54:	2300      	movs	r3, #0
 8004a56:	4604      	mov	r4, r0
 8004a58:	4608      	mov	r0, r1
 8004a5a:	602b      	str	r3, [r5, #0]
 8004a5c:	f7fc fb1a 	bl	8001094 <_sbrk>
 8004a60:	1c43      	adds	r3, r0, #1
 8004a62:	d102      	bne.n	8004a6a <_sbrk_r+0x1a>
 8004a64:	682b      	ldr	r3, [r5, #0]
 8004a66:	b103      	cbz	r3, 8004a6a <_sbrk_r+0x1a>
 8004a68:	6023      	str	r3, [r4, #0]
 8004a6a:	bd38      	pop	{r3, r4, r5, pc}
 8004a6c:	20000674 	.word	0x20000674

08004a70 <memcpy>:
 8004a70:	440a      	add	r2, r1
 8004a72:	4291      	cmp	r1, r2
 8004a74:	f100 33ff 	add.w	r3, r0, #4294967295
 8004a78:	d100      	bne.n	8004a7c <memcpy+0xc>
 8004a7a:	4770      	bx	lr
 8004a7c:	b510      	push	{r4, lr}
 8004a7e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004a82:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004a86:	4291      	cmp	r1, r2
 8004a88:	d1f9      	bne.n	8004a7e <memcpy+0xe>
 8004a8a:	bd10      	pop	{r4, pc}

08004a8c <_realloc_r>:
 8004a8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004a90:	4680      	mov	r8, r0
 8004a92:	4615      	mov	r5, r2
 8004a94:	460c      	mov	r4, r1
 8004a96:	b921      	cbnz	r1, 8004aa2 <_realloc_r+0x16>
 8004a98:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004a9c:	4611      	mov	r1, r2
 8004a9e:	f7ff bc4b 	b.w	8004338 <_malloc_r>
 8004aa2:	b92a      	cbnz	r2, 8004ab0 <_realloc_r+0x24>
 8004aa4:	f7ff fbdc 	bl	8004260 <_free_r>
 8004aa8:	2400      	movs	r4, #0
 8004aaa:	4620      	mov	r0, r4
 8004aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ab0:	f000 f81a 	bl	8004ae8 <_malloc_usable_size_r>
 8004ab4:	4285      	cmp	r5, r0
 8004ab6:	4606      	mov	r6, r0
 8004ab8:	d802      	bhi.n	8004ac0 <_realloc_r+0x34>
 8004aba:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8004abe:	d8f4      	bhi.n	8004aaa <_realloc_r+0x1e>
 8004ac0:	4629      	mov	r1, r5
 8004ac2:	4640      	mov	r0, r8
 8004ac4:	f7ff fc38 	bl	8004338 <_malloc_r>
 8004ac8:	4607      	mov	r7, r0
 8004aca:	2800      	cmp	r0, #0
 8004acc:	d0ec      	beq.n	8004aa8 <_realloc_r+0x1c>
 8004ace:	42b5      	cmp	r5, r6
 8004ad0:	462a      	mov	r2, r5
 8004ad2:	4621      	mov	r1, r4
 8004ad4:	bf28      	it	cs
 8004ad6:	4632      	movcs	r2, r6
 8004ad8:	f7ff ffca 	bl	8004a70 <memcpy>
 8004adc:	4621      	mov	r1, r4
 8004ade:	4640      	mov	r0, r8
 8004ae0:	f7ff fbbe 	bl	8004260 <_free_r>
 8004ae4:	463c      	mov	r4, r7
 8004ae6:	e7e0      	b.n	8004aaa <_realloc_r+0x1e>

08004ae8 <_malloc_usable_size_r>:
 8004ae8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004aec:	1f18      	subs	r0, r3, #4
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	bfbc      	itt	lt
 8004af2:	580b      	ldrlt	r3, [r1, r0]
 8004af4:	18c0      	addlt	r0, r0, r3
 8004af6:	4770      	bx	lr

08004af8 <_init>:
 8004af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004afa:	bf00      	nop
 8004afc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004afe:	bc08      	pop	{r3}
 8004b00:	469e      	mov	lr, r3
 8004b02:	4770      	bx	lr

08004b04 <_fini>:
 8004b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004b06:	bf00      	nop
 8004b08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004b0a:	bc08      	pop	{r3}
 8004b0c:	469e      	mov	lr, r3
 8004b0e:	4770      	bx	lr
